'From Pharo4.0 of 18 March 2013 [Latest update: #40607] on 14 April 2015 at 9:52:49.547808 am'!----STARTUP----2015-04-14T09:52:16.024237+02:00 as /Users/denker/Desktop/40607/Pharo-40607.image!----QUIT----2015-04-14T09:52:53.433201+02:00 Pharo-40607.image priorSource: 0!----STARTUP----2015-04-14T09:53:10.503839+02:00 as /Users/denker/Desktop/40607/Pharo-40607.image!----QUIT----2015-04-14T09:53:23.786467+02:00 Pharo-40607.image priorSource: 196!----STARTUP----2015-04-14T12:27:52.175891+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 4/14/2015 12:25' prior: 55184883!commentForCurrentUpdate ^ 'new .sources'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 4/14/2015 12:25'!script608	^ 'AST-Core-TheIntegrator.283.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.189.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.683.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.171.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.88.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.120.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2011.mczKernelTests-TheIntegrator.767.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.115.mczManifest-Core-TheIntegrator.215.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1009.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.341.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.166.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.909.mczNautilus-Tests-TheIntegrator.12.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.641.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.55.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.270.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-AndreiChis.187.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.110.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-StephaneDucasse.35.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.236.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.8.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-StephaneDucasse.1091.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.66.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 4/14/2015 12:25'!update40608	"self new update40608"	self withUpdateLog: 'new .sources'.	self loadTogether: self script608 merge: false.	self flushCaches.self cleanRepositories.! !ScriptLoader removeSelector: #update40607!ScriptLoader removeSelector: #script607!"ScriptLoader40"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.786.mcz') load.ScriptLoader new update40608.!----End fileIn----!----QUIT----2015-04-14T12:27:53.326572+02:00 Pharo.image priorSource: 376!----STARTUP----2015-04-14T12:27:53.4798+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-04-14T12:27:57.217802+02:00 Pharo.image priorSource: 15532!----STARTUP----2015-04-14T12:42:49.686617+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-04-14T12:42:49.754863+02:00 Pharo-40608.image priorSource: 15722!----STARTUP----2015-04-15T17:06:01.522135+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'EstebanLorenzano 4/15/2015 17:02' prior: 33555098!commentForCurrentUpdate ^ '15341 remove download sources setting	https://pharo.fogbugz.com/f/cases/1534115342 Metaclasses should not have a source pointer	https://pharo.fogbugz.com/f/cases/15342'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'EstebanLorenzano 4/15/2015 17:02'!script609	^ 'AST-Core-TheIntegrator.283.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.189.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.683.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.171.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.88.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.120.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2011.mczKernelTests-TheIntegrator.767.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.115.mczManifest-Core-TheIntegrator.215.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1009.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.341.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.166.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.909.mczNautilus-Tests-TheIntegrator.12.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.641.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.55.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.270.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-AndreiChis.187.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.110.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.236.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.8.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.66.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'EstebanLorenzano 4/15/2015 17:02'!update40609	"self new update40609"	Smalltalk allClasses do: [ :each | each class organization comment: nil; commentStamp: nil ].	self withUpdateLog: '15341 remove download sources setting	https://pharo.fogbugz.com/f/cases/1534115342 Metaclasses should not have a source pointer	https://pharo.fogbugz.com/f/cases/15342'.	self loadTogether: self script609 merge: false.	[ | workspace window |		workspace := Workspace openContents: '"Pharo 4.0=========Welcome to Pharo, an immersive live programming environment.You can learn pharo by highlighting the next line and selecting [Do it] from the context menu:"PharoTutorial go."Pharo 4.0 already comes pre-loaded with a rich set of packages that you can use to explore the system and develop your own applications. However there is also a huge library of user contributed projects that you can also load using the ''Configurations Browser'' by executing:"MetacelloConfigurationBrowser open."This browser is also accessible from the World | Tools menu (just click the desktop, select Tools, and then Configuration Browser).You can find information about Pharo on http://www.pharo.org. Some useful starting points are:- Joining us and getting help http://www.pharo.org/get-help- Getting the Pharo By Example book (available as a free PDF): http://www.pharobyexample.org- Browser the documentation http://www.pharo.org/documentation- Reporting problems http://www.pharo.org/get-involvedAbout this release---------------------------There are more than 1600 issues treated in this release. Sumarized issues for 4.0:=========================New stuff---------- GTools (Playground, Inspector, Spotter)- Slots model instance variables as first class enities and enable meta-programming on this level.- ShoreLine reporter: submit information automatically when errors happen- TxModel, a modern text model who works with Athens (Preview)- OSWindow, a new way to handle windows and input events (Preview)- Glamour, a mature declarative browser builder- Dark themeUpdated stuff-------------- Zinc/Zodiac- Fuel- VersionnerAnd a lot more!!You can check a more detailed explanation here: https://github.com/pharo-project/pharo-changelogs/blob/master/Pharo40ChangeLogs.md"'	label: 'Welcome to Pharo 4.0!!'.	window := workspace dependents detect: [ :each | 		(each isKindOf: SystemWindow) and: [ each label = 'Welcome to Pharo 4.0!!' ] ].	window extent: 700@400.window center: Display extent / 2  ] value.	self flushCaches.self cleanRepositories.! !ScriptLoader removeSelector: #update40608!ScriptLoader removeSelector: #script608!"ScriptLoader40"!!SmalltalkImage commentStamp: 'StephaneDucasse 6/7/2011 15:48' prior: 55982943!My singleton is a central entry point to the system.It has many roles and responsibilities (to be documented)	- startup/shutdown image	- source management	- namespace access	- tool access	- platform access	- VM information and parameters		Startup-----------At startup and shutdown the image execute the methods startUp: and shutdown: of registered classes (registered using addToStartUpList:, addToShutDownList:, ... methods and friends).	Startup phasesDuring the first stage of start up the UI manager, the default uimanager is switched to a specific non interactive ui manager (StartupUIManager). Note that this specific non interactive UIManager kills the system on any attempt to open windows and interaction. So be warned, don't use interaction in the first phase. Then all registered classes execute their start up procedures (which should not imply interactive behavior). After startup list is finished, any deferred startup actions are executed, which you can add using the methodaddDeferredStartupAction: method.  !!SystemSystemSettings class methodsFor: 'settings' stamp: 'EstebanLorenzano 4/15/2015 15:03' prior: 58207175!systemSettingOn: aBuilder	<systemsettings>	(aBuilder group: #pharoSystem) 		label: 'System';		description: 'General system settings' ;		with: [			(aBuilder setting: #serverMode)				label: 'Server mode';				target: WorldState;				description: 'If enabled, then each main rendering loop will always wait a complete delay of 50ms' .			(aBuilder setting: #useLocale)				label: 'Use locale';				target: Locale;				selector: #activated;				description: 'Use the system locale to set the system language at startup.']! !!SmalltalkImage commentStamp: 'StephaneDucasse 6/7/2011 15:48' prior: 33587555!My singleton is a central entry point to the system.It has many roles and responsibilities (to be documented)	- startup/shutdown image	- source management	- namespace access	- tool access	- platform access	- VM information and parameters		Startup-----------At startup and shutdown the image execute the methods startUp: and shutdown: of registered classes (registered using addToStartUpList:, addToShutDownList:, ... methods and friends).	Startup phasesDuring the first stage of start up the UI manager, the default uimanager is switched to a specific non interactive ui manager (StartupUIManager). Note that this specific non interactive UIManager kills the system on any attempt to open windows and interaction. So be warned, don't use interaction in the first phase. Then all registered classes execute their start up procedures (which should not imply interactive behavior). After startup list is finished, any deferred startup actions are executed, which you can add using the methodaddDeferredStartupAction: method.  !SmalltalkImage removeSelector: #shouldDownloadSourcesFile!SmalltalkImage class removeSelector: #shouldDownloadSourcesFile:!SmalltalkImage class removeSelector: #shouldDownloadSourcesFile!"Settings-System"!"System-Support"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-EstebanLorenzano.789.mcz') load.ScriptLoader new update40609.!----End fileIn----!----QUIT----2015-04-15T17:06:04.321261+02:00 Pharo.image priorSource: 15916!----STARTUP----2015-04-15T17:06:04.475077+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-04-15T17:06:08.61668+02:00 Pharo.image priorSource: 36763!----STARTUP----2015-04-15T17:17:40.057035+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-04-15T17:17:40.126384+02:00 Pharo-40609.image priorSource: 36957!----STARTUP----2015-04-23T13:55:03.41202+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 4/23/2015 13:52' prior: 33570647!commentForCurrentUpdate ^ '15349 The menu in the PharoTutorial has an erroneous label	https://pharo.fogbugz.com/f/cases/1534915375 backport pharo4: 15332 [Spec Help] protocol and protocol-events dont exist anymore	https://pharo.fogbugz.com/f/cases/15375'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 4/23/2015 13:52'!script610	^ 'AST-Core-TheIntegrator.283.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.189.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.683.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.171.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.88.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2011.mczKernelTests-TheIntegrator.767.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.115.mczManifest-Core-TheIntegrator.215.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1009.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.341.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.166.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.909.mczNautilus-Tests-TheIntegrator.12.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.641.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.57.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.270.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-AndreiChis.187.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.110.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.236.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.66.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 4/23/2015 13:52'!update40610	"self new update40610"	self withUpdateLog: '15349 The menu in the PharoTutorial has an erroneous label	https://pharo.fogbugz.com/f/cases/1534915375 backport pharo4: 15332 [Spec Help] protocol and protocol-events dont exist anymore	https://pharo.fogbugz.com/f/cases/15375'.	self loadTogether: self script610 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update40609!ScriptLoader removeSelector: #script609!"ScriptLoader40"!!HelpBrowser methodsFor: 'ui' stamp: 'SvenVanCaekenberghe 4/16/2015 21:29' prior: 26430124!menu	^ MenuMorph new		add: 'do it (d)' selector: #doIt;		add: 'print it (p)' selector: #printIt;		add: 'inspect it (i)' selector: #inspectIt;		yourself! !!SpecExamples class methodsFor: 'pages' stamp: 'BernardoContreras 4/17/2015 15:20' prior: 57222476!firstExample	^HelpTopic 		title: 'A first example: ModelList'		contents: 'Creating a specific UI always starts with the subclassing of Composable-Model. Each sub widget is stored into an instance variable of the newly created class. All the code presented here is already in the image so you can simply do: 			ModelList browseAnd follow the tutorial while browsing the code. So let''s subclass ComposableModel.	ComposableModel subclass: #ModelList	instanceVariableNames: ''list''	classVariableNames: ''	category: ''Spec-Examples''				The first required step then is to instantiate and define the sub widgets. This step is done in the method initializeWidgets. It creates the list and populates it with the required classes, in alphabetical order.	ModelList>>initializeWidgets	list := self newList.	list items: (AbstractWidgetModel allSubclasses	sorted: [:a :b | a name < b name ]).	self focusOrder add: list	The second required step is to define a layout, which is done on the class side. Since there is here only one sub widget, the layout is quite simple. It simply returns a layout that contains only the list:	ModelList class>>#defaultSpec	<spec: #default>	^ SpecLayout composed	add: #list;	yourself	The three last methods to define on ModelList are a getter, a method to display the UI title and a method to register to list selection changes.	"accessing"	ModelList>>list		^ list	"api"	ModelList>>title		^ ''Widgets''	"api-events"	ModelList>>whenSelectedItemChanged: aBlock		list whenSelectedItemChanged: aBlockThe first UI is now done. The result can be seen by executing the following snippet of code: 	ModelList new openWithSpec.'! !!SpecExamples class methodsFor: 'pages' stamp: 'BernardoContreras 4/17/2015 15:25' prior: 57224262!secondExample	^HelpTopic 		title: 'A second example: Protocol List'		contents: 'The next user interface is the protocol list. This UI combines two sub widgets: 		a list		a label.So again, we start by subclassing ComposableModel:	ComposableModel subclass: #ProtocolList	instanceVariableNames: ''label protocols''	classVariableNames: ''	category: ''Spec-Examples''	The initializeWidgets method for this UI is quite similar to the method in ModelList:	ProtocolList>>initializeWidgets		protocols := self newList.		label := self newLabel.		label text: ''Protocol''.		protocols displayBlock: [ :m | m selector ].		self focusOrder add: protocols	The layout method is quite different though. Now the sub widgets need to be placed more specifically than in the previous example, we have to build a layout that has a column with the label on top and the list taking all the space that is left.	ProtocolList class>>defaultSpec		<spec: #default>		^ SpecLayout composed		newColumn: [ :column |			column				add: #label					height: self toolbarHeight;					add: #protocols ];		yourself			The remaining methods are getters, sub widget delegation methods, a method to display the title, and a method to register to list selection changes: 	"accessing"	ProtocolList>>label		^ label	"accessing"	ProtocolList>>protocols		^ protocols	"api"	ProtocolList>>items: aCollection		protocols items: aCollection	"api"	ProtocolList>>label: aText		label label: aText	"api"	ProtocolList>>resetSelection		protocols resetSelection	"api"	ProtocolList>>title		^ ''Protocol widget''	"api-events"	ProtocolList>>whenSelectedItemChanged: aBlock		protocols whenSelectedItemChanged: aBlockThe ProtocolList UI can be seen by evaluating: ProtocolList new openWithSpec.'! !!LessonView methodsFor: 'gui' stamp: 'SvenVanCaekenberghe 4/16/2015 21:29' prior: 27700877!menu	^ MenuMorph new		add: 'do it (d)' selector: #doIt;		add: 'print it (p)' selector: #printIt;		add: 'inspect it (i)' selector: #inspectIt;		yourself! !!SpecHelpTopics class methodsFor: 'pages' stamp: 'BernardoContreras 4/17/2015 15:19' prior: 57227371!introduction	^HelpTopic 			title: 'About Spec'		contents: 'Spec has been originally developed by B. Van Ryseghem based on an idea of S. Ducasse. It is now maintained by the community and the pharo core team.. Spec is an attempt to support UI logic reuse. Spec is influenced by VisualWorks and Dolphin MVP in the sense that it recognizes the need for a Presenter or Application-Model class, in Spec called ComposableModel that manages the logic and the link between widgets and domain objects. Spec, following the tradition, uses value holders, simple object raising announcements when their values, often domain objects, change.'! !"HelpSystem-Core"!"ProfStef-Core"!"Spec-Help"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.790.mcz') load.ScriptLoader new update40610.!----End fileIn----!----QUIT----2015-04-23T13:55:05.772768+02:00 Pharo.image priorSource: 37150!----STARTUP----2015-04-23T13:55:05.929678+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-04-23T13:55:09.820052+02:00 Pharo.image priorSource: 57709!----STARTUP----2015-04-23T14:06:29.625404+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-04-23T14:06:29.693694+02:00 Pharo-40610.image priorSource: 57903!----STARTUP----2015-04-24T11:30:58.269253+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 4/24/2015 11:28' prior: 33591877!commentForCurrentUpdate ^ '15338 OrderedDictionary changes to merge	https://pharo.fogbugz.com/f/cases/1533815339 Monticello with spotter extension methods throws MNU errors when browsing packages in repos that dont contain every package	https://pharo.fogbugz.com/f/cases/15339'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 4/24/2015 11:28'!script611	^ 'AST-Core-TheIntegrator.283.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.192.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.685.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.171.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.88.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2011.mczKernelTests-TheIntegrator.767.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.115.mczManifest-Core-TheIntegrator.215.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1011.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.343.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.166.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.909.mczNautilus-Tests-TheIntegrator.12.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.641.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.57.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.270.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-AndreiChis.187.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.110.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.236.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.66.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 4/24/2015 11:28'!update40611	"self new update40611"	self withUpdateLog: '15338 OrderedDictionary changes to merge	https://pharo.fogbugz.com/f/cases/1533815339 Monticello with spotter extension methods throws MNU errors when browsing packages in repos that dont contain every package	https://pharo.fogbugz.com/f/cases/15339'.	self loadTogether: self script611 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update40610!ScriptLoader removeSelector: #script610!"ScriptLoader40"!!MCFileRepositoryInspector methodsFor: 'accessing' stamp: 'ThierryGoubier 4/15/2015 11:22' prior: 28331243!selectedPackageAncestors	selectedPackageAncestors		ifNil: [ 			selectedPackage				ifNotNil: [ 					(MCWorkingCopy registry at: (MCPackage named: selectedPackage) ifAbsent: [  ])						ifNotNil: [ :aWorkingCopy | selectedPackageAncestors := aWorkingCopy ancestry breadthFirstAncestors collect: #name ] ] ].	^ selectedPackageAncestors! !!OrderedIdentityDictionaryTest methodsFor: 'testing' stamp: 'monty 12/15/2014 16:44'!isTestingIdentityDictionary	^ true! !!MCVersionInfo methodsFor: 'initialization' stamp: 'ThierryGoubier 4/15/2015 09:41' prior: 28762933!initializeWithName: vName id: aUUID message: aString date: aDate time: aTime author: initials ancestors: aCollection stepChildren: stepCollection	name := vName.	id := aUUID.	message := aString.	date := aDate ifNil: [ Date today ].	time := aTime.	author := initials.	ancestors := aCollection.	stepChildren := stepCollection! !!OrderedDictionary methodsFor: 'adding' stamp: 'monty 4/14/2015 03:37' prior: 50556679!add: anAssociation	| oldSize |	oldSize := dictionary size.	dictionary add: anAssociation.	dictionary size > oldSize		ifTrue: [			orderedKeys size > oldSize				ifFalse: [self growOrderedKeys].			orderedKeys at: oldSize + 1 put: anAssociation key].	^ anAssociation.! !!OrderedDictionary methodsFor: 'accessing' stamp: 'monty 4/14/2015 03:13' prior: 50552150!associationAt: aKey ifPresent: aBlock	^ dictionary associationAt: aKey ifPresent: aBlock! !!OrderedDictionary methodsFor: 'accessing' stamp: 'monty 4/14/2015 03:38' prior: 50552686!at: aKey put: aValue	| oldSize |	oldSize := dictionary size.	dictionary at: aKey put: aValue.	dictionary size > oldSize		ifTrue: [			orderedKeys size > oldSize				ifFalse: [self growOrderedKeys].			orderedKeys at: oldSize + 1 put: aKey].	^ aValue.! !!OrderedDictionary methodsFor: 'private' stamp: 'monty 4/14/2015 03:12' prior: 50557786!errorInvalidIndex: anIndex	SubscriptOutOfBounds signalFor: anIndex! !!OrderedDictionary methodsFor: 'accessing' stamp: 'monty 4/14/2015 02:20'!identityIndexOfKey: aKey	^ self identityIndexOfKey: aKey ifAbsent: [0]! !!OrderedDictionary methodsFor: 'private' stamp: 'monty 4/14/2015 02:19'!orderedKeysIndexOf: aKey	^ orderedKeys indexOf: aKey! !!OrderedDictionary methodsFor: 'private' stamp: 'monty 4/14/2015 03:36'!orderedKeysRemove: aRemovedKey	| index |	index := self orderedKeysIndexOf: aRemovedKey.	"shift every remaining key after to the left by one"	orderedKeys		replaceFrom: index		to: self size		with: orderedKeys		startingAt: index + 1.	"one key was removed and the rest shifted, so nil what was the last	key slot before removing and shifting"	orderedKeys		at: self size + 1		put: nil.! !!OrderedDictionary methodsFor: 'removing' stamp: 'monty 4/14/2015 01:26' prior: 50552529!removeKey: aKey	| value |	value := dictionary removeKey: aKey.	self orderedKeysRemove: aKey.	^ value.! !!OrderedDictionary methodsFor: 'removing' stamp: 'monty 4/14/2015 01:26' prior: 50549581!removeKey: aKey ifAbsent: aBlock	| oldSize value |	oldSize := dictionary size.	value := dictionary removeKey: aKey ifAbsent: aBlock.	dictionary size < oldSize		ifTrue: [self orderedKeysRemove: aKey].	^ value.! !!OrderedDictionaryTest methodsFor: 'accessing' stamp: 'monty 12/15/2014 16:44' prior: 50576809!absentKey	self isTestingIdentityDictionary		ifTrue: [^ self identityAbsentKey]		ifFalse: [^ self nonIdentityAbsentKey]! !!OrderedDictionaryTest methodsFor: 'assertions' stamp: 'monty 12/15/2014 16:50'!assertRemovedKey: aKey from: aDictionary	self deny: (aDictionary includesKey: aKey).	aDictionary keys asArray, aDictionary orderedKeys asArray do: [:each |		self deny:			(self isTestingIdentityDictionary				ifTrue: [each == aKey]				ifFalse: [each = aKey])].! !!OrderedDictionaryTest methodsFor: 'assertions' stamp: 'monty 12/14/2014 16:35' prior: 50579258!assertSelector: aSelector collects: aCollection from: aDictionary	self		assert: (self emptyDictionary perform: aSelector) asArray = #();		assert: (aDictionary perform: aSelector) asArray = aCollection asArray! !!OrderedDictionaryTest methodsFor: 'accessing' stamp: 'monty 12/15/2014 16:36' prior: 50586042!defaultCapacity	^ self emptyInternalDictionary capacity! !!OrderedDictionaryTest methodsFor: 'accessing' stamp: 'monty 12/15/2014 16:44' prior: 50584960!dictionaryAssociations	self isTestingIdentityDictionary		ifTrue: [^ self identityDictionaryAssociations]		ifFalse: [^ self nonIdentityDictionaryAssociations]! !!OrderedDictionaryTest methodsFor: 'accessing' stamp: 'monty 12/15/2014 16:34'!emptyInternalDictionary	^ self internalDictionaryClass new! !!OrderedDictionaryTest methodsFor: 'accessing' stamp: 'monty 12/15/2014 16:44' prior: 50579135!internalDictionaryClass	self isTestingIdentityDictionary		ifTrue: [^ IdentityDictionary]		ifFalse: [^ Dictionary]! !!OrderedDictionaryTest methodsFor: 'accessing' stamp: 'monty 12/15/2014 16:37'!internalDictionaryWithSingleAssociation	^ self internalDictionaryClass with: self singleAssociation! !!OrderedDictionaryTest methodsFor: 'testing' stamp: 'monty 12/15/2014 16:44'!isTestingIdentityDictionary	^ false! !!OrderedDictionaryTest methodsFor: 'accessing' stamp: 'monty 12/15/2014 16:08'!nonIdentityAbsentKey	^ 'absentKey'! !!OrderedDictionaryTest methodsFor: 'accessing' stamp: 'monty 12/15/2014 16:08'!nonIdentityDictionaryAssociations	"Associations are grouped out of their natural sort order and	are copied so can be modified in one test without affecting others,	but the keys and values are identical each time for identity tests."	dictionaryAssociations ifNil: [		dictionaryAssociations :=		Array			with: 'testKey'->'testValue'			with: 'testKey3'->'testValue3'			with: 'testKey2'->'testValue2'			with: 'testKey4'->'testValue4'].	^ dictionaryAssociations collect: [:each | each copy].! !!OrderedDictionaryTest methodsFor: 'tests' stamp: 'monty 12/15/2014 16:43'!testDictionary	| dictionary |	dictionary := self emptyDictionary.	self		assert: dictionary dictionary class == self internalDictionaryClass;		assert: dictionary dictionary = self emptyInternalDictionary.	dictionary := self dictionaryWithSingleAssociation.	self		assert: dictionary dictionary class == self internalDictionaryClass;		assert: dictionary dictionary = self internalDictionaryWithSingleAssociation.	dictionary := self dictionaryWithAssociations.	self		assert: dictionary dictionary class == self internalDictionaryClass;		assert: dictionary dictionary = self internalDictionaryWithAssociations.! !!OrderedDictionaryTest methodsFor: 'tests' stamp: 'monty 12/15/2014 16:36' prior: 50574882!testEqualsDictionary	| orderedDictionary unorderedDictionary |	"only works on Pharo"	orderedDictionary := self emptyDictionary.	unorderedDictionary := self emptyInternalDictionary.	unorderedDictionary = orderedDictionary		ifFalse: [^ self].	self assertDictionary: orderedDictionary equals: unorderedDictionary.	orderedDictionary addAll: self dictionaryAssociations.	self assertDictionary: orderedDictionary doesNotEqual: unorderedDictionary.		"Dictionary>>addAll: can only accept keyed collections as an argument, so newFrom: is	used instead."	unorderedDictionary := self internalDictionaryWithAssociations.	self assertDictionary: orderedDictionary equals: unorderedDictionary.	unorderedDictionary := self internalDictionaryClass newFrom: self dictionaryAssociations reversed.	self assertDictionary: orderedDictionary equals: unorderedDictionary.! !!OrderedDictionaryTest methodsFor: 'tests' stamp: 'monty 12/15/2014 16:41' prior: 50564184!testHash	| dictionary |	dictionary := self emptyDictionary.	self assert: dictionary hash = self emptyDictionary hash.	self emptyInternalDictionary hash =		self internalDictionaryWithSingleAssociation hash		ifFalse: [			self deny:				dictionary hash = self dictionaryWithSingleAssociation hash].	self emptyInternalDictionary hash = self internalDictionaryWithAssociations hash		ifFalse: [self deny: dictionary hash = self dictionaryWithAssociations hash].	dictionary := self dictionaryWithSingleAssociation.	self assert: dictionary hash = self dictionaryWithSingleAssociation hash.	(self internalDictionaryWithSingleAssociation hash =		self internalDictionaryWithAssociations hash)		ifFalse: [self deny: dictionary hash = self dictionaryWithAssociations hash].	dictionary := self dictionaryWithAssociations.	self assert: dictionary hash = self dictionaryWithAssociations hash.! !!OrderedDictionaryTest methodsFor: 'tests' stamp: 'monty 4/14/2015 02:30'!testIdentityIndexOfKey	| dictionary |	dictionary := self dictionaryWithAssociations.	dictionary keys withIndexDo: [:each :i |		self			assert: (dictionary identityIndexOfKey: each) = i;			assert: (dictionary identityIndexOfKey: each copy) isZero].	self assert: (dictionary identityIndexOfKey: self absentKey) isZero.! !!OrderedDictionaryTest methodsFor: 'tests' stamp: 'monty 4/14/2015 02:29'!testIdentityIndexOfKeyIfAbsent	| dictionary |	dictionary := self dictionaryWithAssociations.	dictionary keys withIndexDo: [:each :i |		self			assert: (dictionary identityIndexOfKey: each ifAbsent: [self absentValue]) = i;			assert:				(dictionary					identityIndexOfKey: each copy					ifAbsent: [self absentValue]) = self absentValue].	self assert:		(dictionary			identityIndexOfKey: self absentKey			ifAbsent: [self absentValue]) = self absentValue.! !!OrderedDictionaryTest methodsFor: 'tests' stamp: 'monty 4/14/2015 02:27' prior: 50589911!testIndexOfKeyIfAbsent	| dictionary |	dictionary := self dictionaryWithAssociations.	dictionary keys withIndexDo: [:each :i |		self assert: (dictionary indexOfKey: each ifAbsent: [self absentValue]) = i].	self assert:		(dictionary			indexOfKey: self absentKey			ifAbsent: [self absentValue]) = self absentValue.! !!OrderedDictionaryTest methodsFor: 'tests' stamp: 'monty 4/14/2015 03:21' prior: 50591000!testKeyAtIdentityValue	| dictionary singleValue |	dictionary := self dictionaryWithSingleAssociation.	singleValue := dictionary at: self singleKey.	self		should: [dictionary keyAtIdentityValue: self absentValue] raise: Error;		should: [dictionary keyAtIdentityValue: singleValue copy] raise: Error;		assert: (dictionary keyAtIdentityValue: singleValue) = self singleKey.! !!OrderedDictionaryTest methodsFor: 'tests' stamp: 'monty 4/14/2015 03:20' prior: 50586183!testKeyAtIdentityValueIfAbsent	| dictionary singleValue |	dictionary := self dictionaryWithSingleAssociation.	singleValue := dictionary at: self singleKey.	self assert:		(dictionary			keyAtIdentityValue: self absentValue			ifAbsent: [self absentKey]) = self absentKey.	self assert:		(dictionary			keyAtIdentityValue: singleValue copy			ifAbsent: [self absentKey]) = self absentKey.	self assert:		(dictionary			keyAtValue: singleValue			ifAbsent: [self absentKey]) = self singleKey.! !!OrderedDictionaryTest methodsFor: 'tests' stamp: 'monty 12/15/2014 15:58' prior: 50569249!testRemoveKey	| dictionary associationsToRemove |	dictionary := self dictionaryWithAssociations.	self should: [dictionary removeKey: self absentKey] raise: Error.	associationsToRemove := self dictionaryAssociations asOrderedCollection.	[associationsToRemove notEmpty]		whileTrue: [ | removed |			removed := associationsToRemove removeFirst.			self				assert: (dictionary removeKey: removed key) = removed value;				should: [dictionary removeKey: removed key] raise: Error;				assertRemovedKey: removed key from: dictionary;				assert: dictionary keys = (associationsToRemove collect: [:each | each key]) asArray].! !!OrderedIdentityDictionary methodsFor: 'private' stamp: 'monty 4/14/2015 02:20'!orderedKeysIndexOf: aKey	^ orderedKeys identityIndexOf: aKey! !!MCLazyVersionInfo methodsFor: 'initialization' stamp: 'ThierryGoubier 4/15/2015 09:41' prior: 28471913!initializeWithName: vName id: aUUID message: aString date: aDate time: aTime author: initials ancestors: aCollection stepChildren: stepCollection	name := vName.	id := aUUID.	message := aString.	date := aDate ifNil: [ Date today ].	time := aTime.	author := initials.	ancestors := WeakArray withAll: aCollection.	stepChildren := WeakArray withAll: stepCollection! !OrderedDictionary removeSelector: #deleteOrderedKey:!OrderedIdentityDictionaryTest removeSelector: #internalDictionaryClass!OrderedIdentityDictionaryTest removeSelector: #dictionaryAssociations!OrderedIdentityDictionaryTest removeSelector: #absentKey!"Collections-Sequenceable"!"CollectionsTests"!"Monticello"!"MonticelloGUI"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.791.mcz') load.ScriptLoader new update40611.!----End fileIn----!----QUIT----2015-04-24T11:31:04.158257+02:00 Pharo.image priorSource: 58097!----STARTUP----2015-04-24T11:31:04.314727+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-04-24T11:31:08.184451+02:00 Pharo.image priorSource: 86474!----STARTUP----2015-04-24T11:41:04.485005+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-04-24T11:41:04.561394+02:00 Pharo-40611.image priorSource: 86668!----STARTUP----2015-05-04T10:36:15.561429+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 5/4/2015 10:33' prior: 33612825!commentForCurrentUpdate ^ '15417 TestRunner does not offer the RunCoverage functionality 	https://pharo.fogbugz.com/f/cases/1541715322 "Save As" does not properly save filenames with dots in them	https://pharo.fogbugz.com/f/cases/15322'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 5/4/2015 10:33'!script612	^ 'AST-Core-TheIntegrator.283.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.192.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.685.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.175.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.92.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2011.mczKernelTests-TheIntegrator.767.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.115.mczManifest-Core-TheIntegrator.215.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1011.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.343.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.170.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.909.mczNautilus-Tests-TheIntegrator.12.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.641.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.57.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.270.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-AndreiChis.187.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.113.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.236.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.66.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 5/4/2015 10:33'!update40612	"self new update40612"	self withUpdateLog: '15417 TestRunner does not offer the RunCoverage functionality 	https://pharo.fogbugz.com/f/cases/1541715322 "Save As" does not properly save filenames with dots in them	https://pharo.fogbugz.com/f/cases/15322'.	self loadTogether: self script612 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update40611!ScriptLoader removeSelector: #script611!"ScriptLoader40"!!FileReferenceTest methodsFor: 'tests' stamp: 'monty 4/9/2015 23:34' prior: 23421577!testBasenameWithoutExtension	"self debug: #testBasenameWithoutExtension"		| ref |		ref := filesystem root.	self assert: ref basename equals: '/'.		ref := filesystem * 'plonk' / 'griffle'.	self assert: ref basenameWithoutExtension equals: 'griffle'.	self assert: (ref basenameWithoutExtension: 'griffle') equals: 'griffle'.	self assert: (ref basenameWithoutExtension: 'taz') equals: 'griffle'.		ref := filesystem * 'plonk' / 'griffle.taz'.	self assert: ref basenameWithoutExtension equals: 'griffle'.	self assert: (ref basenameWithoutExtension: 'taz') equals: 'griffle'.	self assert: (ref basenameWithoutExtension: 'griffle.taz') equals: 'griffle.taz'.	self assert: (ref basenameWithoutExtension: 'zork') equals: 'griffle.taz'.		ref := filesystem * 'plonk' / 'griffle.taz.zork'.	self assert: ref basenameWithoutExtension equals: 'griffle.taz'.	self assert: (ref basenameWithoutExtension: 'zork') equals: 'griffle.taz'.	self assert: (ref basenameWithoutExtension: 'taz.zork') equals: 'griffle'.	self assert: (ref basenameWithoutExtension: 'griffle.taz.zork') equals: 'griffle.taz.zork'.	self assert: (ref basenameWithoutExtension: 'taz') equals: 'griffle.taz.zork'.! !!AbstractFileReference methodsFor: 'accessing' stamp: 'monty 4/9/2015 23:28'!basenameWithoutExtension: anExtension	"Returns the basename without specified extension (if any)	('/foo/gloops.taz' asFileReference basenameWithoutExtension: 'taz') = 'gloops'	"	^ self fullPath basenameWithoutExtension: anExtension! !!PathTest methodsFor: 'tests' stamp: 'monty 4/9/2015 23:33' prior: 50992571!testBasenameWithoutExtension	"self debug: #testBasenameWithoutExtension"	| path |	path := Path * 'plonk' / 'griffle'.	self assert: path basenameWithoutExtension equals: 'griffle'.	self assert: (path basenameWithoutExtension: 'griffle') equals: 'griffle'.	self assert: (path basenameWithoutExtension: 'taz') equals: 'griffle'.		path := Path * 'plonk' / 'griffle.taz'.	self assert: path basenameWithoutExtension equals: 'griffle'.	self assert: (path basenameWithoutExtension: 'taz') equals: 'griffle'.	self assert: (path basenameWithoutExtension: 'griffle.taz') equals: 'griffle.taz'.	self assert: (path basenameWithoutExtension: 'zork') equals: 'griffle.taz'.		path := Path * 'plonk' / 'griffle.taz.zork'.	self assert: path basenameWithoutExtension equals: 'griffle.taz'.	self assert: (path basenameWithoutExtension: 'zork') equals: 'griffle.taz'.	self assert: (path basenameWithoutExtension: 'taz.zork') equals: 'griffle'.	self assert: (path basenameWithoutExtension: 'girffle.taz.zork') equals: 'griffle.taz.zork'.	self assert: (path basenameWithoutExtension: 'taz') equals: 'griffle.taz.zork'.! !!TestRunner methodsFor: 'accessing-ui' stamp: 'SergioFedi 4/27/2015 21:47' prior: 58630987!buttons	^ #(( 'Run Selected' #runAll 'Run all selected tests' #hasRunnable )		( 'Run Profiled' #runProfiled 'Run tests and profile' #hasRunnable )		( 'Run Coverage' #runCoverage 'Run test and check code coverage' #hasRunnable )		( 'Run Failures' #runFailures 'Run all failures' #hasFailures )		( 'Run Errors' #runErrors 'Run all errors' #hasErrors )		( 'File out results' #fileOutResults 'File out test results' #hasFailuresOrErrors))! !!TestRunner methodsFor: 'actions' stamp: 'SergioFedi 4/27/2015 21:48' prior: 58614643!collectCoverageFor: methods	| wrappers suite |	wrappers := methods collect: [ :each | TestCoverage on: each ].	suite := self		resetResult;		suiteForAllSelected.		[ wrappers do: [ :each | each install ].	[ self runSuite: suite ] ensure: [ wrappers do: [ :each | each uninstall ] ] ] valueUnpreemptively.	wrappers := wrappers reject: [:each | each hasRun].	wrappers := wrappers collect: [:each | each reference].	wrappers isEmpty 		ifTrue:  [ UIManager default inform: 'Congratulations. Your tests cover all code under analysis.' ]		ifFalse: [ 			Smalltalk tools messageList 				browse: wrappers				title: 'Not Covered Code (' , (100 - (100 * wrappers size // methods size)) printString , '% Code Coverage)'].	self saveResultInHistory! !!Path methodsFor: 'accessing' stamp: 'monty 4/9/2015 23:28'!basenameWithoutExtension: anExtension	"Returns the basename without specified extension (if any)	('/foo/gloops.taz' asPath basenameWithoutExtension: 'taz') = 'gloops'	"	| extensionWihtDelimiter |	extensionWihtDelimiter := anExtension copyWithFirst: self extensionDelimiter.	(self basename endsWith: extensionWihtDelimiter)		ifTrue: [^ self basename allButLast: extensionWihtDelimiter size]		ifFalse: [ ^ self basename ]! !!WorldState class methodsFor: 'world menu items' stamp: 'monty 4/9/2015 23:29' prior: 61812197!saveAs	| reference |	reference := UIManager default fileSave: 'New File Name?' extensions: #('image') path: Smalltalk imageDirectory.	reference ifNotNil: [ Smalltalk saveAs: reference parent / (reference basenameWithoutExtension: 'image') ]! !"FileSystem-Core"!"FileSystem-Tests-Core"!"Morphic-Core"!"SUnit-UI"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.792.mcz') load.ScriptLoader new update40612.!----End fileIn----!----QUIT----2015-05-04T10:36:19.183664+02:00 Pharo.image priorSource: 86862!----STARTUP----2015-05-04T10:36:19.338418+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-05-04T10:36:23.139051+02:00 Pharo.image priorSource: 107478!----STARTUP----2015-05-04T10:45:08.078705+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-05-04T10:45:08.150291+02:00 Pharo-40612.image priorSource: 107672!----STARTUP----2015-05-05T15:47:04.643301+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 5/5/2015 15:45' prior: 33641589!commentForCurrentUpdate ^ '15423 Backport Pharo4: 15422 SHTextStyler>>#styleInBackgroundProcess: should not set the text if styling process was terminated	https://pharo.fogbugz.com/f/cases/1542315492 Backport Nautilus MergeGroups + sourceNodeForPC should use #methodNode	https://pharo.fogbugz.com/f/cases/15492'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 5/5/2015 15:45'!script613	^ 'AST-Core-TheIntegrator.283.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.192.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.685.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.175.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.92.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2013.mczKernelTests-TheIntegrator.769.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.115.mczManifest-Core-TheIntegrator.215.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1011.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.343.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.170.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.909.mczNautilus-Tests-TheIntegrator.12.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.643.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.57.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.270.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-AndreiChis.187.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.113.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.238.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.68.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 5/5/2015 15:45'!update40613	"self new update40613"	self withUpdateLog: '15423 Backport Pharo4: 15422 SHTextStyler>>#styleInBackgroundProcess: should not set the text if styling process was terminated	https://pharo.fogbugz.com/f/cases/1542315492 Backport Nautilus MergeGroups + sourceNodeForPC should use #methodNode	https://pharo.fogbugz.com/f/cases/15492'.	self loadTogether: self script613 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update40612!ScriptLoader removeSelector: #script612!"ScriptLoader40"!!SHTextStyler methodsFor: 'styling' stamp: 'AndreiChis 5/4/2015 13:31' prior: 54999964!styleInBackgroundProcess: aText	self terminateBackgroundStylingProcess.	stylingEnabled		ifFalse: [ ^ self ].	text := aText copy.	self monitor		critical: [ 			sem := Semaphore new.			[ 				sem notNil					ifTrue: [ 						sem 							waitTimeoutSeconds: 5							onCompletion: [ view ifNotNil: [ view stylerStyledInBackground: text ] ]							onTimeout: [ "do nothing if the styling has not finished or the process turned into a zombie." ] ] 			] forkAt: Processor activePriority.			backgroundProcess := [ 			self privateStyle: text.			sem signal ] forkAt: Processor userBackgroundPriority ]! !!DelayWaitTimeout methodsFor: 'waiting' stamp: 'AndreiChis 5/4/2015 13:30'!waitOnCompletion: completionBlock onTimeout: timeoutBlock	"Wait until either the semaphore is signaled or the delay times out.	If the delay times out execute timeoutBlock, otherwise if the semaphore is signaled execute completionBlock.	Return the value returned by the executed block."	^ self wait		ifTrue: [ timeoutBlock value ]		ifFalse: [ completionBlock value]! !!SemaphoreTest methodsFor: 'tests' stamp: 'AndreiChis 5/4/2015 13:31'!testWaitTimeoutSecondsOnCompletionOnTimeout	"Ensure that waitTimeoutSeconds:onCompletion:onTimeout: behaves properly"	"Ensure that a timed out waitTimeoutSeconds:onCompletion:onTimeout: returns the value of the timeout block"	self assert: (Semaphore new 		waitTimeoutSeconds: 0.05		onCompletion: [ #completed ]		onTimeout: [ #timeout ] ) == #timeout.	"Ensure that a signaled waitTimeoutSeconds:onCompletion:onTimeout: returns the value of the completed block"	self assert: (Semaphore new signal		waitTimeoutSeconds: 0.05		onCompletion: [ #completed ]		onTimeout: [ #timeout ]) == #completed.! !!AbstractTool methodsFor: 'group' stamp: 'MarcusDenker 5/5/2015 15:10' prior: 17544396!mergeGroups: aCollection	aCollection		ifNotEmpty: [:groups || group |			group := groups reduce: [:a :b | a or: b].			groups do: [:gp | 				gp removable					ifTrue: [self groupsManager removeAGroupSilently: gp]].				^ group].	^ nil! !!RBBlockNode methodsFor: '*OpalCompiler-Core' stamp: 'MarcusDenker 5/5/2015 15:10' prior: 52182722!sourceNodeForPC: anInteger 	^ self methodNode sourceNodeForPC: anInteger! !!Semaphore methodsFor: 'communication' stamp: 'AndreiChis 5/4/2015 13:31'!waitTimeoutSeconds: anInteger onCompletion: completionBlock onTimeout: timeoutBlock	"Wait on this semaphore for up to the given number of seconds, then timeout.	If the deadline expired execute timeoutBlock, otherwise execute completionBlock.	Return the value returned by the executed block."	| d |	d := DelayWaitTimeout new setDelay: (anInteger * 1000 max: 0) forSemaphore: self.	^d waitOnCompletion: completionBlock onTimeout: timeoutBlock! !"Kernel"!"KernelTests"!"OpalCompiler-Core"!"Shout"!"Tool-Base"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.793.mcz') load.ScriptLoader new update40613.!----End fileIn----!----QUIT----2015-05-05T15:47:10.552244+02:00 Pharo.image priorSource: 107867!----STARTUP----2015-05-05T15:47:10.712169+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-05-05T15:47:14.435205+02:00 Pharo.image priorSource: 126487!----STARTUP----2015-05-05T15:56:45.728351+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-05-05T15:56:45.798918+02:00 Pharo-40613.image priorSource: 126682!----STARTUP----2015-05-26T16:27:18.934807+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 5/26/2015 16:25' prior: 33662595!commentForCurrentUpdate ^ '15284 [Backport 4.0]: 15384 kommiter throws DNU when browsing remotes	https://pharo.fogbugz.com/f/cases/15284'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 5/26/2015 16:25'!script614	^ 'AST-Core-TheIntegrator.283.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.192.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.685.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.175.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.92.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2013.mczKernelTests-TheIntegrator.769.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.117.mczManifest-Core-TheIntegrator.215.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1011.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.343.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.170.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.909.mczNautilus-Tests-TheIntegrator.12.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.643.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.57.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.270.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-AndreiChis.187.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.113.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.238.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.68.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 5/26/2015 16:25'!update40614	"self new update40614"	self withUpdateLog: '15284 [Backport 4.0]: 15384 kommiter throws DNU when browsing remotes	https://pharo.fogbugz.com/f/cases/15284'.	self loadTogether: self script614 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update40613!ScriptLoader removeSelector: #script613!"ScriptLoader40"!!RemotesManager methodsFor: 'private' stamp: 'SeanDeNigris 4/4/2015 09:32' prior: 54039491!buildRoots	^ MCRepositoryGroup default repositories		select: [ :each | each isCache not ]		thenCollect: [ :each || remote  |						remote := each koRemote.			TreeNodeModel new				content: remote;				hasContentToShow: true;				selected: ( self selectedRemotes includes: each );				whenSelectedChanged: [ :bool | self selected: each changed: bool ] ;				yourself ]! !!RemotesManager methodsFor: 'private' stamp: 'SeanDeNigris 4/4/2015 09:32' prior: 54039163!selected: aRepository changed: selected	selected		ifTrue: [ self selectedRemotes add: aRepository ]		ifFalse: [ self selectedRemotes remove: aRepository ].	selectedChangedBlock ifNotNil: 		[ selectedChangedBlock cull: aRepository cull: selected ] ! !!RemotesManager methodsFor: 'api' stamp: 'SeanDeNigris 4/4/2015 09:34' prior: 54040083!selectedRemotes: aRemoteList	selectedRemotes := aRemoteList asSet! !"Komitter"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.794.mcz') load.ScriptLoader new update40614.!----End fileIn----!----QUIT----2015-05-26T16:27:20.757246+02:00 Pharo.image priorSource: 126877!----STARTUP----2015-05-26T16:27:20.912563+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-05-26T16:27:24.898441+02:00 Pharo.image priorSource: 143201!----STARTUP----2015-05-26T16:36:46.010192+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-05-26T16:36:46.084005+02:00 Pharo-40614.image priorSource: 143396!----STARTUP----2015-06-23T10:43:18.96833+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 6/23/2015 10:41' prior: 33681606!commentForCurrentUpdate ^ '15797 Backport 4.0: New PackageManifests should be classes, not instances	https://pharo.fogbugz.com/f/cases/15797'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 6/23/2015 10:41'!script615	^ 'AST-Core-TheIntegrator.283.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.192.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.685.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.175.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.92.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2016.mczKernelTests-TheIntegrator.769.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.117.mczManifest-Core-TheIntegrator.217.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1011.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.343.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.170.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.909.mczNautilus-Tests-TheIntegrator.14.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.643.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.57.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.270.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-AndreiChis.187.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.113.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.238.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.68.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 6/23/2015 10:41'!update40615	"self new update40615"	self withUpdateLog: '15797 Backport 4.0: New PackageManifests should be classes, not instances	https://pharo.fogbugz.com/f/cases/15797'.	self loadTogether: self script615 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update40614!ScriptLoader removeSelector: #script614!"ScriptLoader40"!!TheManifestBuilder commentStamp: 'StephaneDucasse 1/6/2014 20:52' prior: 59049974!I'm a tool to build manifest that handles small lint false positive and other information.My name is strange but this is to avoid to match with a Manifest class which is recognized because it starts with Manifest*.!!PackageTreeNautilusTest methodsFor: 'tests' stamp: 'ChristopheDemarey 6/18/2015 15:08' prior: 50747168!testPackagePatternStringRootPackageTag	lastValue := SharedPackageFilterPatternsHolder instance lastValue.	SharedPackageFilterPatternsHolder instance lastValue: ''.	self compiledMethod: (Object>>#=).	nautilus := PackageTreeNautilus openOnMethod: compiledMethod.	self assertSelectedCompiledMethod.	nautilus packagePatternString: 'H'.	self assertSelectedCompiledMethod.	nautilus packagePatternString: 'anything long'.	self assertSelectedCompiledMethod.	nautilus packagePatternString: ''.	self assertSelectedCompiledMethod.! !!PackageManifest class methodsFor: 'code-critics' stamp: 'ChristopheDemarey 6/18/2015 13:46'!rejectClasses	^ #()! !!PackageManifest class methodsFor: 'code-critics' stamp: 'ChristopheDemarey 6/18/2015 13:46'!rejectRules	^ #()! !!RPackage methodsFor: '*Manifest-Core' stamp: 'ChristopheDemarey 6/18/2015 13:48' prior: 53582145!packageManifest	^ self classes		detect: [ :each | each isManifest ]		ifNone: [ TheManifestBuilder new createManifestNamed: name]! !!TheManifestBuilder commentStamp: 'StephaneDucasse 1/6/2014 20:52' prior: 33712864!I'm a tool to build manifest that handles small lint false positive and other information.My name is strange but this is to avoid to match with a Manifest class which is recognized because it starts with Manifest*.!!TheManifestBuilder methodsFor: 'private' stamp: 'ChristopheDemarey 6/18/2015 13:54' prior: 59064401!compileSelector: selector returnValue: arrayString	manifestClass class		compile: selector asString , Character cr asString , '^ ' , arrayString 		classified: 'code-critics'! !!TheManifestBuilder methodsFor: 'accessing' stamp: 'ChristopheDemarey 6/18/2015 13:53' prior: 59064957!manifest	^ manifestClass! !PackageManifest removeSelector: #rejectRules!PackageManifest removeSelector: #rejectClasses!PackageManifest removeSelector: #hash!PackageManifest removeSelector: #=!"Kernel"!"Manifest-Core"!"Nautilus-Tests"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.795.mcz') load.ScriptLoader new update40615.!----End fileIn----!----QUIT----2015-06-23T10:43:23.558445+02:00 Pharo.image priorSource: 143591!----STARTUP----2015-06-23T10:43:23.717223+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-06-23T10:43:27.497364+02:00 Pharo.image priorSource: 161284!----STARTUP----2015-06-23T10:52:11.21743+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-06-23T10:52:11.293573+02:00 Pharo-40615.image priorSource: 161479!----STARTUP----2015-06-29T10:38:16.525934+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 6/29/2015 10:36' prior: 33698319!commentForCurrentUpdate ^ '15680 Backport 4.0: Class rename does not update references in class-side methods	https://pharo.fogbugz.com/f/cases/15680'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 6/29/2015 10:36'!script616	^ 'AST-Core-TheIntegrator.283.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.192.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.685.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.175.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.92.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2016.mczKernelTests-TheIntegrator.769.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.117.mczManifest-Core-TheIntegrator.217.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1011.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.343.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.170.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.909.mczNautilus-Tests-TheIntegrator.14.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.643.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.57.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.272.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-AndreiChis.187.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.113.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.238.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.68.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 6/29/2015 10:36'!update40616	"self new update40616"	self withUpdateLog: '15680 Backport 4.0: Class rename does not update references in class-side methods	https://pharo.fogbugz.com/f/cases/15680'.	self loadTogether: self script616 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update40615!ScriptLoader removeSelector: #script615!"ScriptLoader40"!!RBNamespace methodsFor: 'accessing' stamp: 'ThomasHeniart 6/12/2015 10:08' prior: 52664882!allReferencesToClass: aRBClass do: aBlock	self		allClassesDo: [ :each | 			(each whichSelectorsReferToClass: aRBClass) do: [ :sel | aBlock value: (each methodFor: sel) ].			(each theMetaClass whichSelectorsReferToClass: aRBClass)				do: [ :sel | aBlock value: (each theMetaClass methodFor: sel) ] ]! !!RBRenameClassRefactoring methodsFor: 'initialize-release' stamp: 'ThomasHeniart 6/12/2015 10:09' prior: 53058623!className: aName newName: aNewName	className := aName asSymbol.	class := self model classNamed: className.	newName := aNewName asSymbol! !"Refactoring-Core"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.796.mcz') load.ScriptLoader new update40616.!----End fileIn----!----QUIT----2015-06-29T10:38:18.397657+02:00 Pharo.image priorSource: 161673!----STARTUP----2015-06-29T10:38:18.576311+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-06-29T10:38:22.689866+02:00 Pharo.image priorSource: 177713!----STARTUP----2015-06-29T10:51:13.319291+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-06-29T10:51:13.402172+02:00 Pharo-40616.image priorSource: 177908!----STARTUP----2015-06-30T16:02:18.919025+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 6/30/2015 16:00' prior: 33716402!commentForCurrentUpdate ^ '14387 ressurrect format on accept and format on display	https://pharo.fogbugz.com/f/cases/14387'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 6/30/2015 16:00'!script617	^ 'AST-Core-TheIntegrator.286.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.192.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.685.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.175.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.92.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2016.mczKernelTests-TheIntegrator.769.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.117.mczManifest-Core-TheIntegrator.217.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1011.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.343.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.170.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.912.mczNautilus-Tests-TheIntegrator.14.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.643.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.57.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.272.mczRefactoring-Critics-TheIntegrator.160.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-TheIntegrator.189.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.113.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.241.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.68.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 6/30/2015 16:00'!update40617	"self new update40617"	self withUpdateLog: '14387 ressurrect format on accept and format on display	https://pharo.fogbugz.com/f/cases/14387'.	self loadTogether: self script617 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update40616!ScriptLoader removeSelector: #script616!"ScriptLoader40"!!RBConfigurableFormatter commentStamp: '<historical>' prior: 52318551!RBConfigurableFormatter formats the Refactoring Browser's parse trees. It has many more formatting options than the default formatter used by the RB. To change the RB to use this formatter, execute "RBProgramNode formatterClass: RBConfigurableFormatter". For some refactorings the RB must reformat the code after the change, so it is good to have a formatter configured to your tastes.Instance Variables:	codeStream	<PositionableStream>	the stream we are writing our output to	indent	<Integer>	how many times are we indenting a new line -- indents are normally tabs but could be any whitespace string	lineStart	<Integer>	the position of the character that started the current line. This is used for calculating the line length.	lookaheadCode	<Dictionary key: RBProgramNode value: String>	sometimes we need to lookahead while formatting, this dictionary contains the nodes that have already been formatted by lookahead	originalSource	<String>	the original source before we started formatting. This is used to extract the comments from the original source.!!MethodDefinitionAcceptor methodsFor: 'protocol' stamp: 'PaulDeBruicker 6/10/2015 13:47' prior: 30708185!accept: source notifying: aController	| protocol method |	RBConfigurableFormatter formatOnAccept		ifTrue: [ self model sourceTextArea formatSourceCode ].	protocol := self model selectedCategory.	method := self model selectedMethod.	protocol ifNil: [ protocol := method ifNil: [ Protocol unclassified ] ifNotNil: [ method protocol ] ].	self model compileAMethodFromCategory: protocol withSource: source notifying: aController! !!SHTextStyler methodsFor: 'formatting' stamp: 'PaulDeBruicker 6/10/2015 13:47' prior: 54998777!format: aText 	| tree |	self terminateBackgroundStylingProcess.	RBConfigurableFormatter formatOnDisplay		ifTrue: [ 			tree := RBParser parseMethod: aText onError: [ :msg :pos | ^ aText ].			^ tree formattedCode ]		ifFalse: [ ^ aText ]! !!RubSHTextStylerST80 methodsFor: 'private' stamp: 'PaulDeBruicker 6/11/2015 17:14'!format: aText	self terminateBackgroundStylingProcess.	^ aText! !!RBConfigurableFormatter commentStamp: '<historical>' prior: 33747331!RBConfigurableFormatter formats the Refactoring Browser's parse trees. It has many more formatting options than the default formatter used by the RB. To change the RB to use this formatter, execute "RBProgramNode formatterClass: RBConfigurableFormatter". For some refactorings the RB must reformat the code after the change, so it is good to have a formatter configured to your tastes.Instance Variables:	codeStream	<PositionableStream>	the stream we are writing our output to	indent	<Integer>	how many times are we indenting a new line -- indents are normally tabs but could be any whitespace string	lineStart	<Integer>	the position of the character that started the current line. This is used for calculating the line length.	lookaheadCode	<Dictionary key: RBProgramNode value: String>	sometimes we need to lookahead while formatting, this dictionary contains the nodes that have already been formatted by lookahead	originalSource	<String>	the original source before we started formatting. This is used to extract the comments from the original source.!!RBConfigurableFormatter class methodsFor: 'accessing' stamp: 'PaulDeBruicker 6/10/2015 13:44'!formatOnAccept	^FormatOnAccept ifNil:[false]! !!RBConfigurableFormatter class methodsFor: 'accessing' stamp: 'PaulDeBruicker 6/10/2015 13:45'!formatOnAccept:aBoolean	FormatOnAccept :=aBoolean! !!RBConfigurableFormatter class methodsFor: 'accessing' stamp: 'PaulDeBruicker 6/10/2015 13:44'!formatOnDisplay	^FormatOnDisplay ifNil:[false]! !!RBConfigurableFormatter class methodsFor: 'accessing' stamp: 'PaulDeBruicker 6/10/2015 13:44'!formatOnDisplay:aBoolean	FormatOnDisplay :=aBoolean! !!RBConfigurableFormatter class methodsFor: 'initialization' stamp: 'PaulDeBruicker 6/10/2015 13:45' prior: 52338947!initialize	CascadedMessageInsideParentheses := false.	FormatCommentWithStatements := true.	IndentString := String with: Character tab.	IndentsForKeywords := 1.	KeepBlockInMessage := true.	LineUpBlockBrackets := false.	MaxLineLength := 120.	MethodSignatureOnMultipleLines := false.	MinimumNewLinesBetweenStatements := 1.	MultiLineMessages := #(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:).	NewLineAfterCascade := true.	NewLineBeforeFirstCascade := true.	NewLineBeforeFirstKeyword := false.	NewLinesAfterMethodComment := 2.	NewLinesAfterMethodPattern := 1.	NewLinesAfterTemporaries := 1.	NumberOfArgumentsForMultiLine := 4.	OneLineMessages := #(#to: #to:do: #to:by: #to:by:do:).	PeriodsAtEndOfBlock := false.	PeriodsAtEndOfMethod := false.	RetainBlankLinesBetweenStatements := false.	RetainBlankLinesBeforeComments := false.	StringFollowingReturn := ' '.	StringInsideBlocks := ' '.	StringInsideParentheses := ''.	TraditionalBinaryPrecedence := #(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@)).	UseTraditionalBinaryPrecedenceForParentheses := true.	FormatOnAccept := false.	FormatOnDisplay := false! !!RBConfigurableFormatter class methodsFor: 'settings' stamp: 'PaulDeBruicker 6/10/2015 13:46' prior: 52344181!settingsOn: aBuilder	<systemsettings>	(aBuilder group: #configurableFormatter)		target: self;		parent: #codeBrowsing;		label: 'Pretty Printing';		description: 'Settings related to the formatter';		with: [ 					(aBuilder setting: #cascadedMessageInsideParentheses) label: 'Cascaded message inside parentheses'.					(aBuilder setting: #formatCommentWithStatements) label: 'Format comment with statements'.					(aBuilder setting: #indentString) label: 'Indent string'.					(aBuilder setting: #indentsForKeywords) label: 'Indents for keywords'.					(aBuilder setting: #keepBlockInMessage) label: 'Keep block in message'.					(aBuilder setting: #lineUpBlockBrackets) label: 'Line up block brackets'.					(aBuilder setting: #methodSignatureOnMultipleLines) label: 'Method signature on multiple lines'.					(aBuilder setting: #maxLineLength) label: 'Max line length'.					(aBuilder setting: #oneLineMessages) label: 'One line messages'.					(aBuilder setting: #multiLineMessages) label: 'Multi line messages'.					(aBuilder setting: #minimumNewLinesBetweenStatements) label: 'Minimum new lines between statements'.					(aBuilder setting: #newLineAfterCascade) label: 'New line after cascade'.					(aBuilder setting: #newLineBeforeFirstCascade) label: 'New line before first cascade'.					(aBuilder setting: #newLineBeforeFirstKeyword) label: 'New line before first keyword'.					(aBuilder setting: #newLinesAfterMethodComment) label: 'New lines after method comment'.					(aBuilder setting: #newLinesAfterMethodPattern) label: 'New lines after method pattern'.					(aBuilder setting: #newLinesAfterTemporaries) label: 'New lines after temporaries'.					(aBuilder setting: #numberOfArgumentsForMultiLine) label: 'Number of arguments for multi line'.					(aBuilder setting: #periodsAsTerminators) label: 'Periods as terminators'.					(aBuilder setting: #periodsAtEndOfBlock) label: 'Periods at end of block'.					(aBuilder setting: #periodsAtEndOfMethod) label: 'Periods at end of method'.					(aBuilder setting: #retainBlankLinesBetweenStatements) label: 'Retain blank lines between statements'.					(aBuilder setting: #retainBlankLinesBeforeComments) label: 'Retain blank lines before comments'.					(aBuilder setting: #stringFollowingReturn) label: 'String following return'.					(aBuilder setting: #stringInsideBlocks) label: 'String inside blocks'.					(aBuilder setting: #stringInsideParentheses) label: 'String inside parentheses'.					(aBuilder setting: #traditionalBinaryPrecedence) label: 'Traditional binary precedence'.					(aBuilder setting: #useTraditionalBinaryPrecedenceForParentheses)						label: 'Use traditional binary precedence for parentheses'.					(aBuilder setting: #formatOnDisplay) label: 'Format methods on display'.					(aBuilder setting: #formatOnAccept) label: 'Format methods on accept' ]! !"AST-Core"!"Nautilus"!"Rubric"!"Shout"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.797.mcz') load.ScriptLoader new update40617.!----End fileIn----!----QUIT----2015-06-30T16:02:24.097036+02:00 Pharo.image priorSource: 178103!----STARTUP----2015-06-30T16:02:24.277047+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-06-30T16:02:28.318556+02:00 Pharo.image priorSource: 201621!----STARTUP----2015-06-30T16:12:15.384368+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-06-30T16:12:15.466014+02:00 Pharo-40617.image priorSource: 201816!----STARTUP----2015-07-06T10:10:06.66953+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-07-06T10:10:06.762223+02:00 Pharo.image priorSource: 202011!----STARTUP----2015-07-06T10:10:06.947275+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-07-06T10:10:11.173128+02:00 Pharo.image priorSource: 202215!----STARTUP----2015-07-06T10:55:35.529342+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-07-06T10:55:35.68924+02:00 Pharo-40617.image priorSource: 202410!----STARTUP----2015-07-10T14:54:33.894643+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 7/10/2015 14:51' prior: 33732832!commentForCurrentUpdate ^ '15929 backport Pharo4: Revisiting RBUnpackagedCodeRule	https://pharo.fogbugz.com/f/cases/15929'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 7/10/2015 14:52'!script618	^ 'AST-Core-TheIntegrator.286.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.192.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.685.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.175.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.92.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2016.mczKernelTests-TheIntegrator.769.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.117.mczManifest-Core-TheIntegrator.217.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1011.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.343.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.170.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.912.mczNautilus-Tests-TheIntegrator.14.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.643.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.57.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.272.mczRefactoring-Critics-TheIntegrator.162.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-TheIntegrator.189.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.113.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.241.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.68.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 7/10/2015 14:52'!update40618	"self new update40618"	self withUpdateLog: '15929 backport Pharo4: Revisiting RBUnpackagedCodeRule	https://pharo.fogbugz.com/f/cases/15929'.	self loadTogether: self script618 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update40617!ScriptLoader removeSelector: #script617!"ScriptLoader40"!!RBUnpackagedCodeRule methodsFor: 'running' stamp: 'YuriyTymchuk 7/8/2015 23:21' prior: 53274944!checkClass: aClass 	(self isUnpackaged: aClass) ifTrue: [		self result addClass: aClass ]! !!RBUnpackagedCodeRule methodsFor: 'running' stamp: 'YuriyTymchuk 7/8/2015 23:22' prior: 53274679!checkMethod: aMethod	(self isUnpackaged: aMethod) ifTrue: [		self result addMethod: aMethod ]! !!RBUnpackagedCodeRule methodsFor: 'running' stamp: 'YuriyTymchuk 7/8/2015 22:20'!isUnpackaged: anEntity	^ anEntity package isDefault! !"Refactoring-Critics"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.798.mcz') load.ScriptLoader new update40618.!----End fileIn----!----QUIT----2015-07-10T14:54:36.260693+02:00 Pharo.image priorSource: 202605!----STARTUP----2015-07-10T14:54:36.60957+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-07-10T14:54:40.758699+02:00 Pharo.image priorSource: 218468!----STARTUP----2015-07-10T15:04:42.067356+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-07-10T15:04:42.144693+02:00 Pharo-40618.image priorSource: 218662!----STARTUP----2015-07-31T10:06:18.832287+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-07-31T10:06:18.906559+02:00 Pharo.image priorSource: 218857!----STARTUP----2015-07-31T10:06:19.075251+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-07-31T10:06:22.858108+02:00 Pharo.image priorSource: 219062!----STARTUP----2015-07-31T10:26:48.632214+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-07-31T10:26:48.709608+02:00 Pharo-40618.image priorSource: 219257!----STARTUP----2015-08-26T17:19:17.276651+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 8/26/2015 17:16' prior: 33757333!commentForCurrentUpdate ^ '16362 Backport Pharo4: 16131 RBModifiesCollectionRule breaks methods AST when checking	https://pharo.fogbugz.com/f/cases/1636216069 backport Pharo4: 16067 remove #prepareDebuggerExample	https://pharo.fogbugz.com/f/cases/1606916081 Backport Pharo: 16080 RBImplementedButNotSent always true	https://pharo.fogbugz.com/f/cases/16081'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 8/26/2015 17:16'!script619	^ 'AST-Core-TheIntegrator.286.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.192.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.685.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.175.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.92.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.58.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2016.mczKernelTests-TheIntegrator.769.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.117.mczManifest-Core-TheIntegrator.217.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1011.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.343.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.170.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.912.mczNautilus-Tests-TheIntegrator.14.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.643.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.60.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.272.mczRefactoring-Critics-TheIntegrator.165.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-TheIntegrator.189.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.113.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.241.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.68.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 8/26/2015 17:16'!update40619	"self new update40619"	self withUpdateLog: '16362 Backport Pharo4: 16131 RBModifiesCollectionRule breaks methods AST when checking	https://pharo.fogbugz.com/f/cases/1636216069 backport Pharo4: 16067 remove #prepareDebuggerExample	https://pharo.fogbugz.com/f/cases/1606916081 Backport Pharo: 16080 RBImplementedButNotSent always true	https://pharo.fogbugz.com/f/cases/16081'.	self loadTogether: self script619 merge: false.	self flushCaches.self cleanRepositories.! !ScriptLoader removeSelector: #update40618!ScriptLoader removeSelector: #script618!"ScriptLoader40"!!RBImplementedNotSentRule methodsFor: 'cache' stamp: 'MarcusDenker 8/25/2015 08:16' prior: 52474310!literals    "return all 'message sends' in the systed and cache them"    literals ifNil: [        literals := IdentitySet new.        Smalltalk specialSelectors do: [:sel |            sel isSymbol ifTrue: [ literals add: sel ] ].        result rootEnvironment methodsDo: [ :meth |            meth literals do: [ :lit | (meth hasLiteral: lit) ifTrue: [self addLiteral: lit]]]].            "here we do a second check as #literals returns all literals even the one storing             method name"    ^ literals! !!RBModifiesCollectionRule methodsFor: 'private' stamp: 'MarcusDenker 8/25/2015 08:29' prior: 52627713!modifiesTree: aCollectionTree in: aParseTree 	| notifier args |	notifier := RBParseTreeSearcher new.	args := Array with: (RBPatternVariableNode named: '`@object').	notifier 		matchesAnyTreeOf: (#(add: addAll: remove: removeAll:) collect: 					[:each | 					RBMessageNode 						receiver: aCollectionTree copy						selector: each						arguments: args])		do: [:aNode :answer | true].	^notifier executeTree: aParseTree initialAnswer: false! !PharoSyntaxTutorial removeSelector: #prepareDebuggerExample!PharoSyntaxTutorial removeSelector: #initialize!"ProfStef-Core"!"Refactoring-Critics"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.802.mcz') load.ScriptLoader new update40619.!----End fileIn----!----QUIT----2015-08-26T17:19:20.432137+02:00 Pharo.image priorSource: 219452!----STARTUP----2015-08-26T17:19:20.598586+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-08-26T17:19:24.761874+02:00 Pharo.image priorSource: 236604!----STARTUP----2015-08-26T17:59:14.8342+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-08-26T17:59:15.018924+02:00 Pharo-40619.image priorSource: 236799!----STARTUP----2015-08-28T15:17:16.060902+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 8/28/2015 15:15' prior: 33774181!commentForCurrentUpdate ^ '16388 Backport Pharo4: 16387 remove Cursor read showWhile: from ImageReadWriter>>#formFromStream:	https://pharo.fogbugz.com/f/cases/16388'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 8/28/2015 15:15'!script620	^ 'AST-Core-TheIntegrator.286.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.192.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.685.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.175.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.92.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.60.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2016.mczKernelTests-TheIntegrator.769.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.117.mczManifest-Core-TheIntegrator.217.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1011.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.343.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.170.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.912.mczNautilus-Tests-TheIntegrator.14.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.643.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.60.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.383.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.272.mczRefactoring-Critics-TheIntegrator.165.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-TheIntegrator.189.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.113.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.241.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.68.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 8/28/2015 15:15'!update40620	"self new update40620"	self withUpdateLog: '16388 Backport Pharo4: 16387 remove Cursor read showWhile: from ImageReadWriter>>#formFromStream:	https://pharo.fogbugz.com/f/cases/16388'.	self loadTogether: self script620 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update40619!ScriptLoader removeSelector: #script619!"ScriptLoader40"!!ImageReadWriter class methodsFor: 'image reading/writing' stamp: 'MarcusDenker 8/28/2015 09:43' prior: 26775261!formFromStream: aBinaryStream 	"Answer a ColorForm stored on the given stream.  closes the stream"	| reader readerClass form |	readerClass := self withAllSubclasses 		detect: [ :subclass | subclass understandsImageFormat: aBinaryStream ]		ifNone: 			[ aBinaryStream close.			^ self error: 'image format not recognized' ].	reader := readerClass new on: aBinaryStream reset.	form := reader nextImage.	reader close.	^ form! !"Graphics-Files"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.803.mcz') load.ScriptLoader new update40620.!----End fileIn----!----QUIT----2015-08-28T15:17:17.767005+02:00 Pharo.image priorSource: 236992!----STARTUP----2015-08-28T15:17:17.93146+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-08-28T15:17:21.845199+02:00 Pharo.image priorSource: 252956!----STARTUP----2015-08-28T15:30:44.029635+02:00 as /builds/workspace/Pharo-4.0-Update-Step-5-Publish/Pharo.image!----SNAPSHOT----2015-08-28T15:30:44.119378+02:00 Pharo-40620.image priorSource: 253150!----STARTUP----2015-09-01T15:36:15.989708+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 9/1/2015 15:33' prior: 33791721!commentForCurrentUpdate ^ '15935 Backport 4.0: Renaming a package just by changing upper/lowercase removes the package	https://pharo.fogbugz.com/f/cases/15935'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 9/1/2015 15:33'!script621	^ 'AST-Core-TheIntegrator.286.mczAST-Tests-Core-TheIntegrator.65.mczAnnouncements-Core-MarcusDenker.55.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.25.mczAsmJit-Core-MarcusDenker.8.mczAsmJit-Extension-MarcusDenker.8.mczAsmJit-Instructions-TheIntegrator.13.mczAsmJit-Operands-StephaneDucasse.14.mczAsmJit-StackManagement-SvenVanCaekenberghe.11.mczAsmJit-Tests-TheIntegrator.21.mczAsmJit-x86-TheIntegrator.40.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-MarcusDenker.85.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-MarcusDenker.50.mczAthens-Examples-TudorGirba.43.mczAthens-Morphic-NicolaiHess.44.mczAthens-Text-NicolaiHess.16.mczBalloon-StephaneDucasse.118.mczBalloonTests-MarcusDenker.3.mczChroma-CubeHelix-TheIntegrator.2.mczCodeImport-TheIntegrator.48.mczCollections-Abstract-StephaneDucasse.276.mczCollections-Arithmetic-TheIntegrator.15.mczCollections-Atomic-MarcusDenker.10.mczCollections-Native-TheIntegrator.9.mczCollections-Sequenceable-TheIntegrator.192.mczCollections-Stack-MarcusDenker.7.mczCollections-Streams-TheIntegrator.168.mczCollections-Strings-TheIntegrator.350.mczCollections-Support-MarcusDenker.57.mczCollections-Unordered-TheIntegrator.207.mczCollections-Weak-TheIntegrator.88.mczCollectionsTests-TheIntegrator.685.mczCompiler-TheIntegrator.582.mczCompression-TheIntegrator.149.mczCompressionTests-TheIntegrator.29.mczConfigurationCommandLineHandler-Core-TheIntegrator.27.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczDebugger-Tests-TheIntegrator.2.mczDebuggerActions-MarcusDenker.74.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.106.mczDeprecated40-TheIntegrator.48.mczEmbeddedFreeType-TheIntegrator.15.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-MarcusDenker.32.mczFileSystem-Core-TheIntegrator.175.mczFileSystem-Disk-TheIntegrator.79.mczFileSystem-Memory-TheIntegrator.57.mczFileSystem-Tests-Core-TheIntegrator.92.mczFileSystem-Tests-Disk-TheIntegrator.22.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.17.mczFiles-TheIntegrator.373.mczFontChooser-TheIntegrator.7.mczFontInfrastructure-TheIntegrator.8.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.695.mczFreeTypeTests-SvenVanCaekenberghe.5.mczFuel-TheIntegrator.804.mczFuelCommandLineHandler-TheIntegrator.27.mczFuelSystem-FileRegistry-EstebanLorenzano.3.mczFuelTests-TheIntegrator.384.mczFuelTools-Debugger-StephaneDucasse.12.mczGT-Inspector-TudorGirba.305.mczGT-InspectorExtensions-Core-TudorGirba.144.mczGT-Playground-TudorGirba.110.mczGT-Spotter-StefanReichhart.307.mczGT-Spotter-EventRecorder-JurajKubelka.89.mczGT-SpotterExtensions-Core-TudorGirba.141.mczGT-Tests-Inspector-StefanReichhart.33.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-TudorGirba.8.mczGenerated-code-non-existing-package-EstebanLorenzano.2.mczGlamour-Announcements-AndreiChis.8.mczGlamour-Browsers-TorstenBergmann.109.mczGlamour-Core-StefanReichhart.299.mczGlamour-Examples-TorstenBergmann.291.mczGlamour-Helpers-AndreiChis.39.mczGlamour-Morphic-Brick-StefanReichhart.398.mczGlamour-Morphic-Brick-Tests-AliakseiSyrel.13.mczGlamour-Morphic-Pager-AndreiChis.103.mczGlamour-Morphic-Renderer-AndreiChis.320.mczGlamour-Morphic-Theme-StefanReichhart.212.mczGlamour-Morphic-Widgets-AndreiChis.177.mczGlamour-Presentations-AndreiChis.176.mczGlamour-Rubric-Presentations-AndreiChis.41.mczGlamour-Tests-Core-AliakseiSyrel.104.mczGlamour-Tests-Morphic-AndreiChis.124.mczGlamour-Tests-Resources-AndreiChis.3.mczGlamour-Tests-Rubric-AndreiChis.14.mczGofer-Core-TheIntegrator.228.mczGofer-Tests-TheIntegrator.164.mczGraphics-Canvas-TheIntegrator.2.mczGraphics-Display Objects-TheIntegrator.159.mczGraphics-Files-TheIntegrator.60.mczGraphics-Fonts-EstebanLorenzano.96.mczGraphics-Fonts-Tests-EstebanLorenzano.3.mczGraphics-Primitives-StephaneDucasse.157.mczGraphics-Resources-EstebanLorenzano.22.mczGraphics-Shapes-TheIntegrator.2.mczGraphics-Tests-TheIntegrator.72.mczGraphics-Transformations-TheIntegrator.12.mczGroupManager-TheIntegrator.72.mczGroupManagerUI-TheIntegrator.40.mczGrowl-TheIntegrator.37.mczHelpSystem-Core-TheIntegrator.122.mczHelpSystem-Tests-TheIntegrator.30.mczHudsonBuildTools20-TheIntegrator.65.mczJobs-EstebanLorenzano.4.mczKernel-TheIntegrator.2016.mczKernelTests-TheIntegrator.769.mczKeymapping-Core-EstebanLorenzano.195.mczKeymapping-KeyCombinations-EstebanLorenzano.45.mczKeymapping-Pragmas-TheIntegrator.50.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.94.mczKeymapping-Tools-Spec-TheIntegrator.30.mczKomitter-TheIntegrator.117.mczManifest-Core-TheIntegrator.217.mczManifest-CriticBrowser-TheIntegrator.177.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.49.mczMenuRegistration-TheIntegrator.74.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.114.mczMetacello-Core-MarcusDenker.722.mczMetacello-FileTree-EstebanLorenzano.30.mczMetacello-GitHub-StephaneDucasse.33.mczMetacello-MC-TheIntegrator.699.mczMetacello-PharoCommonPlatform-StephaneDucasse.12.mczMetacello-Platform.pharo20-EstebanLorenzano.36.mczMetacello-Platform.pharo30-StephaneDucasse.6.mczMetacello-ProfStef-MarcusDenker.16.mczMetacello-Reference-EstebanLorenzano.37.mczMetacello-TestsCore-EstebanLorenzano.36.mczMetacello-TestsMC-EstebanLorenzano.388.mczMetacello-TestsMCCore-EstebanLorenzano.6.mczMetacello-TestsMCResources-TheIntegrator.15.mczMetacello-TestsCommonMC.pharo20-EstebanLorenzano.4.mczMetacello-TestsPlatform.squeakCommon-MarcusDenker.19.mczMetacello-ToolBox-MarcusDenker.141.mczMetacello-Tutorial-EstebanLorenzano.27.mczMonticello-TheIntegrator.1011.mczMonticello-Tests-TheIntegrator.6.mczMonticelloConfigurations-MarcusDenker.70.mczMonticelloFileTree-Core-TheIntegrator.182.mczMonticelloFileTree-FileSystem-Utilities-MarcusDenker.32.mczMonticelloGUI-TheIntegrator.343.mczMonticelloMocks-EstebanLorenzano.2.mczMorphic-Base-TheIntegrator.441.mczMorphic-Core-TheIntegrator.170.mczMorphic-Examples-TheIntegrator.40.mczMorphic-Widgets-Basic-TheIntegrator.41.mczMorphic-Widgets-ColorPicker-StephaneDucasse.17.mczMorphic-Widgets-Extra-TheIntegrator.22.mczMorphic-Widgets-List-TheIntegrator.15.mczMorphic-Widgets-NewList-TheIntegrator.5.mczMorphic-Widgets-Pluggable-TheIntegrator.44.mczMorphic-Widgets-Scrolling-TheIntegrator.23.mczMorphic-Widgets-Tabs-TheIntegrator.12.mczMorphic-Widgets-Taskbar-StephaneDucasse.7.mczMorphic-Widgets-Tree-TheIntegrator.27.mczMorphic-Widgets-Windows-TheIntegrator.47.mczMorphicTests-TheIntegrator.99.mczMultilingual-Encodings-MarcusDenker.47.mczMultilingual-Languages-StephaneDucasse.40.mczMultilingual-OtherLanguages-MarcusDenker.12.mczMultilingual-Tests-MarcusDenker.35.mczMultilingual-TextConversion-TheIntegrator.70.mczMultilingual-TextConverterOtherLanguages-MarcusDenker.2.mczNECompletion-TheIntegrator.194.mczNECompletion-Tests-TheIntegrator.2.mczNativeBoost-Core-TheIntegrator.164.mczNativeBoost-Examples-CamilloBruni.16.mczNativeBoost-Mac-MarcusDenker.12.mczNativeBoost-Pools-CamilloBruni.13.mczNativeBoost-Tests-TheIntegrator.92.mczNativeBoost-Unix-MarcusDenker.17.mczNativeBoost-Win32-TheIntegrator.57.mczNautilus-TheIntegrator.912.mczNautilus-Tests-TheIntegrator.14.mczNautilusCommon-TheIntegrator.260.mczNautilusRefactoring-TheIntegrator.216.mczNetwork-Kernel-StephaneDucasse.112.mczNetwork-MIME-MarcusDenker.69.mczNetwork-Mail-StephaneDucasse.39.mczNetwork-Protocols-MarcusDenker.101.mczNetwork-UUID-MarcusDenker.29.mczNetwork-Url-MarcusDenker.99.mczNetworkTests-TheIntegrator.103.mczNewValueHolder-TheIntegrator.27.mczNodeNavigation-StephaneDucasse.51.mczNonInteractiveTranscript-TheIntegrator.15.mczOSWindow-Core-TheIntegrator.20.mczOSWindow-SDL2-EstebanLorenzano.19.mczOSWindow-VM-IgorStasenko.2.mczOpalCompiler-Core-TheIntegrator.643.mczOpalCompiler-Tests-TheIntegrator.282.mczOpalDecompiler-TheIntegrator.31.mczOpalTools-TheIntegrator.16.mczPharo-Help-TheIntegrator.15.mczPolymorph-TaskbarIcons-MarcusDenker.40.mczPolymorph-Widgets-TheIntegrator.1211.mczPragmaCollector-TheIntegrator.3.mczProfStef-Core-TheIntegrator.60.mczProfStef-Help-SvenVanCaekenberghe.14.mczProfStef-Tests-TheIntegrator.25.mczRPackage-Core-TheIntegrator.386.mczRPackage-SystemIntegration-TheIntegrator.232.mczRPackage-Tests-TheIntegrator.167.mczRecentSubmissions-StephaneDucasse.233.mczRefactoring-Changes-TheIntegrator.65.mczRefactoring-Core-TheIntegrator.272.mczRefactoring-Critics-TheIntegrator.165.mczRefactoring-Environment-TheIntegrator.49.mczRefactoring-Tests-Changes-MarcusDenker.38.mczRefactoring-Tests-Core-TheIntegrator.123.mczRefactoring-Tests-Critics-MarcusDenker.25.mczRefactoring-Tests-Environment-StephaneDucasse.11.mczReflectivity-StephaneDucasse.25.mczReflectivity-Tests-TheIntegrator.16.mczRegex-Core-MarcusDenker.33.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-MarcusDenker.9.mczReleaseTests-TheIntegrator.15.mczRing-Core-Containers-TheIntegrator.41.mczRing-Core-Kernel-TheIntegrator.207.mczRing-Monticello-MarcusDenker.29.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.83.mczRing-Tests-Monticello-MarcusDenker.19.mczRubric-TheIntegrator.189.mczSUnit-Core-TheIntegrator.138.mczSUnit-Help-MarcusDenker.9.mczSUnit-Tests-TheIntegrator.48.mczSUnit-UI-TheIntegrator.113.mczSUnit-UITesting-TheIntegrator.21.mczScriptLoader-Tests-TheIntegrator.4.mczSettings-Graphics-StephaneDucasse.28.mczSettings-Polymorph-TheIntegrator.78.mczSettings-System-EstebanLorenzano.38.mczShoreLine-Report-Core-TommasoDalSasso.9.mczShoreLine-Report-Settings-TommasoDalSasso.2.mczShoreLine-Report-UI-TommasoDalSasso.12.mczShout-TheIntegrator.241.mczShoutTests-TheIntegrator.27.mczSlot-TheIntegrator.604.mczSlot-Tests-TheIntegrator.39.mczSmartSuggestions-TheIntegrator.147.mczSmartSuggestions-Tests-TheIntegrator.2.mczSpec-Core-StephaneDucasse.386.mczSpec-Debugger-TheIntegrator.236.mczSpec-Examples-TheIntegrator.91.mczSpec-Help-TheIntegrator.11.mczSpec-Inspector-TheIntegrator.238.mczSpec-Layout-TheIntegrator.67.mczSpec-MorphicAdapters-TheIntegrator.207.mczSpec-PolyWidgets-TheIntegrator.57.mczSpec-Tests-StephaneDucasse.45.mczSpec-Tools-StephaneDucasse.261.mczStartupPreferences-TheIntegrator.131.mczSystem-Announcements-TheIntegrator.98.mczSystem-Caching-TheIntegrator.23.mczSystem-CachingTests-TheIntegrator.12.mczSystem-Changes-StephaneDucasse.257.mczSystem-Clipboard-SvenVanCaekenberghe.32.mczSystem-CommandLine-TheIntegrator.167.mczSystem-CommandLineHandler-TheIntegrator.3.mczSystem-FilePackage-TheIntegrator.132.mczSystem-FileRegistry-StephaneDucasse.33.mczSystem-Finalization-TheIntegrator.19.mczSystem-Hashing-StephaneDucasse.45.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Installers-SvenVanCaekenberghe.42.mczSystem-Localization-TheIntegrator.88.mczSystem-Localization-Tests-TheIntegrator.5.mczSystem-Object Events-MarcusDenker.15.mczSystem-Platforms-StephaneDucasse.61.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-Settings-StephaneDucasse.309.mczSystem-Sound-StephaneDucasse.18.mczSystem-Support-EstebanLorenzano.1094.mczSystem-VMEvents-TheIntegrator.2.mczTests-TheIntegrator.724.mczText-Core-StephaneDucasse.31.mczText-Diff-StephaneDucasse.4.mczText-Edition-StephaneDucasse.77.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.24.mczText-Tests-EstebanLorenzano.7.mczTool-Base-TheIntegrator.68.mczTool-Browser-Old-TheIntegrator.37.mczTool-Changes-TheIntegrator.22.mczTool-ConfigurationBrowser-TheIntegrator.15.mczTool-Diff-TheIntegrator.2.mczTool-FileList-TheIntegrator.34.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-FilePackageBrowser-TheIntegrator.7.mczTool-Finder-TheIntegrator.30.mczTool-ImageCleaner-TheIntegrator.10.mczTool-ProcessBrowser-StephaneDucasse.6.mczTool-Profilers-TheIntegrator.17.mczTool-SystemReporter-StephaneDucasse.10.mczTool-Transcript-TheIntegrator.12.mczTool-TxWorkspace-TheIntegrator.6.mczTool-Workspace-TheIntegrator.24.mczTools-TheIntegrator.1503.mczToolsTest-MarcusDenker.denker.71.mczTraits-TheIntegrator.757.mczTranscript-StephaneDucasse.32.mczTxText-Athens-TheIntegrator.44.mczTxText-AthensTests-IgorStasenko.9.mczTxText-Model-NicolaiHess.50.mczTxText-Styler-IgorStasenko.3.mczTxTextTests-Model-IgorStasenko.26.mczUIManager-TheIntegrator.141.mczUnicode-Initialization-MarcusDenker.10.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczUserManager-Core-MarcusDenker.13.mczUserManager-Tests-TheIntegrator.5.mczVersionner-Core-Announcements-MarcusDenker.11.mczVersionner-Core-Commands-ChristopheDemarey.53.mczVersionner-Core-DependenciesModel-TheIntegrator.95.mczVersionner-Core-Model-ChristopheDemarey.49.mczVersionner-Spec-Browser-ChristopheDemarey.173.mczVersionner-Tests-Core-Commands-TheIntegrator.17.mczVersionner-Tests-Core-DependenciesModel-MarcusDenker.40.mczVersionner-Tests-Core-Model-ChristopheDemarey.33.mczVersionner-Tests-Resources-MarcusDenker.14.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.37.mczZinc-Character-Encoding-Tests-SvenVanCaekenberghe.22.mczZinc-FileSystem-SvenVanCaekenberghe.10.mczZinc-HTTP-SvenVanCaekenberghe.423.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.48.mczZinc-Resource-Meta-FileSystem-TheIntegrator.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.33.mczZinc-Tests-SvenVanCaekenberghe.223.mczZinc-Zodiac-SvenVanCaekenberghe.34.mczZodiac-Core-SvenVanCaekenberghe.38.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-SvenVanCaekenberghe.12.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 9/1/2015 15:33'!update40621	"self new update40621"	self withUpdateLog: '15935 Backport 4.0: Renaming a package just by changing upper/lowercase removes the package	https://pharo.fogbugz.com/f/cases/15935'.	self loadTogether: self script621 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update40620!ScriptLoader removeSelector: #script620!"ScriptLoader40"!!RPackageOrganizer methodsFor: 'accessing' stamp: 'NicolaiHess 7/8/2015 22:53' prior: 53738151!packageNamed: aSymbol  ifAbsent: errorBlock	^ packages 		at: aSymbol asSymbol 		ifAbsent: errorBlock		! !"RPackage-Core"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo40/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader40-TheIntegrator.804.mcz') load.ScriptLoader new update40621.!----End fileIn----!----QUIT----2015-09-01T15:36:17.836289+02:00 Pharo.image priorSource: 253345!----STARTUP----2015-09-01T15:36:18.050775+02:00 as /builds/workspace/Pharo-4.0-Update-Step-1-Tracker/Pharo.image!----QUIT----2015-09-01T15:36:22.50955+02:00 Pharo.image priorSource: 268952!----STARTUP----2015-10-26T20:52:29.508671-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!ConfigurationOfBotArena class methodsFor: 'development support' stamp: 'ArturoZambrano 8/24/2014 21:43'!DevelopmentSupport"See the methods in the 'development support' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."	<apiDocumentation>! !!ConfigurationOfBotArena class methodsFor: 'private' stamp: 'ArturoZambrano 8/24/2014 21:43'!baseConfigurationClassIfAbsent: aBlock	^Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			self ensureMetacelloBaseConfiguration.			Smalltalk at: #MetacelloBaseConfiguration ifAbsent: aBlock ].! !!ConfigurationOfBotArena class methodsFor: 'private' stamp: 'ArturoZambrano 8/24/2014 21:43'!ensureMetacello	(self baseConfigurationClassIfAbsent: []) ensureMetacello! !!ConfigurationOfBotArena class methodsFor: 'private' stamp: 'ArturoZambrano 8/24/2014 21:43'!ensureMetacelloBaseConfiguration	Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			| repository version |			repository := MCHttpRepository location: 'http://seaside.gemstone.com/ss/metacello' user: '' password: ''.			repository				versionReaderForFileNamed: 'Metacello-Base-DaleHenrichs.2.mcz'				do: [ :reader | 					version := reader version.					version load.					version workingCopy repositoryGroup addRepository: repository ] ]! !!ConfigurationOfBotArena class methodsFor: 'metacello tool support' stamp: 'ArturoZambrano 8/24/2014 21:43'!isMetacelloConfig	"Answer true and the Metacello tools will operate on you"		^true! !!ConfigurationOfBotArena class methodsFor: 'loading' stamp: 'ArturoZambrano 8/24/2014 21:43'!load	"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."	"self load"	<apiDocumentation>	^(self project version: #stable) load! !!ConfigurationOfBotArena class methodsFor: 'loading' stamp: 'ArturoZambrano 8/24/2014 21:43'!loadBleedingEdge	"Load the latest versions of the mcz files defined for this project. It is not likely that the #bleedingEdge has been tested."	"self loadBleedingEdge"	<apiDocumentation>	^(self project version: #bleedingEdge) load! !!ConfigurationOfBotArena class methodsFor: 'loading' stamp: 'ArturoZambrano 8/24/2014 21:43'!loadDevelopment	"Load the #development version defined for this platform. The #development version will change over time and is not expected to be stable."	"self loadDevelopment"	<apiDocumentation>	^(self project version: #development) load! !!ConfigurationOfBotArena class methodsFor: 'accessing' stamp: 'ArturoZambrano 8/24/2014 21:43'!project	^self new project! !!ConfigurationOfBotArena class methodsFor: 'development support' stamp: 'ArturoZambrano 8/24/2014 21:43'!validate	"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). 	Errors identify specification issues that will result in unexpected behaviour when you load the configuration. 	Critical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.	Warnings identify specification issues that are technically correct, but are worth take a look at."	"self validate"	<apiDocumentation>	self ensureMetacello.	^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore! !!ConfigurationOfBotArena methodsFor: 'accessing' stamp: 'ArturoZambrano 8/24/2014 22:36'!baseline01: spec	<version: '0.1-baseline'>	spec		for: #common		do: [ 			spec blessing: #baseline.			spec repository: 'http://smalltalkhub.com/mc/FedericoBalaguer/BotArena/main'.			spec package: 'BotArena' with: [ spec requires: #('BOSS') ].			spec package: 'BOSS' with: [ spec repository: 'http://smalltalkhub.com/mc/CAR/BOSS/main' ] ]! !!ConfigurationOfBotArena methodsFor: 'accessing' stamp: 'ArturoZambrano 8/24/2014 21:43'!customProjectAttributes	 "Edit to return a collection of any custom attributes e.g. for conditional loading: Array with: #'Condition1' with: #'Condition2.	For more information see: http://code.google.com/p/metacello/wiki/CustomProjectAttrributes"	^ #().! !!ConfigurationOfBotArena methodsFor: 'accessing' stamp: 'ArturoZambrano 8/24/2014 22:19'!development: spec <symbolicVersion:#'development'>  spec for: #'common' version: '0.1-baseline'! !!ConfigurationOfBotArena methodsFor: 'accessing' stamp: 'ArturoZambrano 8/24/2014 21:43'!project	^ project ifNil: [ 		"Bootstrap Metacello if it is not already loaded"		(self class baseConfigurationClassIfAbsent: []) ensureMetacello.		"Construct Metacello project"		project := MetacelloMCProject new projectAttributes: self customProjectAttributes. 		(Smalltalk at: #MetacelloVersionConstructor) on: self project: project.		project loadType: #linear. "change to #atomic if desired"		project ]! !"ConfigurationOfBotArena"!!BGSGridEditorWindow commentStamp: '<historical>' prior: 0!"create new grid "e := BGSGridEditorWindow editNewGridOfSize: 50@50  withCellExtent: 15@15.e openAsIs.e printGridAsEvalString."edit a grid"grid := BGSGrid new addWallAt: (12@12) ; addWallAt: (12@13) ; addWallAt: (12@14) ; addWallAt: (12@15) ; addWallAt: (12@16) ; yourself.e := BGSGridEditorWindow editGrid: grid.e openAsIs.e printGridAsEvalString. !!BGSSimulationWindow commentStamp: '<historical>' prior: 0!I am a window that displays a simulation.To create an instance and have it immediatly displayed, you can either use one of the following messages:-BGSSimulationWindow onClass:  simulationClass-BGSSimulationWindow on: simulation-BGSSimulationWindow onClass:  simulationClass terrainCellExtent: 5@5-BGSSimulationWindow on: simulation terrainCellExtent: 5@5!!BGSExplorationSimulationWindow commentStamp: 'NouryBouraqadi 12/8/2011 11:20' prior: 0!I am a window that displays an exploration simulation.To create an instance and have it immediatly displayed, you can either use one of the following messages:-BGSExplorationSimulationWindow onClass:  explorationSimulationClass-BGSExplorationSimulationWindow on: explorationSimulation!!BGSChristmasSimulationWindow commentStamp: 'NouryBouraqadi 12/18/2011 20:22' prior: 0!see comment of BGSChristmasSimulation!!BGSBodyPart commentStamp: 'NouryBouraqadi 12/13/2011 21:18' prior: 0!BGSRangeSensor is an abstract superclass for range sensors.Subclasses should implement:-aceptVisitor: aVisitorInstance Variables:	range	<integer> the max distance to detect an obstacle. Cells beyond this distance are ignored.	botBoy <BGSRobotBody> body of robot that owes the sensor!!BGSDirectionalRangeSensor commentStamp: 'NouryBouraqadi 11/24/2011 19:30' prior: 0!I am a sensor that measures the number of empty cells between the robot and an obstacle in a particular direction. An obstacle being any non-empty cell.!!BGSOmnidirectionalRangeSensor commentStamp: 'NouryBouraqadi 11/25/2011 00:16' prior: 0!I am a sensor that detects obstacles in a disk around my position. The radius of the disk is my range + 1 (for my position).!!BGSWireless commentStamp: 'NouryBouraqadi 12/10/2011 21:16' prior: 0!I am a wireless communication interface. I allow communication between my owner and any other robot which has another wireless communication interface.!!BGSCar2012LogConverterToExcel commentStamp: '<historical>' prior: 0!BGSCar2012LogConverterToExcel convertToExcelFileAllLogsIn: (Smalltalk image imagePath, '/scripts/experiment/').BGSCar2012LogConverterToExcel loadLog: (Smalltalk image imagePath, '/scripts/experiment/result-01.st').!!BGSCell commentStamp: 'NouryBouraqadi 11/24/2011 19:17' prior: 0!I am a grid element.  I have a content that can be any visitable object (i.e. responding to acceptVisitor:)Subclasses are likely to override-acceptVisitor: someVisitor!!BGSExplorableCell commentStamp: 'NouryBouraqadi 12/7/2011 17:01' prior: 0!I am a cell in an explorable grid. I can be in two states: explored or unexplored (see IV state). Initially, I am unexplored, but when my content is set, I become explored. However, my state can be directly set using messages: markExplored and markUnexploredInstance Variables:	state	<BGSExplorableCellState> support for the State design pattern!!BGSRobotBody commentStamp: 'NouryBouraqadi 12/10/2011 15:10' prior: 0!I am a robot body deployed in a terrain.I have a collection of parts, each having an identifier. I retreive parts given their identifiers using message:-part: aSymbolInstance Variables:	terrain	<BGSGrid> terrain where I am deployed	position	<Point> coordinates of the cell occupied in terrain	partsDict <Dictionary : Symbol -> BGSBodyPart> gathers component parts such as range sensors and wireless communication interface!!BGSRangeSensorBeltRobotBody commentStamp: 'NouryBouraqadi 12/8/2011 16:52' prior: 0!I am a body of robot. I have an BGSOmnidirectionalRangeSensor that allows me to explore cells all arround my position.!!BGSWall commentStamp: 'NouryBouraqadi 11/14/2011 17:06' prior: 0!BGSWall represent a static obstacle!!BGSExplorableCellState commentStamp: 'NouryBouraqadi 12/8/2011 10:56' prior: 0!I am the state of an BGSExplorableCell.Concrete subclasses should implement:-acceptVisitor: visitor	Double dispatch for the visitor design pattern-isExplored	Answers true if I am an explored state. Answers false otherwise.-markExplored	Switch to explored state.-markUnexplored	Switch to unexplored state Instance Variables:	cell	<BGSExplorableCell> cell for which I am the state!!BGSExploredCellState commentStamp: 'NouryBouraqadi 12/8/2011 10:57' prior: 0!I am the state of a cell that was explored!!BGSUnexploredCellState commentStamp: 'NouryBouraqadi 12/8/2011 10:57' prior: 0!I am the state of a cell that was NOT explored yet!!BGSGrid commentStamp: 'NouryBouraqadi 12/8/2011 11:06' prior: 0!I am a 2D collection of cells. Cells can be of arbitrary kind: empty, wall, robot body, ...Instances are created by the following expression:	BGSGrid extent: aPointwhere aPoint provides the width and the height of the gridOn initialization (i.e. when the extent is defined), I trigger wall building.To ease wall construction a set of facility methods is provided (see protocol building).Subclasses are likely to override method:-buildWalls 		Put walls in the appropriate cells	!!BGSExplorableGrid commentStamp: 'NouryBouraqadi 12/8/2011 11:02' prior: 0!I am a grid with explorable cells. On creation/reset, all my cells are unexplored. I provide explorer robots with informations using messages:-exploredPositions	Positions of cells that have been explored-frontierPositions	Positions of cells that have been explored, but which at least one neighbor has NOT been explored yet-unexploredPositions	Positions of cells that have NOT been eplored yet.!!BGSCheckerboardLikeTerrain commentStamp: 'NouryBouraqadi 12/8/2011 16:55' prior: 0!I am a terrain with one cell obstacles uniformely sperad and aligned.!!BGSChristmasTerrain commentStamp: 'NouryBouraqadi 12/18/2011 20:22' prior: 0!see comment of BGSChristmasSimulation!!BGSTerrainExample commentStamp: 'NouryBouraqadi 11/15/2011 21:47' prior: 0!I am an example of terrain used by the BGCSSimulationExample!!BGSLogger commentStamp: 'NouryBouraqadi 11/13/2011 21:28' prior: 0!Logger maintains a file with logs of a simulation.To start logging simply create a logger by evaluating the expression:	logger := BGSLogger on: someSimulation By default the name of the log file is the class name of the simulation with the current time stamp.A different can be chosen by evaluating:	logger := BGSLogger on: someSimulation logInto: 'myLogFile.txt'Subclasses are likely to redefine methods:-logHeader 	Produces the first line of the log file with names of each column-logStep	Adds a new line to the log file with current simulation data!!BGSExplorationLogger commentStamp: 'NouryBouraqadi 12/8/2011 17:10' prior: 0!I log into a file an exploration simulation.To start logging simply create a logger by evaluating the expression:	logger := BGSExplorationLogger on: someSimulation By default the name of the log file is the class name of the simulation with the current time stamp.A different can be chosen by evaluating:	logger := BGSExplorationLogger on: someSimulation logInto: 'myLogFile.txt'!!BGSRobot commentStamp: 'NouryBouraqadi 11/9/2011 07:43' prior: 0!BGSRobot is a basic robot that has an identifier (id) and body deployed in some terrain.It does nothing. To make it perform some action, subclasses are likely to override method step Instance Variables:	id	<Symbol> Identifier of the robot. It is recommanded to assign each robot a unique ID	body	<BGSRobotBody>!!BGSFrontierExplorerRobot commentStamp: 'NouryBouraqadi 12/8/2011 16:53' prior: 0!I am a robot that builds a map of the terrain. I update the map and move towards a frontier cell until there are no more frontier cells left.I compute path to frontier cells that avoids obstacles while going through only already explored cells.I rely on a BGSRangeSensorBeltRobotBody.Subclasses are likely to override method:-targetFrontierPosition	Answers the frontier to move toInstance Variables:	map	<BGSExplorableGrid> map of the terrain. At the begining all its cells are marked as unexplored.!!BGSNearestFrontierExplorerRobot commentStamp: 'NouryBouraqadi 12/8/2011 16:58' prior: 0!I am an explorer robot that moves towards the nearest frontier!!BGSCollaborativeNearestFrontierExplorerRobot commentStamp: 'NouryBouraqadi 12/8/2011 23:13' prior: 0!I am an explorer robot that moves towards the nearest frontier and shares map with other robots that are within wireless range.!!BGSRandomWalkRobot commentStamp: 'NouryBouraqadi 11/15/2011 21:46' prior: 0!I am a robot that moves to a random free neighboring cell !!BGSSnowFlakeRobot commentStamp: 'NouryBouraqadi 12/18/2011 20:22' prior: 0!see comment of BGSChristmasSimulation!!BGSSimulation commentStamp: 'NouryBouraqadi 12/8/2011 17:00' prior: 0!BGSSimulation is the main entry point to perform simulations. It deploys robots on a terrain and make them perform their actions. A simulation has its own process that drives robots (step message). It can be paused any time (message pause) and it automatically stops when reaching a stop condition.Subclasses should implement methods:-deployRobots-robotClass-robotCountSubclasses are likely to override method:-terrainClass-nameInstance Variables:	robots	<Collection of: BGSRobot>	terrain	<BGSTerrain>	pauseFlagLock	<Mutex>	isPaused	<Boolean>	stepCounter	<Integer> is incremented on every simulation step!!BGSExplorationSimulation commentStamp: 'NouryBouraqadi 12/8/2011 11:19' prior: 0!I am an simulation of an exploration of un unkown terrain.  I stop when all terrain cells are explored.I provide information on the exploration status (typically used for display and log) using messages such as:-frontierPositions	Answers a set with positions of frontier cells-unexploredPositions	Answers a set with positions of unexplored cells!!BGS1RobotFrontierExplorationSimulation commentStamp: 'NouryBouraqadi 12/8/2011 16:56' prior: 0!I am a simulation involving an explorer robot that moves towards the nearest frontier in a chekerboard like terrain!!BGS5CollaborativeRobotsExplorationSimulation commentStamp: 'NouryBouraqadi 12/8/2011 23:27' prior: 0!I am a simulation of an exploration of a terrain using 5 collaborative robots (BGSCollaborativeNearestFrontierExplorerRobot) that share their maps when they are within wireless range!!BGSChristmasSimulation commentStamp: 'NouryBouraqadi 12/18/2011 20:22' prior: 0!Simulation for celebrating christmas 2011. To run it, evaluate the following expression.BGSChristmasSimulationWindow onClass: BGSChristmasSimulation. !!BGSSimulationWithTopLeftIinitialPosition commentStamp: '<historical>' prior: 0!terrain :=  BGSExplorableTerrain extent: 100@100..terrain :=  BGSCheckerboardLikeTerrain extent: 100@100..sim := BGSCar2012Simulation runFor: 4  in: terrain logFileName: (Smalltalk image imagePath, '/result.st').BGSExplorationSimulationWindow on:  sim.sim pause.sim := nil.BGSCar2012DoitLogger allInstances first close.!!BGSSlowedDownSimulation commentStamp: 'NouryBouraqadi 12/13/2011 23:12' prior: 0!In order to allow userconfortably watch simulation (avoid the flashing simulation effect), I introduce a delay to suspend the simulation process every step for a short duration (milliseconds). See references to variable stepDelayInstance Variables:	stepDelay	<Delay>	stepDelayMilliseconds	<ProtoObject | PseudoContext>!!BGSSimulationExample commentStamp: 'NouryBouraqadi 11/16/2011 22:37' prior: 0!SimulationExample is a simple simulation with a three robots that randomly walks in a terrain.Instance Variables:	stepDelay	<Delay> delay between two simulation steps.		To display and log the simulation, evaluate in a workspace the following code snippet	sim := BGSSimulationExample new.	BGSSimulationWindow on:  sim.	logger := BGSLogger on: sim.!!BGSGridView commentStamp: 'NouryBouraqadi 11/14/2011 17:03' prior: 0!BGSGridView is a morph that observes a grid and updates its display according to the grid changes: typically a change of a cell.Subclasses are likely to override methods:-drawCell:at:on: 		Main method that drives cell drwaing-drawRobotBody:at:on: 	Draws a robot as a blue dot in a cell!!BGSExplorableGridView commentStamp: 'NouryBouraqadi 12/8/2011 11:12' prior: 0!I am the view of an BGSExplorableGrid. I display frontiers, explored and unexplored cells in different colors.!!BGSChristmasGridView commentStamp: 'NouryBouraqadi 12/18/2011 20:22' prior: 0!see comment of BGSChristmasSimulation!!BGSGridEditorWindow commentStamp: '<historical>' prior: 33867975!"create new grid "e := BGSGridEditorWindow editNewGridOfSize: 50@50  withCellExtent: 15@15.e openAsIs.e printGridAsEvalString."edit a grid"grid := BGSGrid new addWallAt: (12@12) ; addWallAt: (12@13) ; addWallAt: (12@14) ; addWallAt: (12@15) ; addWallAt: (12@16) ; yourself.e := BGSGridEditorWindow editGrid: grid.e openAsIs.e printGridAsEvalString. !!BGSGridEditorWindow class methodsFor: 'instance creation' stamp: 'LucFabresse 4/1/2012 10:31'!editGrid: grid 	^self displayGrid: grid cellExtent: BGSGridView defaultCellExtent 		! !!BGSGridEditorWindow class methodsFor: 'instance creation' stamp: 'LucFabresse 4/1/2012 08:34'!editNewGridOfSize: size	^self editGrid: ( BGSGrid extent: size )! !!BGSGridEditorWindow class methodsFor: 'instance creation' stamp: 'LucFabresse 4/1/2012 10:39'!editNewGridOfSize: size withCellExtent: cellSize	^self  displayGrid: ( BGSGrid extent: size ) cellExtent: cellSize! !!BGSGridEditorWindow methodsFor: 'initialize-release' stamp: 'LucFabresse 4/1/2012 13:09'!gridViewClass	^BGSClickableGridView ! !!BGSGridEditorWindow methodsFor: 'as yet unclassified' stamp: 'LucFabresse 4/2/2012 09:40'!printGridAsEvalString	 | stream |		stream := WriteStream on: (String new: (self gridView grid cells size *  self gridView grid cells size)).		stream nextPutAll: 'BGSGrid new' ; lf.		self gridView grid cells do: [ :cell | 		cell content isNil not ifTrue: [ 				stream nextPutAll: ' addWallAt: ';				nextPutAll: cell position printString;				nextPutAll: ' ;' 		]	].			stream nextPutAll: ' yourself .' ; lf.				^stream contents! !!BGSGridWindow class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 12/13/2011 23:25'!displayGrid: grid cellExtent: aPoint	^self new		displayGrid: grid cellExtent: aPoint;		yourself! !!BGSGridWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 23:25'!displayGrid: aBGSGrid cellExtent: aPoint	self gridView: (self gridViewClass on: aBGSGrid).	self gridView cellExtent: aPoint.	self displayGridView.! !!BGSGridWindow methodsFor: 'displaying' stamp: 'NouryBouraqadi 12/13/2011 23:35'!displayGridView	| newExtent deltaWidth board deltaHeight |	board := AlignmentMorph newRow.	board extent: self gridView extent.	board addMorphBack: self gridView.	deltaWidth := 2 * (self borderWidth + self class borderWidth).	deltaHeight := 2 * (self borderWidth + self class borderWidth) + self labelHeight.	newExtent := board fullBounds extent + (deltaWidth @ deltaHeight).	self extent: newExtent.	self addMorph: board frame: (0 @ 0 extent: 1 @ 1)! !!BGSGridWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/13/2011 22:46'!gridView	^ gridView! !!BGSGridWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/13/2011 22:46'!gridView: anObject	gridView := anObject! !!BGSGridWindow methodsFor: 'accessing' stamp: 'LucFabresse 4/1/2012 10:29'!gridViewCellExtent.	^self gridView cellExtent! !!BGSGridWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 22:47'!gridViewClass	^BGSGridView ! !!BGSGridWindow methodsFor: 'displaying' stamp: 'NouryBouraqadi 12/13/2011 22:53'!openInWorld	self openAsIs ! !!BGSGridWindow methodsFor: 'displaying' stamp: 'NouryBouraqadi 12/13/2011 22:53'!wantsExpandBox	^false! !!BGSGridWindow methodsFor: 'displaying' stamp: 'NouryBouraqadi 12/13/2011 22:53'!wantsGrips	^false! !!BGSRobotMapWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/14/2011 14:22'!gridViewClass 	^BGSExplorationMapView ! !!BGSSimulationWindow commentStamp: '<historical>' prior: 33868396!I am a window that displays a simulation.To create an instance and have it immediatly displayed, you can either use one of the following messages:-BGSSimulationWindow onClass:  simulationClass-BGSSimulationWindow on: simulation-BGSSimulationWindow onClass:  simulationClass terrainCellExtent: 5@5-BGSSimulationWindow on: simulation terrainCellExtent: 5@5!!BGSExplorationSimulationWindow commentStamp: 'NouryBouraqadi 12/8/2011 11:20' prior: 33868849!I am a window that displays an exploration simulation.To create an instance and have it immediatly displayed, you can either use one of the following messages:-BGSExplorationSimulationWindow onClass:  explorationSimulationClass-BGSExplorationSimulationWindow on: explorationSimulation!!BGSChristmasSimulationWindow commentStamp: 'NouryBouraqadi 12/18/2011 20:22' prior: 33869228!see comment of BGSChristmasSimulation!!BGSChristmasSimulationWindow class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 12/18/2011 20:10'!on: simulation	(super on: simulation)		position: 40@0;		yourself! !!BGSChristmasSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 10:09'!gridViewClass	^BGSChristmasGridView ! !!BGSExplorationSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 23:32'!addButtonsToPanel: panel	|botMapsButton|	botMapsButton := self makeButton: 'Robot Maps' action: #showRobotMaps state: nil target: self. 	panel addMorph: botMapsButton.	super addButtonsToPanel: panel.! !!BGSExplorationSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/7/2011 16:43'!addCountersToPanel: panel 	| frontierView unexploredView |	self frontierCounterMorph: (LabelMorph contents: '0').	frontierView := self wrapMorph: self frontierCounterMorph andAddLabel: 'Frontier cells'. 			self unexploredCounterMorph: (LabelMorph contents: '1000').	unexploredView := self wrapMorph: self unexploredCounterMorph andAddLabel: 'Unexplored cells'.	{frontierView. unexploredView} do: [:view|	panel 		addMorph: view		fullFrame: (LayoutFrame 				fractions: (0 @ 0 corner: 1 @ 0)				offsets: (4 @ 4 corner: -8 @ 44)).	].	super addCountersToPanel: panel! !!BGSExplorationSimulationWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/7/2011 16:43'!frontierCounterMorph	^ frontierCounterMorph! !!BGSExplorationSimulationWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/7/2011 16:43'!frontierCounterMorph: anObject	frontierCounterMorph := anObject! !!BGSExplorationSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 22:45'!gridViewClass	^BGSExplorableGridView ! !!BGSExplorationSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 23:42'!robotMapCellExtent	^3@3! !!BGSExplorationSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 23:41'!showRobotMaps	self simulation robots do: [:bot|		|window|		window := BGSRobotMapWindow displayGrid: bot map cellExtent: self robotMapCellExtent.		window setLabel: bot id.		window openInWorld		]! !!BGSExplorationSimulationWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/7/2011 16:43'!unexploredCounterMorph	^ unexploredCounterMorph! !!BGSExplorationSimulationWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/7/2011 16:43'!unexploredCounterMorph: anObject	unexploredCounterMorph := anObject! !!BGSExplorationSimulationWindow methodsFor: 'display' stamp: 'NouryBouraqadi 12/7/2011 16:45'!update: anObject	super update: anObject.	self frontierCounterMorph contents: self simulation frontierPositionsCount printString.	self unexploredCounterMorph contents: self simulation unexploredPositionsCount printString.! !!BGSSimulationWindow class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 5/4/2012 10:29'!defaultGridCellExtent 	^10@10! !!BGSSimulationWindow class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 5/4/2012 10:29'!on: aSimulation	^self on: aSimulation terrainCellExtent: self defaultGridCellExtent ! !!BGSSimulationWindow class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 5/4/2012 10:34'!on: aSimulation  terrainCellExtent: aPoint	^self new		 gridCellExtent: aPoint;		simulation: aSimulation;		openInWorld;		yourself! !!BGSSimulationWindow class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 11/12/2011 18:00'!onClass: aSimulationClass	^self on: aSimulationClass new! !!BGSSimulationWindow class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 5/4/2012 10:25'!onClass: aSimulationClass terrainCellExtent: aPoint	^self on: aSimulationClass new terrainCellExtent: aPoint! !!BGSSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/6/2011 18:56'!addButtonsToPanel: panel	| stepBtn runBtn pauseBtn resetBtn inspectBtn|	runBtn := self makeButton: 'Run' action: #run state: #isPaused.	pauseBtn := self makeButton: 'Pause' action: #pause state: #isRunning.	stepBtn := self makeButton: 'Step' action: #stepIfPaused state: #isPaused.	resetBtn := self makeButton: 'Reset' action: #resetSimulation state: #canResetSimulation target: self. 	inspectBtn := self makeButton: 'Inspect' action: #inspect state: nil. 	{inspectBtn. resetBtn. pauseBtn. runBtn. stepBtn} do: [:button|		panel addMorph: button]! !!BGSSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/6/2011 18:58'!addCountersToPanel: panel 	| stepsView |	self stepCounterMorph: (LabelMorph contents: '0').	stepsView := self wrapMorph: self stepCounterMorph andAddLabel: 'Steps:'. 	panel 		addMorph: stepsView		fullFrame: (LayoutFrame 				fractions: (0 @ 0 corner: 1 @ 0)				offsets: (4 @ 4 corner: -8 @ 44))! !!BGSSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 23:33'!buttonsWidth	^150! !!BGSSimulationWindow methodsFor: 'testing' stamp: 'NouryBouraqadi 11/22/2011 11:25'!canResetSimulation	^self simulation isRunning not! !!BGSSimulationWindow methodsFor: 'displaying' stamp: 'LucFabresse 4/2/2012 15:33'!displayGridView	| newExtent deltaWidth board deltaHeight |	board := AlignmentMorph newRow.	board extent: self gridView extent + (self buttonsWidth @ 0).	board addMorphBack: self newControlPanelMorph.	board addMorphBack: self gridView.	deltaWidth := 2 * (self borderWidth + self class borderWidth).	deltaHeight := 2 * (self borderWidth + self class borderWidth) + self labelHeight.	newExtent := board fullBounds extent + (deltaWidth @ deltaHeight).	self extent: newExtent.	self addMorph: board frame: (0 @ 0 extent: 1 @ 1)! !!BGSSimulationWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 5/4/2012 10:27'!gridCellExtent	^ gridCellExtent! !!BGSSimulationWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 5/4/2012 10:27'!gridCellExtent: anObject	gridCellExtent := anObject! !!BGSSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/22/2011 11:17'!makeButton:  aString action: actionSelector state: stateSelector	 ^self makeButton:  aString action: actionSelector state: stateSelector target: self simulation		! !!BGSSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/22/2011 11:15'!makeButton:  aString action: actionSelector state: stateSelector target: target	| btn labelMorph |	btn := PluggableButtonMorph 		on: target		getState: stateSelector		action: actionSelector.	labelMorph := StringMorph contents: aString.	labelMorph emphasis: 1.	btn		label: labelMorph;		useRoundedCorners;		hResizing: #spaceFill;		onColor: self onButtonColor offColor: self offButtonColor;		borderWidth: 2;		borderColor: #raised.	btn label color: Color darkGray.	btn extent: self buttonsWidth @ 50. "50 is not an important value since it will be changed by the enclosing alignment morph"	^btn! !!BGSSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 22:46'!newControlPanelMorph	| panel |	panel := AlignmentMorph newColumn.	panel color: Color darkGray.	panel extent: self buttonsWidth @ self gridView extent y.	self addCountersToPanel: panel.	self addButtonsToPanel: panel.	^ panel! !!BGSSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/12/2011 17:45'!offButtonColor 	^Color white! !!BGSSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/12/2011 17:45'!onButtonColor 	^Color green ! !!BGSSimulationWindow methodsFor: 'testing' stamp: 'NouryBouraqadi 11/22/2011 11:31'!resetSimulation	| shouldReset |	self canResetSimulation ifFalse: [^self].	shouldReset := self proceed: 'Do you really want to reset the simulation?' title: 'Reset simulation?' .	shouldReset ifFalse: [^self].	self simulation reset! !!BGSSimulationWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/10/2011 22:31'!simulation	^ simulation! !!BGSSimulationWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 5/4/2012 10:26'!simulation: newSimulation	simulation := newSimulation.	simulation addDependent: self.	self displayGrid: simulation terrain cellExtent: self gridCellExtent.	self update: newSimulation! !!BGSSimulationWindow methodsFor: 'displaying' stamp: 'NouryBouraqadi 11/12/2011 17:20'!simulationStatusString	self simulation autoStopConditionReached ifTrue: [^'Stop condition reached'].	self simulation isPaused ifTrue: [^'Paused'].	^'Running'! !!BGSSimulationWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/10/2011 22:31'!stepCounterMorph	^ stepCounterMorph! !!BGSSimulationWindow methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/10/2011 22:31'!stepCounterMorph: anObject	stepCounterMorph := anObject! !!BGSSimulationWindow methodsFor: 'displaying' stamp: 'NouryBouraqadi 12/13/2011 23:03'!update: anObject	super update: anObject.	self setLabel: self simulation name, ' - ', self simulationStatusString.	self stepCounterMorph contents: self simulation stepCount printString.! !!BGSSimulationWindow methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/13/2011 11:56'!wrapMorph: aMorph andAddLabel: aString    "creates a wrapping panel for aMorph with  a label above it"    | column strM |    column := AlignmentMorph newColumn                wrapCentering: #topLeft;                cellPositioning: #topLeft;                hResizing: #spaceFill;                vResizing: #shrinkWrap;                borderWidth: 2;                layoutInset: 5;                color: Color transparent;                useRoundedCorners;                borderStyle: (BorderStyle complexAltInset width: 2).    column addMorph: aMorph.    strM := StringMorph contents: aString.    strM color: Color veryVeryLightGray.    column addMorph: strM.    ^ column ! !!BGSBodyPart commentStamp: 'NouryBouraqadi 12/13/2011 21:18' prior: 33869338!BGSRangeSensor is an abstract superclass for range sensors.Subclasses should implement:-aceptVisitor: aVisitorInstance Variables:	range	<integer> the max distance to detect an obstacle. Cells beyond this distance are ignored.	botBoy <BGSRobotBody> body of robot that owes the sensor!!BGSBodyPart class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 12/10/2011 21:53'!botBody: robotBody name: aSymbol	^self new		botBody: robotBody name: aSymbol;		yourself! !!BGSBodyPart methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/13/2011 21:20'!acceptVisitor: aVisitor	self subclassResponsibility! !!BGSBodyPart methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/24/2011 19:28'!botBody	^ botBody! !!BGSBodyPart methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/11/2011 10:05'!botBody: robotBody name: aSymbol	botBody := robotBody.	name := aSymbol.	botBody addPart: self named: aSymbol ! !!BGSBodyPart methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/11/2011 10:17'!cell	^self botBody cell! !!BGSBodyPart methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 18:27'!isAcceptingVisitorsByDefault	^true! !!BGSBodyPart methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/11/2011 10:05'!name	^name! !!BGSBodyPart methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/24/2011 19:28'!position 	^self botBody position! !!BGSBodyPart methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/24/2011 19:29'!terrain	^self botBody terrain! !!BGSDirectionalRangeSensor commentStamp: 'NouryBouraqadi 11/24/2011 19:30' prior: 33869715!I am a sensor that measures the number of empty cells between the robot and an obstacle in a particular direction. An obstacle being any non-empty cell.!!BGSDirectionalRangeSensor class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 12/11/2011 09:56'!botBody: robotBody name: sensorName range: maxDistanceToObstacle	^(self botBody: robotBody name: sensorName)		range: maxDistanceToObstacle;		yourself! !!BGSDirectionalRangeSensor methodsFor: 'visiting' stamp: 'FedericoBalaguer 8/22/2015 19:13'!acceptVisitor: aVisitor	aVisitor visitDirectionalRangeSensor: self 	! !!BGSDirectionalRangeSensor methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/28/2011 19:38'!defaultRange	^1! !!BGSDirectionalRangeSensor methodsFor: 'sensing' stamp: 'NouryBouraqadi 11/19/2011 10:32'!distanceToObstacle	1 to: self range do: [:distance|		(self isObstacleAtDistance: distance) ifTrue: [^distance - 1].	].	^self range! !!BGSDirectionalRangeSensor methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/19/2011 10:35'!heading	^self botBody heading! !!BGSDirectionalRangeSensor methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/28/2011 19:37'!initialize 	super initialize.	self range: self defaultRange! !!BGSDirectionalRangeSensor methodsFor: 'sensing' stamp: 'NouryBouraqadi 11/19/2011 10:51'!isObstacleAtDistance: distance	|cellPosition|	cellPosition := self position + (distance * self heading).	^(self terrain isEmptyCellAt: cellPosition) not! !!BGSDirectionalRangeSensor methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/28/2011 19:38'!range	^ range! !!BGSDirectionalRangeSensor methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/28/2011 19:37'!range: anObject	range := anObject! !!BGSOmnidirectionalRangeSensor commentStamp: 'NouryBouraqadi 11/25/2011 00:16' prior: 33869960!I am a sensor that detects obstacles in a disk around my position. The radius of the disk is my range + 1 (for my position).!!BGSOmnidirectionalRangeSensor methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/13/2011 21:20'!acceptVisitor: aVisitor	aVisitor visitOmnidirectionalRangeSensor: self! !!BGSOmnidirectionalRangeSensor methodsFor: 'sensing' stamp: 'NouryBouraqadi 12/13/2011 21:17'!emptySensedPositions	^self sensedPositions select: [:position|		self terrain isEmptyCellAt: position]! !!BGSOmnidirectionalRangeSensor methodsFor: 'sensing' stamp: 'NouryBouraqadi 12/13/2011 21:40'!obstacleSensedPositions	^self sensedPositions reject: [:position|		self terrain isEmptyCellAt: position]! !!BGSOmnidirectionalRangeSensor methodsFor: 'sensing' stamp: 'NouryBouraqadi 12/13/2011 21:17'!sensedPositions	^self terrain positionsAround: self position! !!BGSWireless commentStamp: 'NouryBouraqadi 12/10/2011 21:16' prior: 33870157!I am a wireless communication interface. I allow communication between my owner and any other robot which has another wireless communication interface.!!BGSWireless class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 12/11/2011 10:16'!botBody: robotBody name: sensorName range: maxDistanceToDetectedPeers	^(self botBody: robotBody name: sensorName)		range: maxDistanceToDetectedPeers;		yourself! !!BGSWireless methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/13/2011 21:20'!acceptVisitor: visitor	visitor visitWireless: self! !!BGSWireless methodsFor: 'communicating' stamp: 'NouryBouraqadi 12/13/2011 17:05'!bot	^self botBody bot! !!BGSWireless methodsFor: 'communicating' stamp: 'NouryBouraqadi 12/13/2011 17:05'!botsInRange 	^self peers collect: [:wireless| wireless bot]! !!BGSWireless methodsFor: 'communicating' stamp: 'NouryBouraqadi 12/11/2011 10:12'!peerAt: cell	cell content ifNil: [^nil].	^cell content part: self name! !!BGSWireless methodsFor: 'communicating' stamp: 'NouryBouraqadi 12/11/2011 10:11'!peers	| peers |	peers := Set new.	(self terrain cellsAround: self cell range: self range) do: [:cell|		(self peerAt: cell) ifNotNilDo: [:wireless| peers add: wireless]	].	^peers! !!BGSWireless methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/10/2011 21:18'!range	^ range! !!BGSWireless methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/10/2011 21:18'!range: anObject	range := anObject! !!BGSCar2012LogConverterToExcel commentStamp: '<historical>' prior: 33870380!BGSCar2012LogConverterToExcel convertToExcelFileAllLogsIn: (Smalltalk image imagePath, '/scripts/experiment/').BGSCar2012LogConverterToExcel loadLog: (Smalltalk image imagePath, '/scripts/experiment/result-01.st').!!BGSCar2012LogConverterToExcel class methodsFor: 'log processing'!convertToExcelFileAllLogsIn: fullDirectoryName	|fs experimentFiles allExperimentValues |		fs :=  FSFilesystem disk referenceTo: fullDirectoryName.	experimentFiles := fs glob: [ :node| (node basename beginsWith: 'result') and: [ node extension = 'st' ]]. 		allExperimentValues := Dictionary new.	experimentFiles do: [ :experimentFile | 		allExperimentValues at: experimentFile basename put: (self loadLog: experimentFile fullName) ].		self writeExcelFile: (fs / fs basename, 'xml') with: allExperimentValues.	! !!BGSCar2012LogConverterToExcel class methodsFor: 'log processing'!loadLog: fullFileName	|stream values|	stream := FileStream fileNamed: fullFileName.	stream readOnly.	values := OrderedCollection new.		[ stream atEnd ] whileFalse: [ 		| line |		line := stream nextLine.		(line first = ${) ifTrue: [			values add: (Compiler evaluate: line)		] ifFalse: [ 			values add: (Array with: line)		]	].	^values	! !!BGSCar2012LogConverterToExcel class methodsFor: 'excel writing'!writeExcelFile: resultFileRef with: experimentValuesDict	| stream |		stream := resultFileRef writeStream.	self writeHeaderOn: stream.	self writeStatisticsSpreadSheetOfValues: experimentValuesDict on: stream.	experimentValuesDict keys sort do: [ :spreadSheetName |		self writeSpreadSheetNamed: spreadSheetName withValues: (experimentValuesDict at: spreadSheetName) on: stream ].	self writeFooterOn: stream.	stream close! !!BGSCar2012LogConverterToExcel class methodsFor: 'excel writing'!writeFooterOn: stream		stream nextPutAll: '</Workbook>'! !!BGSCar2012LogConverterToExcel class methodsFor: 'excel writing'!writeHeaderOn: stream		stream nextPutAll: '<?xml version="1.0"?>';lf;		nextPutAll: '<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" xmlns:html="http://www.w3.org/TR/REC-html40">'; lf! !!BGSCar2012LogConverterToExcel class methodsFor: 'excel writing'!writeSpreadSheetNamed: spreadSheetName withValues: values on: stream		stream nextPutAll: '<Worksheet ss:Name="';		nextPutAll: spreadSheetName;		nextPutAll: '">'; lf;		nextPutAll: '<Table>'; lf.			values do: [ :row | 		stream nextPutAll: '   <Row>'; lf.				row do: [ :value | 			stream nextPutAll: '      <Cell>'.			self writeValue: value on: stream.			stream nextPutAll: '</Cell>';lf.		].		stream nextPutAll: '   </Row>'; lf.	].	stream nextPutAll: '</Table>'; lf;		nextPutAll: '</Worksheet>'; lf! !!BGSCar2012LogConverterToExcel class methodsFor: 'excel writing'!writeStatisticsSpreadSheetOfValues: experimentValuesDict on: stream		stream nextPutAll: '<Worksheet ss:Name="';		nextPutAll: 'Statistics';		nextPutAll: '">'; lf;		nextPutAll: '<Table>'; lf;		nextPutAll: '   <Row>'; lf;		nextPutAll: '      <Cell><Data ss:Type="String">nbOfRobots</Data></Cell>';lf;		nextPutAll: '      <Cell><Data ss:Type="String">nbOfSteps</Data></Cell>';lf;		nextPutAll: '   </Row>'; lf.		experimentValuesDict keys sort do: [ :spreadSheetName |		stream nextPutAll: '   <Row>'; lf.		stream nextPutAll: '<Cell ss:Formula="=''';			nextPutAll: spreadSheetName;			nextPutAll: '''!!R4C1"><Data ss:Type="Number"></Data></Cell>';lf;			nextPutAll: '<Cell ss:Formula="=MAX(''';			nextPutAll: spreadSheetName;			nextPutAll: '''!!C1)"><Data ss:Type="Number"></Data></Cell>';			nextPutAll: '   </Row>'; lf.	].	stream 	nextPutAll: '</Table>';lf;		nextPutAll: '</Worksheet>'; lf! !!BGSCar2012LogConverterToExcel class methodsFor: 'excel writing'!writeValue: value on: stream	|type|		value isNumber 		ifTrue: [ type := 'Number' ]		ifFalse: [ type := 'String' ].		stream nextPutAll: '<Data ss:Type="';		nextPutAll: type;		nextPutAll: '">';		nextPutAll: value printString;		nextPutAll: '</Data>'! !!BGSCell commentStamp: 'NouryBouraqadi 11/24/2011 19:17' prior: 33870666!I am a grid element.  I have a content that can be any visitable object (i.e. responding to acceptVisitor:)Subclasses are likely to override-acceptVisitor: someVisitor!!BGSCell class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 11/29/2011 12:05'!at: aPoint in: aGrid	^self new		grid: aGrid;		position: aPoint		yourself! !!BGSCell class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 11/29/2011 12:05'!wallAt: aPoint in: aGrid	^(self at: aPoint in: aGrid)		wall;		yourself! !!BGSCell methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/1/2011 19:50'!acceptContentVisitor: aVisitor	self isEmpty		ifTrue: [ ^ self ].	self content acceptVisitor: aVisitor! !!BGSCell methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/1/2011 19:50'!acceptVisitor: aVisitor	aVisitor visitCell: self.	self acceptContentVisitor: aVisitor! !!BGSCell methodsFor: 'accessing'!color	^ color! !!BGSCell methodsFor: 'accessing'!color: anObject	color := anObject! !!BGSCell methodsFor: 'content handling' stamp: 'NouryBouraqadi 11/24/2011 15:22'!content	^ content! !!BGSCell methodsFor: 'content handling' stamp: 'NouryBouraqadi 12/14/2011 14:15'!content: anObject	content := anObject.	self updateCellOf: anObject! !!BGSCell methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/20/2012 21:13'!defaultColor	^ Color white! !!BGSCell methodsFor: 'content handling' stamp: 'NouryBouraqadi 11/24/2011 15:30'!empty	self content: nil! !!BGSCell methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 12:00'!grid	^ grid! !!BGSCell methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 12:00'!grid: anObject	grid := anObject! !!BGSCell methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/20/2012 21:12'!initialize 	super initialize.	self color: self defaultColor! !!BGSCell methodsFor: 'testing' stamp: 'NouryBouraqadi 11/24/2011 15:20'!isEmpty	^self content isNil! !!BGSCell methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 12:00'!position	^ position! !!BGSCell methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 12:00'!position: anObject	position := anObject! !!BGSCell methodsFor: 'printing' stamp: 'federicobalaguer 7/8/2014 15:13'!printOn: aStream	aStream nextPutAll: 'aCell at'.	self position printOn: aStream.	aStream nextPutAll: '. '.	self isEmpty		ifTrue: [ ^ aStream nextPutAll: #empty ].	self content printOn: aStream! !!BGSCell methodsFor: 'content handling' stamp: 'NouryBouraqadi 12/14/2011 14:15'!updateCellOf: anObject	anObject ifNotNil: [ anObject cell: self ]! !!BGSCell methodsFor: 'content handling' stamp: 'NouryBouraqadi 11/29/2011 12:01'!wall	self content: self wallClass new! !!BGSCell methodsFor: 'content handling' stamp: 'NouryBouraqadi 11/29/2011 12:02'!wallClass	^BGSWall! !!BGSExplorableCell commentStamp: 'NouryBouraqadi 12/7/2011 17:01' prior: 33870914!I am a cell in an explorable grid. I can be in two states: explored or unexplored (see IV state). Initially, I am unexplored, but when my content is set, I become explored. However, my state can be directly set using messages: markExplored and markUnexploredInstance Variables:	state	<BGSExplorableCellState> support for the State design pattern!!BGSExplorableCell methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/1/2011 19:46'!acceptVisitor: aVisitor	self state acceptVisitor: aVisitor! !!BGSExplorableCell methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/1/2011 18:16'!content: anObject	super content: anObject.	self markExplored! !!BGSExplorableCell methodsFor: 'initialize-release'!defaultColor	^ Color green! !!BGSExplorableCell methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/28/2011 11:31'!initialize 	super initialize.	self state: BGSUnexploredCellState new ! !!BGSExplorableCell methodsFor: 'testing' stamp: 'NouryBouraqadi 11/29/2011 11:54'!isExplored	^self state isExplored! !!BGSExplorableCell methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 18:20'!isFrontier	self isExplored ifFalse: [^false].	self isEmpty ifFalse: [^false].	^self neighbors anySatisfy: [:aCell| aCell isExplored not]! !!BGSExplorableCell methodsFor: 'annotating' stamp: 'NouryBouraqadi 12/1/2011 18:16'!markExplored 	self state markExplored! !!BGSExplorableCell methodsFor: 'annotating' stamp: 'NouryBouraqadi 12/1/2011 19:01'!markUnexplored	self state markUnexplored! !!BGSExplorableCell methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 11:58'!neighbors 	^self grid cellsAround: self! !!BGSExplorableCell methodsFor: 'printing' stamp: 'NouryBouraqadi 12/1/2011 18:15'!printOn: aStream	self isExplored ifFalse: [^aStream nextPutAll: #unexplored].	super printOn: aStream! !!BGSExplorableCell methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/28/2011 11:31'!state	^ state! !!BGSExplorableCell methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/28/2011 11:38'!state: mapcellState	state := mapcellState.	mapcellState cell: self! !!BGSExplorationMapCell methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/14/2011 14:15'!updateCellOf: anObject	"Do nothing"	^self! !!BGSCellContent methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/11/2011 10:16'!acceptVisitor: aVisitor	aVisitor visitWall: self! !!BGSCellContent methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/11/2011 10:16'!cell:  aCell	"Do nothing"	^self! !!BGSCellContent methodsFor: 'testing' stamp: 'federicobalaguer 10/6/2015 13:40'!isRobotBody	^ false! !!BGSCellContent methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/11/2011 10:15'!part: aSymbol	^nil! !!BGSRobotBody commentStamp: 'NouryBouraqadi 12/10/2011 15:10' prior: 33871336!I am a robot body deployed in a terrain.I have a collection of parts, each having an identifier. I retreive parts given their identifiers using message:-part: aSymbolInstance Variables:	terrain	<BGSGrid> terrain where I am deployed	position	<Point> coordinates of the cell occupied in terrain	partsDict <Dictionary : Symbol -> BGSBodyPart> gathers component parts such as range sensors and wireless communication interface!!BGSRangeSensorBeltRobotBody commentStamp: 'NouryBouraqadi 12/8/2011 16:52' prior: 33871853!I am a body of robot. I have an BGSOmnidirectionalRangeSensor that allows me to explore cells all arround my position.!!BGSRangeSensorBeltRobotBody methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/11/2011 09:58'!initParts	super initParts.	BGSOmnidirectionalRangeSensor botBody: self name: #rangeSensorBelt ! !!BGSWirelessEnabledRangeSensorBeltRobotBody methodsFor: 'defaults' stamp: 'LucFabresse 4/3/2012 15:20'!defaultWirelessRange 	^10! !!BGSWirelessEnabledRangeSensorBeltRobotBody methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 16:37'!initParts	super initParts.	BGSWireless botBody: self name: #wireless range: self defaultWirelessRange ! !!BGSRobotBody class methodsFor: 'class initialization' stamp: 'NouryBouraqadi 11/17/2011 21:09'!initialize 	Headings := {(0 @ -1). (1 @ -1). (1 @ 0). (1 @ 1). (0 @ 1).  (-1 @ 1). (-1 @ 0). (-1 @ -1)}.! !!BGSRobotBody methodsFor: 'visiting' stamp: 'NouryBouraqadi 11/19/2011 12:29'!acceptVisitor: aVisitor	aVisitor visitRobotBody: self.! !!BGSRobotBody methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/10/2011 21:56'!addPart: newPart named:  newName	self partsDict at: newName put: newPart ! !!BGSRobotBody methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/13/2011 16:56'!bot	^ bot! !!BGSRobotBody methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/13/2011 16:56'!bot: anObject	bot := anObject! !!BGSRobotBody methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 12:09'!cell	^ cell! !!BGSRobotBody methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 12:09'!cell: anObject	cell := anObject! !!BGSRobotBody methodsFor: 'moving' stamp: 'NouryBouraqadi 11/17/2011 20:41'!goForward	self position: self position + self heading! !!BGSRobotBody methodsFor: 'moving' stamp: 'NouryBouraqadi 11/17/2011 20:42'!goForwardBy: steps	steps timesRepeat: [self goForward]! !!BGSRobotBody methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/17/2011 17:43'!heading	^ heading! !!BGSRobotBody methodsFor: 'moving' stamp: 'NouryBouraqadi 12/18/2011 19:12'!heading: aPoint	heading := aPoint.	self terrain ifNotNil: [self terrain changed] "Trigger observer updates"! !!BGSRobotBody methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/10/2011 15:12'!initParts	self partsDict: Dictionary new.! !!BGSRobotBody methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/10/2011 15:04'!initialize 	super initialize.	self heading: 0 @ -1.	self initParts.	! !!BGSRobotBody methodsFor: 'testing' stamp: 'federicobalaguer 10/6/2015 13:40'!isRobotBody	^ true! !!BGSRobotBody methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/29/2011 16:38'!jumpTo: aPoint in: aBGSTerrain 	aBGSTerrain put: self inCellAt: aPoint ! !!BGSRobotBody methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/11/2011 10:15'!part: id	^self partsDict at: id ifAbsent: [nil]! !!BGSRobotBody methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/10/2011 15:12'!parts	^self partsDict values! !!BGSRobotBody methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/10/2011 15:12'!partsDict	^ partsDict! !!BGSRobotBody methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/10/2011 15:12'!partsDict: anObject	partsDict := anObject! !!BGSRobotBody methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 16:24'!position	^self cell position! !!BGSRobotBody methodsFor: 'moving' stamp: 'NouryBouraqadi 11/29/2011 16:26'!position: aPoint 	self terrain move: self from: self position to: aPoint.! !!BGSRobotBody methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 16:23'!terrain	self cell ifNil: [^nil].	^self cell grid! !!BGSRobotBody methodsFor: 'moving' stamp: 'NouryBouraqadi 11/17/2011 21:09'!turnLeft	| currentHeadingIndex nextHeadingIndex |	currentHeadingIndex := Headings indexOf: self heading.	nextHeadingIndex := currentHeadingIndex = 1 		ifTrue: [8]		ifFalse: [currentHeadingIndex - 1].	self heading: (Headings at: nextHeadingIndex)! !!BGSRobotBody methodsFor: 'moving' stamp: 'NouryBouraqadi 11/17/2011 21:13'!turnRight	| currentHeadingIndex nextHeadingIndex |	currentHeadingIndex := Headings indexOf: self heading.	nextHeadingIndex := currentHeadingIndex = 8 		ifTrue: [1]		ifFalse: [currentHeadingIndex + 1].	self heading: (Headings at: nextHeadingIndex)! !!BGSRobotBody methodsFor: 'moving' stamp: 'NouryBouraqadi 11/29/2011 22:28'!turnTowards: aPoint	|directionVector|	directionVector := aPoint - self position.	self heading: directionVector x sign @ directionVector y sign! !!BGSRobotBodyWithFrontRangeSensor methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/19/2011 14:22'!defaultFrontSensorRange	^1! !!BGSRobotBodyWithFrontRangeSensor methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/11/2011 09:56'!initParts 	super initParts.	BGSDirectionalRangeSensor botBody: self name: #frontRangeSensor range: self defaultFrontSensorRange! !!BGSWall commentStamp: 'NouryBouraqadi 11/14/2011 17:06' prior: 33872040!BGSWall represent a static obstacle!!BGSWall methodsFor: 'polimorphic' stamp: 'federicobalaguer 10/6/2015 13:30'!bot	^ nil! !!BGSWall methodsFor: 'printing' stamp: 'NouryBouraqadi 11/28/2011 11:59'!printOn: aStream	aStream nextPutAll: #wall! !!BGSExplorableCellState commentStamp: 'NouryBouraqadi 12/8/2011 10:56' prior: 33872158!I am the state of an BGSExplorableCell.Concrete subclasses should implement:-acceptVisitor: visitor	Double dispatch for the visitor design pattern-isExplored	Answers true if I am an explored state. Answers false otherwise.-markExplored	Switch to explored state.-markUnexplored	Switch to unexplored state Instance Variables:	cell	<BGSExplorableCell> cell for which I am the state!!BGSExplorableCellState methodsFor: 'as yet unclassified' stamp: 'NouryBouraqadi 12/7/2011 16:59'!acceptVisitor: visitor	self subclassResponsibility ! !!BGSExplorableCellState methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/28/2011 11:38'!cell	^ cell! !!BGSExplorableCellState methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/28/2011 11:38'!cell: anObject	cell := anObject! !!BGSExplorableCellState methodsFor: 'as yet unclassified' stamp: 'NouryBouraqadi 12/7/2011 17:00'!isExplored	self subclassResponsibility ! !!BGSExplorableCellState methodsFor: 'as yet unclassified' stamp: 'NouryBouraqadi 12/7/2011 17:00'!markExplored	self subclassResponsibility ! !!BGSExplorableCellState methodsFor: 'as yet unclassified' stamp: 'NouryBouraqadi 12/7/2011 17:00'!markUnexplored	self subclassResponsibility ! !!BGSExploredCellState commentStamp: 'NouryBouraqadi 12/8/2011 10:57' prior: 33872630!I am the state of a cell that was explored!!BGSExploredCellState methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/1/2011 19:50'!acceptVisitor: aVisitor	self cell isFrontier ifTrue: [^aVisitor visitFrontierCell: self cell].	aVisitor visitCell: self cell.	self cell acceptContentVisitor: aVisitor! !!BGSExploredCellState methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 18:18'!isExplored 	^true! !!BGSExploredCellState methodsFor: 'annotating' stamp: 'NouryBouraqadi 12/1/2011 18:17'!markExplored 	"I'm already explored"	^self! !!BGSExploredCellState methodsFor: 'annotating' stamp: 'NouryBouraqadi 12/1/2011 19:01'!markUnexplored	self cell state: BGSUnexploredCellState new! !!BGSUnexploredCellState commentStamp: 'NouryBouraqadi 12/8/2011 10:57' prior: 33872755!I am the state of a cell that was NOT explored yet!!BGSUnexploredCellState methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/1/2011 19:51'!acceptVisitor: aVisitor	aVisitor visitUnexploredCell: self cell! !!BGSUnexploredCellState methodsFor: 'testing' stamp: 'NouryBouraqadi 11/29/2011 11:55'!isExplored 	^false! !!BGSUnexploredCellState methodsFor: 'annotating' stamp: 'NouryBouraqadi 12/1/2011 18:12'!markExplored 	self cell state: BGSExploredCellState new! !!BGSUnexploredCellState methodsFor: 'annotating' stamp: 'NouryBouraqadi 12/1/2011 19:01'!markUnexplored	"I am already unexplored"	^self! !!BGSGrid commentStamp: 'NouryBouraqadi 12/8/2011 11:06' prior: 33872873!I am a 2D collection of cells. Cells can be of arbitrary kind: empty, wall, robot body, ...Instances are created by the following expression:	BGSGrid extent: aPointwhere aPoint provides the width and the height of the gridOn initialization (i.e. when the extent is defined), I trigger wall building.To ease wall construction a set of facility methods is provided (see protocol building).Subclasses are likely to override method:-buildWalls 		Put walls in the appropriate cells	!!BGSExplorableGrid commentStamp: 'NouryBouraqadi 12/8/2011 11:02' prior: 33873442!I am a grid with explorable cells. On creation/reset, all my cells are unexplored. I provide explorer robots with informations using messages:-exploredPositions	Positions of cells that have been explored-frontierPositions	Positions of cells that have been explored, but which at least one neighbor has NOT been explored yet-unexploredPositions	Positions of cells that have NOT been eplored yet.!!BGSExplorableGrid methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/30/2011 22:56'!cellClass	^BGSExplorableCell! !!BGSExplorableGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 11:51'!exploredPositions 	^self positions asSet select: [:aPoint| (self cellAt: aPoint) isExplored]! !!BGSExplorableGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 20:22'!frontierPositions  	^self positions asSet select: [:aPoint| (self cellAt: aPoint) isFrontier]! !!BGSExplorableGrid methodsFor: 'exploring' stamp: 'NouryBouraqadi 4/3/2012 20:28'!markExplored	self cells do: [:each| each markExplored].! !!BGSExplorableGrid methodsFor: 'annoting' stamp: 'NouryBouraqadi 12/1/2011 19:00'!markUnexploredCellAt: aPoint	(self cellAt: aPoint) markUnexplored! !!BGSExplorableGrid methodsFor: 'annoting' stamp: 'NouryBouraqadi 12/1/2011 20:08'!markUnexploredPositions: positions	positions do: [:aPoint|		self markUnexploredCellAt: aPoint]! !!BGSExplorableGrid methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/1/2011 20:07'!reset	super reset.	self markUnexploredPositions: self positions.! !!BGSExplorableGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 20:30'!unexploredPositions  	^self positions asSet reject: [:aPoint| (self cellAt: aPoint) isExplored]! !!BGSCheckerboardLikeTerrain commentStamp: 'NouryBouraqadi 12/8/2011 16:55' prior: 33873931!I am a terrain with one cell obstacles uniformely sperad and aligned.!!BGSCheckerboardLikeTerrain methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/30/2011 23:22'!buildWalls	|interObstacleSpace|	interObstacleSpace := 5.	interObstacleSpace to: (self extent x - interObstacleSpace) by: interObstacleSpace do: [:x|		interObstacleSpace to: (self extent y - interObstacleSpace) by: interObstacleSpace do: [:y|			self addWallAt: x@y]]! !!BGSChristmasTerrain commentStamp: 'NouryBouraqadi 12/18/2011 20:22' prior: 33874081!see comment of BGSChristmasSimulation!!BGSChristmasTerrain methodsFor: 'obstacles' stamp: 'NouryBouraqadi 12/18/2011 10:25'!addHorizontalLineWallFrom: origin to: corner width: width color: aColor	| start stop|	origin x < corner x 		ifTrue: [			start := origin.			stop := corner]		ifFalse: [			start := corner.			stop := origin].	self addWallAt: start extent: (stop x - start x + 1) @width  color: aColor! !!BGSChristmasTerrain methodsFor: 'obstacles' stamp: 'NouryBouraqadi 12/18/2011 10:25'!addLineWallFrom: origin to: corner width: width color: aColor	| a b |	"y = a . x + b"	origin x = corner x		ifTrue: [ ^ self addVerticalLineWallFrom: origin to: corner width: width color: aColor].	origin y = corner y		ifTrue: [ ^ self addHorizontalLineWallFrom: origin to: corner width: width  color: aColor].	a := (origin y - corner y) / (origin x - corner x).	b := origin y - (a * origin x).	a abs < 1		ifTrue: [ 			^ self addXDrivenLineWallFrom: origin to: corner width: width a: a b: b  color: aColor].	self addYDrivenLineWallFrom: origin to: corner width: width a: a b: b  color: aColor! !!BGSChristmasTerrain methodsFor: 'obstacles' stamp: 'NouryBouraqadi 12/18/2011 10:29'!addVerticalLineWallFrom: origin to: corner width: width color: aColor	| start stop|	origin y < corner y 		ifTrue: [			start := origin.			stop := corner]		ifFalse: [			start := corner.			stop := origin].	self addWallAt: start extent: width@ (stop y - start y + 1)  color: aColor! !!BGSChristmasTerrain methodsFor: 'obstacles' stamp: 'NouryBouraqadi 12/18/2011 10:26'!addWallAt: origin extent: widthAndHeight color: aColor	| corner |	corner := origin + widthAndHeight - 1.	origin x to: corner x do: [:x|		origin y to: corner y do: [:y|			(self cellAt: x@y) color: aColor.			self put: BGSWall new inCellAt: x@y]].	self changed! !!BGSChristmasTerrain methodsFor: 'obstacles' stamp: 'NouryBouraqadi 12/18/2011 10:29'!addXDrivenLineWallFrom: origin to: corner width: width a: a b: b color: aColor	| startX endX |	startX := origin x min: corner x.	endX := origin x max: corner x.	startX to: endX do: [ :x | 		| y |		y := ((a * x) + b) rounded.		self addWallAt: x @ y extent: width @ 1 color: aColor]! !!BGSChristmasTerrain methodsFor: 'obstacles' stamp: 'NouryBouraqadi 12/18/2011 10:29'!addYDrivenLineWallFrom: origin to: corner width: width a: a b: b color: aColor	| startY endY |	startY := origin y min: corner y.	endY := origin y max: corner y.	startY to: endY do: [ :y | 		| x |		x := ((y - b) / a) rounded.		self addWallAt: x @ y extent: width @ 1 color: aColor]! !!BGSChristmasTerrain methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/17/2011 22:42'!buildLargeTreeAt: top	|topX topY|	topX := top x.	topY := top y.	self addLineWallFrom: top to: (topX+7)@(topY+9) width: 1.	self addLineWallFrom: top to: (topX-7)@(topY+9) width: 1.	self addLineWallFrom: (topX+6)@(topY+10) to: (topX+3)@(topY+10) width: 1.	self addLineWallFrom: (topX-6)@(topY+10) to: (topX-3)@(topY+10) width: 1.	self addLineWallFrom: (topX+4)@(topY+11) to: (topX+13)@(topY+20) width: 1.	self addLineWallFrom: (topX-4)@(topY+11) to: (topX-13)@(topY+20) width: 1.	self addLineWallFrom: (topX+12)@(topY+21) to: (topX+7)@(topY+21) width: 1.	self addLineWallFrom: (topX-12)@(topY+21) to: (topX-7)@(topY+21) width: 1.	self addLineWallFrom: (topX+8)@(topY+22) to: (topX+18)@(topY+30) width: 1.	self addLineWallFrom: (topX-8)@(topY+22) to: (topX-18)@(topY+30) width: 1.	self addLineWallFrom: (topX+17)@(topY+31) to: (topX+3)@(topY+31) width: 1.	self addLineWallFrom: (topX-17)@(topY+31) to: (topX-3)@(topY+31) width: 1.	self addWallAt: (topX-2)@(topY+31) extent: 5@10.	self emptyCellsAt: (topX-1)@(topY+31) extent: 3@9.! !!BGSChristmasTerrain methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/17/2011 23:21'!buildLittleTreeAt: top	|topX topY|	topX := top x.	topY := top y.	self addLineWallFrom: top to: (topX+4)@(topY+5) width: 1.	self addLineWallFrom: top to: (topX-4)@(topY+5) width: 1.	self addLineWallFrom: (topX+3)@(topY+6) to: (topX+5)@(topY+9) width: 1.	self addLineWallFrom: (topX-3)@(topY+6) to: (topX-5)@(topY+9) width: 1.	self addLineWallFrom: (topX+4)@(topY+10) to: (topX+7)@(topY+13) width: 1.	self addLineWallFrom: (topX-4)@(topY+10) to: (topX-7)@(topY+13) width: 1.	self addWallAt: (topX-1)@(topY+10) extent: 3@4.	self emptyCellsAt: topX@(topY+10) extent: 1@3.! !!BGSChristmasTerrain methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 19:49'!buildTreeAt: top halfWidth: segmentHalfWidth segmentHeight: segmentHeight increment: deltaXY baseHalfWidth: baseHalfWidth color: aColor	|topRight topLeft middleRight middleLeft bottomRight bottomLeft baseWidth|		topRight := top.	topLeft := top. 	3 timesRepeat: [		middleRight := (topRight x + deltaXY)@(topRight y + segmentHeight).		middleLeft := (topLeft x - deltaXY)@(topLeft y + segmentHeight).		bottomRight := topRight + (segmentHalfWidth@segmentHeight).		bottomLeft := topLeft +   (segmentHalfWidth negated@segmentHeight).		self addLineWallFrom: topRight to: bottomRight width: 1 color: aColor.		self addLineWallFrom: topLeft to: bottomLeft width: 1  color: aColor.		self addLineWallFrom: middleRight to: bottomRight width: 1  color: aColor.		self addLineWallFrom: middleLeft to: bottomLeft width: 1 color: aColor.		self emptyCellAt: bottomRight - (1@0).		self emptyCellAt: bottomLeft + (1@0).		topRight := middleRight.		topLeft := middleLeft.	].	self addLineWallFrom: middleRight to: middleLeft width: 1 color: aColor. 	self fillStartingAt: top+(0@1) color: Color green borderColor: aColor. 	middleLeft x - 1 to: middleRight x + 1 do: [:x|		(self cellAt: x@ middleRight y) empty].	baseWidth := (2 * baseHalfWidth) + 1.	self addWallAt: (top x - baseHalfWidth)@(middleRight y) extent: baseWidth@segmentHeight color: Color brown.	self emptyCellsAt:  (top x - baseHalfWidth)@(middleRight y) extent: baseWidth@segmentHeight! !!BGSChristmasTerrain methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 19:58'!buildWalls 	"Sky"	1 to: 50 do: [:x|		1 to: 20 do: [:y|			(self cellAt: x@y) color: Color blue]].	"Ground"	1 to: 50 do: [:x|		21 to: 50 do: [:y|			(self cellAt: x@y) color: Color gray]].	self buildTreeAt: 19@12 halfWidth: 7 segmentHeight: 9 increment: 4 baseHalfWidth: 2 color: Color black.	self buildTreeAt: 38@6 halfWidth: 5 segmentHeight: 6 increment: 2 baseHalfWidth: 1 color: Color black.! !!BGSChristmasTerrain methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 19:43'!fillStartingAt: aPoint color: aColor borderColor: borderColor	(self cellAt: aPoint) color = borderColor ifTrue: [^self].	(self cellAt: aPoint) color = aColor ifTrue: [^self].		(self cellAt: aPoint) color: aColor.	{1@0. -1@0. 0@1. 0@ -1} do: [:delta|		self fillStartingAt: aPoint + delta color: aColor borderColor: borderColor.	]! !!BGSExplorableTerrain methodsFor: 'updating' stamp: 'NouryBouraqadi 12/13/2011 21:41'!update: aRobot	aRobot sensedPositions do: [:aPoint| 		(self cellAt: aPoint) markExplored]! !!BGSExplorationMap methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/14/2011 14:16'!cellClass	^BGSExplorationMapCell! !!BGSExplorationMap methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/14/2011 14:03'!initialize 	super initialize.	self latestBotPosition: -1 @ -1  "Invalid point so it will be ignored on the first update "! !!BGSExplorationMap methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/14/2011 13:58'!latestBotPosition	^ latestBotPosition! !!BGSExplorationMap methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/14/2011 13:58'!latestBotPosition: anObject	latestBotPosition := anObject! !!BGSExplorationMap methodsFor: 'updating' stamp: 'NouryBouraqadi 4/3/2012 23:09'!update: aRobot	self		emptyCellAt: self latestBotPosition;		latestBotPosition: aRobot position;		put: aRobot body inCellAt: self latestBotPosition;		emptyCellsAtAllPositions:  aRobot emptySensedPositions;		addWallsAtPositions: aRobot obstacleSensedPositions! !!BGSExplorationMap methodsFor: 'updating' stamp: 'NouryBouraqadi 4/3/2012 21:07'!updateFrom: otherMap 	| emptyPositions positionsToConsider positionsToIgnore|	emptyPositions := self exploredPositions select: [:position| self isEmptyCellAt: position].	positionsToIgnore := emptyPositions copyWith: self latestBotPosition.	positionsToConsider := otherMap exploredPositions copyWithoutAll: positionsToIgnore.	positionsToConsider do: [:aPoint|		self put: (otherMap contentOfCellAt: aPoint) inCellAt: aPoint].	self emptyCellAt: otherMap latestBotPosition! !!BGSGrid class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 11/9/2011 08:19'!extent: aPoint	^self new		extent: aPoint;		yourself! !!BGSGrid methodsFor: 'building low-level' stamp: 'NouryBouraqadi 12/8/2011 11:03'!addHorizontalLineWallFrom: origin to: corner width: width	| start stop|	origin x < corner x 		ifTrue: [			start := origin.			stop := corner]		ifFalse: [			start := corner.			stop := origin].	self addWallAt: start extent: (stop x - start x + 1) @width! !!BGSGrid methodsFor: 'building' stamp: 'NouryBouraqadi 12/8/2011 11:02'!addLineWallFrom: origin to: corner width: width	| a b |	"y = a . x + b"	origin x = corner x		ifTrue: [ ^ self addVerticalLineWallFrom: origin to: corner width: width ].	origin y = corner y		ifTrue: [ ^ self addHorizontalLineWallFrom: origin to: corner width: width ].	a := (origin y - corner y) / (origin x - corner x).	b := origin y - (a * origin x).	a abs < 1		ifTrue: [ 			^ self addXDrivenLineWallFrom: origin to: corner width: width a: a b: b ].	self addYDrivenLineWallFrom: origin to: corner width: width a: a b: b! !!BGSGrid methodsFor: 'building low-level' stamp: 'NouryBouraqadi 12/8/2011 11:03'!addVerticalLineWallFrom: origin to: corner width: width	| start stop|	origin y < corner y 		ifTrue: [			start := origin.			stop := corner]		ifFalse: [			start := corner.			stop := origin].	self addWallAt: start extent: width@ (stop y - start y + 1)! !!BGSGrid methodsFor: 'building' stamp: 'NouryBouraqadi 12/8/2011 11:02'!addWallAt: aPoint	self addWallAt: aPoint extent: 1@1! !!BGSGrid methodsFor: 'building' stamp: 'NouryBouraqadi 12/8/2011 11:02'!addWallAt: origin extent: widthAndHeight	| corner |	corner := origin + widthAndHeight - 1.	origin x to: corner x do: [:x|		origin y to: corner y do: [:y|			self put: BGSWall new inCellAt: x@y]].	self changed! !!BGSGrid methodsFor: 'building' stamp: 'NouryBouraqadi 12/8/2011 11:02'!addWallsAtPositions: points	points do: [:each|		self addWallAt: each]! !!BGSGrid methodsFor: 'building low-level' stamp: 'NouryBouraqadi 12/8/2011 11:03'!addXDrivenLineWallFrom: origin to: corner width: width a: a b: b	| startX endX |	startX := origin x min: corner x.	endX := origin x max: corner x.	startX to: endX do: [ :x | 		| y |		y := ((a * x) + b) rounded.		self addWallAt: x @ y extent: width @ 1 ]! !!BGSGrid methodsFor: 'building low-level' stamp: 'NouryBouraqadi 12/8/2011 11:03'!addYDrivenLineWallFrom: origin to: corner width: width a: a b: b	| startY endY |	startY := origin y min: corner y.	endY := origin y max: corner y.	startY to: endY do: [ :y | 		| x |		x := ((y - b) / a) rounded.		self addWallAt: x @ y extent: width @ 1 ]! !!BGSGrid methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/8/2011 11:03'!buildWalls	^self! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 12:06'!cellAt: aPoint	(self isValidPosition: aPoint) ifFalse: [^self cellClass wallAt: aPoint in: self].	^self cells at: aPoint x at: aPoint y! !!BGSGrid methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/25/2011 20:16'!cellClass	^BGSCell! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/9/2011 08:33'!cells	^ cells! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/9/2011 08:33'!cells: anObject	cells := anObject! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/29/2011 20:26'!cellsAround: aCell 	^(self positionsAround: aCell position) collect: [:aPoint|		self cellAt: aPoint]! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/11/2011 10:09'!cellsAround: aCell range: neighborRadius	^(self positionsAround: aCell position range: neighborRadius) collect: [:aPoint|		self cellAt: aPoint]! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/24/2011 15:43'!contentOfCellAt: position	^(self cellAt: position) content! !!BGSGrid methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/29/2011 12:05'!createCells	^Matrix rows: self extent x columns: self extent y tabulate: [:row :column| 			self cellClass at: row@column in: self]! !!BGSGrid methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/15/2011 21:53'!defaultExtent	^50@50! !!BGSGrid methodsFor: 'building' stamp: 'NouryBouraqadi 12/8/2011 11:02'!emptyCellAt: aPoint	(self cellAt: aPoint) empty.	self changed! !!BGSGrid methodsFor: 'accessing' stamp: 'LucFabresse 4/3/2012 14:25'!emptyCellPositions 	^self positions asSet select: [:aPoint| self isEmptyCellAt: aPoint]! !!BGSGrid methodsFor: 'building' stamp: 'NouryBouraqadi 12/8/2011 11:02'!emptyCellsAt: origin extent: widthAndHeight	| corner |	corner := origin + widthAndHeight - 1.	origin x to: corner x do: [:x|		origin y to: corner y do: [:y|			self emptyCellAt: x@y]]! !!BGSGrid methodsFor: 'building' stamp: 'NouryBouraqadi 12/8/2011 11:02'!emptyCellsAtAllPositions: points	points do: [:each|		self emptyCellAt: each]! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/9/2011 08:20'!extent	^extent! !!BGSGrid methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/8/2011 11:03'!extent: aPoint	extent := aPoint.	self cells: self createCells.	self buildWalls ! !!BGSGrid methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/15/2011 21:53'!initialize 	super initialize.	self extent: self defaultExtent! !!BGSGrid methodsFor: 'testing' stamp: 'NouryBouraqadi 11/10/2011 19:24'!isEmptyCellAt: aPoint	^(self cellAt: aPoint) isEmpty! !!BGSGrid methodsFor: 'testing' stamp: 'NouryBouraqadi 11/10/2011 19:42'!isValidPosition: aPoint	aPoint ifNil: [^false].	^aPoint >= (1@1)  and: [aPoint <= self extent]! !!BGSGrid methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/24/2011 15:29'!makeEmptyCellAt: position	(self cellAt: position) empty! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/24/2011 18:04'!move: botBody from: position1 to: position2	(self isValidPosition: position2) ifFalse: [^position1].	(self isEmptyCellAt: position2) ifFalse: [^position1].	self put: botBody inCellAt: position2.	(self isValidPosition: position1) ifTrue: [self makeEmptyCellAt: position1].	^position2			! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/15/2011 09:51'!positions	^self cells indicesCollect: [:x :y| x@y]! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/25/2011 09:43'!positionsAround: aPoint	^self positionsAround: aPoint range: 1! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/25/2011 09:42'!positionsAround: aPoint range: neighborRadius	| positions |	positions := OrderedCollection new: 8.	neighborRadius negated to: neighborRadius do: [:deltaX|		neighborRadius negated to: neighborRadius do: [:deltaY|			|newPosition|			newPosition := aPoint + (deltaX@deltaY).			positions add: newPosition]].	^positions select: [:each|		each ~= aPoint and: [self isValidPosition: each]]! !!BGSGrid methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/24/2011 18:08'!put: anObject inCellAt: aPoint	(self cells at: aPoint x at: aPoint y) content: anObject.	self changed! !!BGSGrid methodsFor: 'initialize-release' stamp: 'federicobalaguer 9/28/2015 23:52'!reset 	self extent: self extent! !!BGSTerrainExample commentStamp: 'NouryBouraqadi 11/15/2011 21:47' prior: 33874197!I am an example of terrain used by the BGCSSimulationExample!!BGSTerrainExample methodsFor: 'obstacle construction' stamp: 'NouryBouraqadi 11/19/2011 21:25'!buildWalls	"Left eye"	self addWallAt: 11@10 extent: 10@10.	self emptyCellsAt: 12@11 extent: 8@8.	"Right eye"	self addWallAt: 31@10 extent: 10@10.	self emptyCellsAt: 32@11 extent: 8@8.	"Mouth"	self addLineWallFrom:  11@35 to: 39@35 width: 1.	self addLineWallFrom: 11@35 to: 21@40  width: 2.	self addWallAt: 21@40 extent: 10@1.	self addLineWallFrom: 30@40 to: 39@35  width: 2.! !!BGSTerrainForTest methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/15/2011 22:36'!defaultExtent	^10@10! !!BGSLogger commentStamp: 'NouryBouraqadi 11/13/2011 21:28' prior: 33874328!Logger maintains a file with logs of a simulation.To start logging simply create a logger by evaluating the expression:	logger := BGSLogger on: someSimulation By default the name of the log file is the class name of the simulation with the current time stamp.A different can be chosen by evaluating:	logger := BGSLogger on: someSimulation logInto: 'myLogFile.txt'Subclasses are likely to redefine methods:-logHeader 	Produces the first line of the log file with names of each column-logStep	Adds a new line to the log file with current simulation data!!BGSExplorationLogger commentStamp: 'NouryBouraqadi 12/8/2011 17:10' prior: 33874974!I log into a file an exploration simulation.To start logging simply create a logger by evaluating the expression:	logger := BGSExplorationLogger on: someSimulation By default the name of the log file is the class name of the simulation with the current time stamp.A different can be chosen by evaluating:	logger := BGSExplorationLogger on: someSimulation logInto: 'myLogFile.txt'!!BGSCar2012DoitLogger methodsFor: 'logging' stamp: 'LucFabresse 3/30/2012 18:09'!logHeader 	| columnNames |	columnNames := #('step' 'frontiers' 'unexplored') asOrderedCollection.			self robots collect: [:bot|		columnNames add: bot id, '-position'.		columnNames add: bot id, '-heading'	].	self logValues: columnNames asArray! !!BGSCar2012DoitLogger methodsFor: 'logging' stamp: 'LucFabresse 3/30/2012 18:11'!logStep	| currentValues |		currentValues := OrderedCollection new.		{self stepCount. self frontiersCount. self unexploredCount} 		do: [:counter| currentValues add: counter].	self robots		do: [ :bot | 		currentValues add: bot position;			add: bot heading	].		self logValues: currentValues! !!BGSCar2012DoitLogger methodsFor: 'initialize-release' stamp: 'LucFabresse 3/30/2012 18:09'!logValues: values		self log: '{ '.		values do: [ :aValue | 				(aValue  isKindOf: String) 					ifTrue: [ self log: aValue printString ] 					ifFalse: [ self log: aValue].				self log: '. '		].		self logLf: '}.'	! !!BGSCar2012DoitLogger methodsFor: 'initialize-release' stamp: 'LucFabresse 3/30/2012 18:10'!simulation: aBGSSimulation fileName: aString	fileName := aString.	simulation := aBGSSimulation.	self stream: (FileStream fileNamed: fileName).		self stream 		nextPut: $";		print: DateAndTime now; 		nextPut: $"; lf;		nextPut: $";		nextPutAll: self simulation class name;		nextPutAll: ' runFor:  ';		print: self robots size;		nextPutAll: ' logFileName: ';		print: fileName; 		nextPut: $"; lf.			self logValues: {'numberOfRobots'};		logValues: {self robots size}.			simulation addDependent: self.	self logHeader! !!BGSExplorationLogger methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/8/2011 17:32'!frontiersCount 	^self simulation frontierPositionsCount ! !!BGSExplorationLogger methodsFor: 'logging' stamp: 'NouryBouraqadi 12/8/2011 17:40'!logHeader 	#('step' 'frontiers' 'unexplored') 		do: [:counterName| self log: counterName]		separatedBy: [self tab].	self robots do: [:bot|		self 			tab;			log: bot id, '-position';			tab;			log: bot id, '-heading'	].	self cr.! !!BGSExplorationLogger methodsFor: 'logging' stamp: 'NouryBouraqadi 12/8/2011 17:42'!logStep	{self stepCount. self frontiersCount. self unexploredCount} 		do: [:counter| self log: counter]		separatedBy: [self tab].	self robots		do: [ :bot | 		self 			tab			log: bot position;			tab;			log: bot heading	].	self cr.! !!BGSExplorationLogger methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/8/2011 17:32'!unexploredCount 	^self simulation unexploredPositionsCount ! !!BGSLogger class methodsFor: 'instance creation' stamp: 'JulianGrigera 8/21/2015 19:21'!on: aBGSSimulation	| fileName timestampString |	timestampString := String streamContents: [ :stream | DateAndTime now printSeparateDateAndTimeOn: stream ].	fileName := aBGSSimulation className , timestampString , '.txt'.	^ self on: aBGSSimulation logInto: fileName! !!BGSLogger class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 11/13/2011 21:18'!on: aBGSSimulation logInto: fileName	|cleanFileName|	cleanFileName := fileName		replaceAll:  Character space with: $-;		replaceAll: $: with: $-. 	^self new		simulation: aBGSSimulation fileName: fileName;		yourself! !!BGSLogger methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/13/2011 19:36'!allLog	^self stream contents ! !!BGSLogger methodsFor: 'initialize-release' stamp: 'lvt 10/18/2007 10:20'!close	self stream close.! !!BGSLogger methodsFor: 'logging' stamp: 'lvt 10/18/2007 11:33'!cr	self stream cr.! !!BGSLogger methodsFor: 'logging' stamp: 'NouryBouraqadi 11/6/2011 22:10'!crLog: anObject	self stream cr.	self log: anObject! !!BGSLogger methodsFor: 'logging' stamp: 'NouryBouraqadi 11/6/2011 21:50'!crtab	self stream crtab! !!BGSLogger methodsFor: 'logging' stamp: 'NouryBouraqadi 11/6/2011 22:10'!crtabLog: anObject	self stream crtab.	self log: anObject! !!BGSLogger methodsFor: 'accessing' stamp: 'lvt 10/18/2007 09:36'!fileName	^ fileName! !!BGSLogger methodsFor: 'logging' stamp: 'NouryBouraqadi 11/7/2011 08:11'!log: anObject 	(anObject isKindOf: String) ifTrue: [^self stream nextPutAll: anObject].	anObject printOn: self stream! !!BGSLogger methodsFor: 'logging' stamp: 'NouryBouraqadi 11/6/2011 22:11'!logCr: anObject	self log: anObject.	self stream cr! !!BGSLogger methodsFor: 'logging'!logCrLf: anObject	self log: anObject.	self stream crlf! !!BGSLogger methodsFor: 'logging' stamp: 'NouryBouraqadi 12/8/2011 17:11'!logHeader	self log: 'step'.	self robots do: [:bot|		self 			tab;			log: bot id, '-position';			tab;			log: bot id, '-heading'	].	self cr.! !!BGSLogger methodsFor: 'logging'!logLf: anObject	self log: anObject.	self stream lf! !!BGSLogger methodsFor: 'logging' stamp: 'NouryBouraqadi 12/6/2011 18:52'!logStep	self log: self stepCount.	self robots		do: [ :bot | 		self 			tab			log: bot position;			tab;			log: bot heading	].	self cr.! !!BGSLogger methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/13/2011 19:56'!robots	^self simulation robots! !!BGSLogger methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/13/2011 19:23'!simulation	^ simulation! !!BGSLogger methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/13/2011 20:08'!simulation: aBGSSimulation fileName: aString	fileName := aString.	self stream: (FileStream fileNamed: fileName).	simulation := aBGSSimulation.	simulation addDependent: self.	self logHeader.	self update: simulation! !!BGSLogger methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/6/2011 18:52'!stepCount	^self simulation stepCount! !!BGSLogger methodsFor: 'accessing' stamp: 'lvt 10/18/2007 10:08'!stream	^ stream! !!BGSLogger methodsFor: 'initialize-release' stamp: 'lvt 10/18/2007 10:08'!stream: anObject	stream := anObject! !!BGSLogger methodsFor: 'logging' stamp: 'NouryBouraqadi 11/6/2011 21:50'!tab	self stream tab! !!BGSLogger methodsFor: 'logging' stamp: 'NouryBouraqadi 11/13/2011 20:15'!update: anObject	self logStep! !!BGSRobot commentStamp: 'NouryBouraqadi 11/9/2011 07:43' prior: 33875431!BGSRobot is a basic robot that has an identifier (id) and body deployed in some terrain.It does nothing. To make it perform some action, subclasses are likely to override method step Instance Variables:	id	<Symbol> Identifier of the robot. It is recommanded to assign each robot a unique ID	body	<BGSRobotBody>!!BGSFrontierExplorerRobot commentStamp: 'NouryBouraqadi 12/8/2011 16:53' prior: 33875831!I am a robot that builds a map of the terrain. I update the map and move towards a frontier cell until there are no more frontier cells left.I compute path to frontier cells that avoids obstacles while going through only already explored cells.I rely on a BGSRangeSensorBeltRobotBody.Subclasses are likely to override method:-targetFrontierPosition	Answers the frontier to move toInstance Variables:	map	<BGSExplorableGrid> map of the terrain. At the begining all its cells are marked as unexplored.!!BGSFrontierExplorerRobot methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/24/2011 19:25'!bodyClass 	^BGSRangeSensorBeltRobotBody! !!BGSFrontierExplorerRobot methodsFor: 'exploring' stamp: 'NouryBouraqadi 12/13/2011 21:15'!emptySensedPositions	^self rangeSensorBelt emptySensedPositions! !!BGSFrontierExplorerRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/11/2011 22:33'!exploredPositions	^self map exploredPositions! !!BGSFrontierExplorerRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/24/2011 23:46'!frontierPositions	^self map frontierPositions! !!BGSFrontierExplorerRobot methodsFor: 'exploring' stamp: 'NouryBouraqadi 12/12/2011 18:27'!frontierPositionsSorted	^self frontierPositions asOrderedCollection! !!BGSFrontierExplorerRobot methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 19:23'!jumpTo: aPoint in: terrain	super jumpTo: aPoint in: terrain.	self map: (BGSExplorationMap extent: terrain extent).	self map emptyCellAt: aPoint.	{terrain. (self map)} do:  [:grid| self addDependent: grid].	self changed! !!BGSFrontierExplorerRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/24/2011 23:30'!map	^map! !!BGSFrontierExplorerRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/11/2011 22:33'!map: anObject	map := anObject! !!BGSFrontierExplorerRobot methodsFor: 'exploring' stamp: 'NouryBouraqadi 12/13/2011 21:15'!obstacleSensedPositions	^self rangeSensorBelt obstacleSensedPositions! !!BGSFrontierExplorerRobot methodsFor: 'stepping' stamp: 'NouryBouraqadi 1/10/2012 17:35'!pathTo: targetPosition 	"Answers a sequence of positions of adjacent cells that lead from current position to targetPosition"	"We use A-* algo" 		|consideredPositions positionsToConsider path gScoreDict cameFromDict fScoreDict neighborExploredPositions |	consideredPositions := Set new.	positionsToConsider := Set with: self position.	cameFromDict := Dictionary new.	gScoreDict := Dictionary newFrom: {self position -> 0}.	fScoreDict := Dictionary newFrom: {self position -> (self position dist: targetPosition)}.	[positionsToConsider isEmpty] whileFalse: [		|currentPosition neighborEmptyPositions nonProcessedNeighbors|		currentPosition := (positionsToConsider asSortedCollection: [:a :b| (fScoreDict at: a) <  (fScoreDict at: b)]) first.		currentPosition = targetPosition ifTrue: [^self pathTo: targetPosition throughDict: cameFromDict].		positionsToConsider remove: currentPosition.		consideredPositions add: currentPosition.		neighborExploredPositions :=  (self map positionsAround: currentPosition) select: [:each| (self map cellAt: each) isExplored].		neighborEmptyPositions := neighborExploredPositions select: [:each| self map isEmptyCellAt: each].		nonProcessedNeighbors := neighborEmptyPositions copyWithoutAll: consideredPositions.		nonProcessedNeighbors do: [:position|			|tentativeGScore tentativeIsBetter|			tentativeGScore := (gScoreDict at: currentPosition) +  1. "(currentPosition dist: position) == 1 always" 			(positionsToConsider includes: position) ifFalse: [				positionsToConsider add: position.				tentativeIsBetter := true.			] ifTrue: [				tentativeIsBetter := (gScoreDict at: position) > tentativeGScore. 			].						tentativeIsBetter ifTrue: [ 					cameFromDict at: position put: currentPosition.					gScoreDict at: position put: tentativeGScore.					fScoreDict at: position put: tentativeGScore + (position dist: targetPosition)			]		]	].	^#()! !!BGSFrontierExplorerRobot methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/6/2011 18:34'!pathTo: targetPosition throughDict: parentsDict	|path currentPosition|	path := OrderedCollection new.	currentPosition := targetPosition.	[currentPosition = self position] whileFalse: [		path addFirst: currentPosition.		currentPosition := parentsDict at: currentPosition.	].	^path	! !!BGSFrontierExplorerRobot methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/13/2011 21:54'!pathToFrontier	| pathToFrontier frontiers |	frontiers := self frontierPositionsSorted.	pathToFrontier := #().	[pathToFrontier isEmpty] whileTrue: [		|frontierPosition|		frontiers ifEmpty: [^#()].		frontierPosition := frontiers removeFirst.		pathToFrontier := self pathTo: frontierPosition].	^pathToFrontier! !!BGSFrontierExplorerRobot methodsFor: 'exploring' stamp: 'NouryBouraqadi 12/18/2011 18:54'!rangeSensorBelt	^self body part: #rangeSensorBelt! !!BGSFrontierExplorerRobot methodsFor: 'exploring' stamp: 'NouryBouraqadi 12/13/2011 21:16'!sensedPositions	^self rangeSensorBelt sensedPositions! !!BGSFrontierExplorerRobot methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/13/2011 21:55'!step	"Go towards the nearest frontier"	| path |	self frontierPositions ifEmpty: [ ^ self ].	path := self pathToFrontier.	path ifEmpty: [^self].	self turnTowards: path first.	self goForward.	self changed! !!BGSFrontierExplorerRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/25/2011 00:00'!unexploredPositions	^self map unexploredPositions! !!BGSNearestFrontierExplorerRobot commentStamp: 'NouryBouraqadi 12/8/2011 16:58' prior: 33876431!I am an explorer robot that moves towards the nearest frontier!!BGSCollaborativeNearestFrontierExplorerRobot commentStamp: 'NouryBouraqadi 12/8/2011 23:13' prior: 33876598!I am an explorer robot that moves towards the nearest frontier and shares map with other robots that are within wireless range.!!BGSCollaborativeNearestFrontierExplorerRobot methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/8/2011 23:44'!bodyClass	^BGSWirelessEnabledRangeSensorBeltRobotBody! !!BGSCollaborativeNearestFrontierExplorerRobot methodsFor: 'communicating' stamp: 'NouryBouraqadi 12/13/2011 17:11'!broadcast: selector args: args 	self robotsWithinWirelessRange do: [:bot|		bot perform: selector withArguments: args] ! !!BGSCollaborativeNearestFrontierExplorerRobot methodsFor: 'sensing' stamp: 'NouryBouraqadi 12/13/2011 17:05'!robotsWithinWirelessRange	^self wireless botsInRange! !!BGSCollaborativeNearestFrontierExplorerRobot methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/13/2011 17:34'!step	super step.	self broadcast: #updateMapFrom: args: {self map}! !!BGSCollaborativeNearestFrontierExplorerRobot methodsFor: 'updating' stamp: 'NouryBouraqadi 12/13/2011 17:20'!updateMapFrom: aBGSExplorableGrid 	self map updateFrom: aBGSExplorableGrid! !!BGSCollaborativeNearestFrontierExplorerRobot methodsFor: 'communicating' stamp: 'NouryBouraqadi 12/13/2011 16:46'!wireless	^self body part: #wireless! !!BGSNearestFrontierExplorerRobot methodsFor: 'accessing ' stamp: 'NouryBouraqadi 12/12/2011 18:14'!frontierPositionsSorted	|myPosition|	myPosition := self position.	^self frontierPositions asSortedCollection: [:a :b| (myPosition dist: a) < (myPosition dist: b)].! !!BGSRandomWalkRobot commentStamp: 'NouryBouraqadi 11/15/2011 21:46' prior: 33876805!I am a robot that moves to a random free neighboring cell !!BGSRandomWalkRobot methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/24/2011 18:45'!bodyClass 	^BGSRobotBodyWithFrontRangeSensor! !!BGSRandomWalkRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/10/2011 15:05'!frontRangeSensor	^self body part: #frontRangeSensor! !!BGSRandomWalkRobot methodsFor: 'sensing' stamp: 'NouryBouraqadi 11/24/2011 18:46'!hasObstacleInFront	^self frontRangeSensor distanceToObstacle = 0! !!BGSRandomWalkRobot methodsFor: 'stepping' stamp: 'NouryBouraqadi 11/24/2011 18:43'!step	self turnBy: (-2 to: 2) atRandom.  "Change direction by -90, -45, 0, 45, or 90 degrees (negative is to the left and positive to the right)"	self goForward! !!BGSRobot class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 11/9/2011 08:13'!number: aNumber	^self new		number: aNumber;		yourself! !!BGSRobot class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 11/9/2011 07:39'!withId: aSymbol	^self new		id: aSymbol;		yourself! !!BGSRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/9/2011 07:34'!body	^ body! !!BGSRobot methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 16:57'!body: aRobotBody	body := aRobotBody.	body bot: self! !!BGSRobot methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/9/2011 07:44'!bodyClass	^BGSRobotBody.! !!BGSRobot methodsFor: 'moving' stamp: 'NouryBouraqadi 11/17/2011 21:44'!goForward	self body goForward! !!BGSRobot methodsFor: 'moving' stamp: 'NouryBouraqadi 11/19/2011 18:16'!goForwardBy: steps	steps timesRepeat: [self goForward]! !!BGSRobot methodsFor: 'sensing' stamp: 'NouryBouraqadi 11/19/2011 17:35'!heading	^self body heading! !!BGSRobot methodsFor: 'sensing' stamp: 'federicobalaguer 7/8/2014 08:36'!heading: aNumber	^self body heading: aNumber! !!BGSRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/9/2011 07:34'!id	^ id! !!BGSRobot methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/9/2011 08:06'!id: anObject	id := anObject asSymbol! !!BGSRobot methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/9/2011 07:34'!initialize 	super initialize.	self body: self bodyClass new.! !!BGSRobot methodsFor: 'moving' stamp: 'NouryBouraqadi 11/19/2011 17:32'!jumpTo: aPoint	self body position: aPoint! !!BGSRobot methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/29/2011 16:19'!jumpTo: aPoint in: terrain	self body jumpTo: aPoint in: terrain! !!BGSRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/9/2011 08:07'!number: aNumber	self id: 'robot', aNumber printString! !!BGSRobot methodsFor: 'sensing' stamp: 'NouryBouraqadi 11/9/2011 07:38'!position	^self body position! !!BGSRobot methodsFor: 'stepping' stamp: 'NouryBouraqadi 11/9/2011 07:38'!step	^self! !!BGSRobot methodsFor: 'moving' stamp: 'NouryBouraqadi 11/19/2011 17:30'!turnBy: number 	number < 0 ifTrue: [^self turnLeftBy: number negated].	self turnRightBy: number! !!BGSRobot methodsFor: 'moving' stamp: 'NouryBouraqadi 11/17/2011 21:43'!turnLeft	self body turnLeft! !!BGSRobot methodsFor: 'moving' stamp: 'NouryBouraqadi 11/19/2011 17:31'!turnLeftBy: steps	steps timesRepeat: [self turnLeft]! !!BGSRobot methodsFor: 'moving' stamp: 'NouryBouraqadi 11/17/2011 21:43'!turnRight	self body turnRight! !!BGSRobot methodsFor: 'moving' stamp: 'NouryBouraqadi 11/19/2011 17:31'!turnRightBy: steps 	steps timesRepeat: [self turnRight]! !!BGSRobot methodsFor: 'moving' stamp: 'NouryBouraqadi 11/29/2011 22:29'!turnTowards: aPoint	self body turnTowards: aPoint! !!BGSSnowFlakeRobot commentStamp: 'NouryBouraqadi 12/18/2011 20:22' prior: 33876942!see comment of BGSChristmasSimulation!!BGSSnowFlakeRobot methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 15:46'!bodyClass 	^BGSRangeSensorBeltRobotBody! !!BGSSnowFlakeRobot methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/18/2011 11:03'!initialize	super initialize.	body heading: 0@1.! !!BGSSnowFlakeRobot methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 15:53'!jumpTo: aPoint in: terrain	super jumpTo: aPoint in: terrain.	self addDependent: terrain.	self changed! !!BGSSnowFlakeRobot methodsFor: 'exploring' stamp: 'NouryBouraqadi 12/18/2011 15:54'!rangeSensorBelt	^self body part: #rangeSensorBelt! !!BGSSnowFlakeRobot methodsFor: 'exploring' stamp: 'NouryBouraqadi 12/18/2011 15:54'!sensedPositions	^self rangeSensorBelt sensedPositions! !!BGSSnowFlakeRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/18/2011 18:43'!simulation	^ simulation! !!BGSSnowFlakeRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/18/2011 18:43'!simulation: anObject	simulation := anObject! !!BGSSnowFlakeRobot methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/18/2011 19:11'!step	|rotation bodyCell|	bodyCell := self body cell.	bodyCell color = Color gray ifTrue: [		bodyCell color: Color white].	rotation := (-1 to: 1) atRandom.	self turnBy: rotation.	self goForward.	self turnBy: rotation negated.	self changed! !!BGSSnowFlakeRobot methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/18/2011 19:01'!terrain	^self simulation terrain! !!BGSSimulation commentStamp: 'NouryBouraqadi 12/8/2011 17:00' prior: 33877053!BGSSimulation is the main entry point to perform simulations. It deploys robots on a terrain and make them perform their actions. A simulation has its own process that drives robots (step message). It can be paused any time (message pause) and it automatically stops when reaching a stop condition.Subclasses should implement methods:-deployRobots-robotClass-robotCountSubclasses are likely to override method:-terrainClass-nameInstance Variables:	robots	<Collection of: BGSRobot>	terrain	<BGSTerrain>	pauseFlagLock	<Mutex>	isPaused	<Boolean>	stepCounter	<Integer> is incremented on every simulation step!!BGSExplorationSimulation commentStamp: 'NouryBouraqadi 12/8/2011 11:19' prior: 33877758!I am an simulation of an exploration of un unkown terrain.  I stop when all terrain cells are explored.I provide information on the exploration status (typically used for display and log) using messages such as:-frontierPositions	Answers a set with positions of frontier cells-unexploredPositions	Answers a set with positions of unexplored cells!!BGS1RobotFrontierExplorationSimulation commentStamp: 'NouryBouraqadi 12/8/2011 16:56' prior: 33878208!I am a simulation involving an explorer robot that moves towards the nearest frontier in a chekerboard like terrain!!BGS1RobotFrontierExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/30/2011 23:10'!deployRobots	(self robot: #robot1) jumpTo: 1@1 in: self terrain! !!BGS1RobotFrontierExplorationSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/8/2011 17:05'!name 	^'Single robot exploring the nearest frontier'! !!BGS1RobotFrontierExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/30/2011 23:24'!robotClass	^BGSNearestFrontierExplorerRobot! !!BGS1RobotFrontierExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/29/2011 20:44'!robotCount	^1! !!BGS1RobotFrontierExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/8/2011 16:57'!terrainClass	^BGSCheckerboardLikeTerrain! !!BGS5CollaborativeRobotsExplorationSimulation commentStamp: 'NouryBouraqadi 12/8/2011 23:27' prior: 33878428!I am a simulation of an exploration of a terrain using 5 collaborative robots (BGSCollaborativeNearestFrontierExplorerRobot) that share their maps when they are within wireless range!!BGS5CollaborativeRobotsExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/8/2011 23:36'!deployRobots	#(robot1 robot2 robot3 robot4 robot5) with: {29@17. 29@22. 29@27. 29@32. 29@37} do: [:botId :aPoint|		(self robot: botId) jumpTo: aPoint in: self terrain]! !!BGS5CollaborativeRobotsExplorationSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 5/4/2012 10:18'!name	^'Yamauchi''s Collaborative Exploration with 5 Robots'! !!BGS5CollaborativeRobotsExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/8/2011 23:27'!robotClass	^BGSCollaborativeNearestFrontierExplorerRobot! !!BGS5CollaborativeRobotsExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/8/2011 23:27'!robotCount	^5! !!BGS5CollaborativeRobotsExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/14/2011 10:12'!terrainClass	^BGSCheckerboardLikeTerrain! !!BGSChristmasSimulation commentStamp: 'NouryBouraqadi 12/18/2011 20:22' prior: 33878694!Simulation for celebrating christmas 2011. To run it, evaluate the following expression.BGSChristmasSimulationWindow onClass: BGSChristmasSimulation. !!BGSChristmasSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/18/2011 18:59'!addRobot: bot	super addRobot: bot.	bot simulation: self! !!BGSChristmasSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/18/2011 19:57'!autoStopConditionReached 	^self flakesCount > 490! !!BGSChristmasSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 11:05'!deployRobots	^self! !!BGSChristmasSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/18/2011 19:05'!flakesCount	^ flakesCount! !!BGSChristmasSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/18/2011 19:05'!flakesCount: anObject	flakesCount := anObject! !!BGSChristmasSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/18/2011 20:02'!name 	^'Bot Grid Simulator - Merry Christmas 2011'! !!BGSChristmasSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 19:05'!reset	super reset.	self flakesCount: 0! !!BGSChristmasSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/18/2011 19:39'!revealTerrain	|unexploredPositions numberOfRevealedCells |	unexploredPositions := self unexploredPositions.	numberOfRevealedCells := 500 min: unexploredPositions size.	numberOfRevealedCells timesRepeat: [(self terrain cellAt: unexploredPositions atRandom) markExplored].	self terrain changed! !!BGSChristmasSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 18:22'!robotClass	^BGSSnowFlakeRobot ! !!BGSChristmasSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 11:27'!robotCount	^self robots size! !!BGSChristmasSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/18/2011 19:55'!snow	| botCount botNumber possibleX |	(self stepCount \\ 5) isZero		ifTrue: [ 			botCount := (5 to: 15) atRandom.			possibleX := (2 to: 50 by: 3) asSet.			botNumber := self robots size + 1.			botCount				timesRepeat: [ 					| x bot |					x := possibleX atRandom.					possibleX remove: x.					self flakesCount: self flakesCount + 1.					bot := self robotClass number: self flakesCount.					bot jumpTo: x @ 1 in: self terrain.					self addRobot: bot.					botNumber := botNumber + 1 ] ]! !!BGSChristmasSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/18/2011 18:28'!step	self unexploredPositionsCount isZero		ifTrue: [ self snow ]		ifFalse: [ self revealTerrain ].	super step! !!BGSChristmasSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/11/2011 21:32'!terrainClass 	^BGSChristmasTerrain! !!BGSExplorationSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 11/30/2011 23:15'!autoStopConditionReached 	^self unexploredPositions isEmpty! !!BGSExplorationSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/30/2011 23:14'!frontierPositions 	^self terrain frontierPositions! !!BGSExplorationSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/6/2011 18:53'!frontierPositionsCount	^self frontierPositions size! !!BGSExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 18:49'!terrainClass 	^BGSExplorableTerrain! !!BGSExplorationSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/30/2011 23:14'!unexploredPositions	^self terrain unexploredPositions! !!BGSExplorationSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/6/2011 18:53'!unexploredPositionsCount	^self unexploredPositions size! !!BGSCar2012DemoSimulation class methodsFor: 'as yet unclassified' stamp: 'LucFabresse 5/4/2012 18:37'!runDemoFor: robotsCount	|sim terrain |		terrain :=  (BGSCheckerboardLikeTerrain extent: 60@60).	sim := self 			terrain: terrain 			robotsClass: BGSCollaborativeNearestFrontierExplorerRobot			positions: (BGSMeanSimulationWithRandomPosition positionsIn: terrain forRobotsCount: robotsCount)			stopOn: [:simulation| simulation unexploredPositionsCount = 0 ] 			afterStopDo: [].		BGSExplorationSimulationWindow on: sim terrainCellExtent: 8@8.! !!BGSCar2012RandomMeanSimulation class methodsFor: 'simulating' stamp: 'LucFabresse 4/3/2012 13:02'!positionsForRobotsCount: robotsCount	|positions|	positions := OrderedCollection withAll: {1@1. 1@3}.	3 to: robotsCount do: [:index|		|previousPosition delta|		previousPosition := positions atLast: 2.				index even 			ifTrue: [delta := 0@2]			ifFalse: [delta := 2@0].		positions add: previousPosition + delta	].	^positions first: robotsCount	! !!BGSCar2012RandomMeanSimulation class methodsFor: 'simulating' stamp: 'LucFabresse 4/3/2012 13:02'!runFor: robotsCount in: aTerrain logFileName: fullFileName 	|sim logger |	sim := self 			terrain: aTerrain 			robotsClass: BGSCollaborativeNearestFrontierExplorerRobot			positions: (self positionsForRobotsCount: robotsCount)			stopOn: [:simulation| simulation unexploredPositionsCount = 0 ] 			afterStopDo: [				logger close.				Smalltalk image snapshot: false andQuit: true].	logger := BGSCar2012DoitLogger on: sim logInto: fullFileName.	sim run.	^sim! !!BGSMeanSimulationWithRandomPosition class methodsFor: 'as yet unclassified' stamp: 'LucFabresse 4/3/2012 14:26'!positionsIn: aTerrain forRobotsCount: robotsCount	^ aTerrain emptyCellPositions asArray shuffle first: robotsCount ! !!BGSMeanSimulationWithRandomPosition class methodsFor: 'as yet unclassified' stamp: 'LucFabresse 4/4/2012 17:28'!runFor: robotsCount in: aTerrain logFileName: fullFileName 	|sim results fileStr lock|		lock := Semaphore new.	results := OrderedCollection new.	1 to: 30 do: [ :i |		sim := self 			terrain: aTerrain 			robotsClass: BGSCollaborativeNearestFrontierExplorerRobot			positions: (self positionsIn: aTerrain forRobotsCount: robotsCount)			stopOn: [:simulation| simulation unexploredPositionsCount = 0 ] 			afterStopDo: [				results add: sim stepCount.				lock signal.				].		sim run.		lock wait.		].		fileStr := FileStream fileNamed: fullFileName.	fileStr print:  robotsCount.		fileStr tab;		print: (results average asFloat roundTo: 2).				results do: [ :result | 		fileStr tab;			print: result	].			fileStr lf 		close.	Smalltalk image snapshot: false andQuit: true			! !!BGSParametrizedExplorationSimulation class methodsFor: 'instance creation'!terrain: terrain robotsClass: robotClass positions: points stopOn: stopConditionBlock afterStopDo: afterStopBlock	^self basicNew		terrain: terrain; 		robotClass: robotClass;		robotInitialPositions: points;		stopConditionBlock: stopConditionBlock;		afterStopBlock: afterStopBlock;		initialize;		yourself! !!BGSParametrizedExplorationSimulation methodsFor: 'accessing'!afterStopBlock	^ afterStopBlock! !!BGSParametrizedExplorationSimulation methodsFor: 'accessing'!afterStopBlock: anObject	afterStopBlock := anObject! !!BGSParametrizedExplorationSimulation methodsFor: 'testing' stamp: 'NouryBouraqadi 3/28/2012 10:39'!autoStopConditionReached	^self stopConditionBlock cull: self! !!BGSParametrizedExplorationSimulation methodsFor: 'initialize-release'!deployRobots	self robots with: self robotInitialPositions do: [:bot :point|		bot jumpTo: point in: self terrain]! !!BGSParametrizedExplorationSimulation methodsFor: 'accessing'!robotClass	^robotClass! !!BGSParametrizedExplorationSimulation methodsFor: 'accessing'!robotClass: anObject	robotClass := anObject! !!BGSParametrizedExplorationSimulation methodsFor: 'accessing'!robotCount	^robotInitialPositions size! !!BGSParametrizedExplorationSimulation methodsFor: 'accessing'!robotInitialPositions	^ robotInitialPositions! !!BGSParametrizedExplorationSimulation methodsFor: 'accessing'!robotInitialPositions: anObject	robotInitialPositions := anObject! !!BGSParametrizedExplorationSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 3/28/2012 10:42'!runLoop	[super runLoop] ensure: [		self autoStopConditionReached ifTrue: [			self afterStopBlock cull: self]]! !!BGSParametrizedExplorationSimulation methodsFor: 'accessing'!stopConditionBlock	^ stopConditionBlock! !!BGSParametrizedExplorationSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 3/27/2012 12:29'!stopConditionBlock: anObject	stopConditionBlock := anObject! !!BGSSimulationWithTopLeftIinitialPosition commentStamp: '<historical>' prior: 33878929!terrain :=  BGSExplorableTerrain extent: 100@100..terrain :=  BGSCheckerboardLikeTerrain extent: 100@100..sim := BGSCar2012Simulation runFor: 4  in: terrain logFileName: (Smalltalk image imagePath, '/result.st').BGSExplorationSimulationWindow on:  sim.sim pause.sim := nil.BGSCar2012DoitLogger allInstances first close.!!BGSSimulationWithTopLeftIinitialPosition class methodsFor: 'simulating' stamp: 'NouryBouraqadi 3/30/2012 15:45'!positionsForRobotsCount: robotsCount	|positions|	positions := OrderedCollection withAll: {1@1. 1@3}.	3 to: robotsCount do: [:index|		|previousPosition delta|		previousPosition := positions atLast: 2.				index even 			ifTrue: [delta := 0@2]			ifFalse: [delta := 2@0].		positions add: previousPosition + delta	].	^positions first: robotsCount	! !!BGSSimulationWithTopLeftIinitialPosition class methodsFor: 'simulating' stamp: 'LucFabresse 4/2/2012 15:17'!runFor: robotsCount in: aTerrain logFileName: fullFileName 	|sim logger |	sim := self 			terrain: aTerrain 			robotsClass: BGSCollaborativeNearestFrontierExplorerRobot			positions: (self positionsForRobotsCount: robotsCount)			stopOn: [:simulation| simulation unexploredPositionsCount = 0 ] 			afterStopDo: [				logger close.				Smalltalk image snapshot: false andQuit: true].	logger := BGSCar2012DoitLogger on: sim logInto: fullFileName.	sim run.	^sim! !!BGSSlowedDownExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 15:38'!defaultStepDelayMilliseconds	^100! !!BGSSlowedDownExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 15:38'!initialize 	super initialize.	self stepDelayMilliseconds: self defaultStepDelayMilliseconds! !!BGSSlowedDownExplorationSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/18/2011 15:38'!resetStepDelay	stepDelay := Delay forMilliseconds: self stepDelayMilliseconds! !!BGSSlowedDownExplorationSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/18/2011 15:38'!runLoop	^ [ [ self autoStopConditionReached or: [ self isPaused ] ] whileFalse: [ 			self step.			self stepDelay wait] ]		ensure: [ self changed ]! !!BGSSlowedDownExplorationSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/18/2011 15:38'!stepDelay	(stepDelay isNil or: [stepDelay beingWaitedOn]) ifTrue: [self resetStepDelay].	^stepDelay! !!BGSSlowedDownExplorationSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/18/2011 15:38'!stepDelayMilliseconds	^ stepDelayMilliseconds! !!BGSSlowedDownExplorationSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/18/2011 15:38'!stepDelayMilliseconds: number	stepDelayMilliseconds := number.! !!BGSSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/22/2011 10:54'!addRobot: bot	self robotsDict at: bot id put: bot! !!BGSSimulation methodsFor: 'testing' stamp: 'NouryBouraqadi 11/9/2011 08:31'!autoStopConditionReached	^false! !!BGSSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/22/2011 10:53'!createRobots	(1 to: self robotCount) collect: [:botNumber | 			self addRobot: (self robotClass number: botNumber)].! !!BGSSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/15/2011 21:54'!createTerrain	^self terrainClass new! !!BGSSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/15/2011 22:28'!deployRobots	self subclassResponsibility ! !!BGSSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 3/27/2012 12:15'!initialize 	super initialize.	pauseFlagLock := Mutex new.	self reset.! !!BGSSimulation methodsFor: 'testing' stamp: 'NouryBouraqadi 11/9/2011 07:57'!isPaused	^pauseFlagLock critical: [isPaused]! !!BGSSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/12/2011 16:47'!isPaused: aBoolean	pauseFlagLock critical: [		isPaused := aBoolean.		self changed]! !!BGSSimulation methodsFor: 'testing' stamp: 'NouryBouraqadi 11/22/2011 11:41'!isRunning	^((pauseFlagLock critical: [self isPaused]) or: [self autoStopConditionReached]) not! !!BGSSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 11/9/2011 08:31'!pause	self isPaused: true! !!BGSSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/18/2011 18:49'!removeRobot: aBGSRobot 	^self robotsDict removeKey: aBGSRobot id ifAbsent: [nil]! !!BGSSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/7/2011 16:50'!reset	self pause.	self stepCount: 0.	self terrain reset.	self robotsDict: Dictionary new.	self createRobots.	self deployRobots.	self changed! !!BGSSimulation methodsFor: 'accessing' stamp: 'federicobalaguer 8/27/2014 15:40'!robot: robotId	^self robotsDict at: robotId! !!BGSSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/15/2011 22:30'!robotClass	^self subclassResponsibility! !!BGSSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/9/2011 08:17'!robotCount	self subclassResponsibility! !!BGSSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/22/2011 10:50'!robots	^self robotsDict values! !!BGSSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/22/2011 10:50'!robotsDict	^ robotsDict! !!BGSSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/22/2011 10:50'!robotsDict: anObject	robotsDict := anObject! !!BGSSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 11/12/2011 17:28'!run	pauseFlagLock		critical: [ 			self isPaused				ifFalse: [ ^ self ].			self isPaused: false ].	[ self runLoop ] forkAt: Processor userBackgroundPriority! !!BGSSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 3/28/2012 10:36'!runLoop	^ [ [ self autoStopConditionReached or: [ self isPaused ] ] whileFalse: [ self step] ]		ensure: [ self changed ]! !!BGSSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/6/2011 18:52'!step	self stepCount: self stepCount + 1.	self robots do: [ :r | r step ].! !!BGSSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/7/2011 16:51'!stepCount	^ stepCount! !!BGSSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/7/2011 16:51'!stepCount: newCount	stepCount := newCount.	self changed! !!BGSSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 11/12/2011 17:40'!stepIfPaused	self isRunning ifTrue: [^self].	self autoStopConditionReached ifTrue: [^self].	self step! !!BGSSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 3/27/2012 12:15'!terrain	^ terrain ifNil: [terrain := self createTerrain]! !!BGSSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/9/2011 07:57'!terrain: anObject	terrain := anObject! !!BGSSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/8/2011 11:07'!terrainClass	^BGSGrid! !!BGSSimulation methodsFor: 'accessing' stamp: 'federicobalaguer 7/10/2014 11:28'!tracePositionFor: robotId 	^self robotsDict at: robotId ifAbsent: [nil]! !!BGSSimulationForTest methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/22/2011 11:33'!autoStopConditionFlag	^ autoStopConditionFlag! !!BGSSimulationForTest methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/22/2011 11:33'!autoStopConditionFlag: anObject	autoStopConditionFlag := anObject! !!BGSSimulationForTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/22/2011 11:33'!autoStopConditionReached	^self autoStopConditionFlag ! !!BGSSimulationForTest methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/19/2011 17:33'!deployRobots	self robots first jumpTo: 1@1 in: self terrain! !!BGSSimulationForTest methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/22/2011 11:33'!initialize 	super initialize.	self autoStopConditionFlag: false! !!BGSSimulationForTest methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/15/2011 22:33'!robotClass	^BGSRobot! !!BGSSimulationForTest methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/7/2011 17:14'!robotCount	^1! !!BGSSimulationForTest methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/15/2011 22:36'!terrainClass	^BGSTerrainForTest! !!BGSSlowedDownSimulation commentStamp: 'NouryBouraqadi 12/13/2011 23:12' prior: 33879343!In order to allow userconfortably watch simulation (avoid the flashing simulation effect), I introduce a delay to suspend the simulation process every step for a short duration (milliseconds). See references to variable stepDelayInstance Variables:	stepDelay	<Delay>	stepDelayMilliseconds	<ProtoObject | PseudoContext>!!BGSSimulationExample commentStamp: 'NouryBouraqadi 11/16/2011 22:37' prior: 33879747!SimulationExample is a simple simulation with a three robots that randomly walks in a terrain.Instance Variables:	stepDelay	<Delay> delay between two simulation steps.		To display and log the simulation, evaluate in a workspace the following code snippet	sim := BGSSimulationExample new.	BGSSimulationWindow on:  sim.	logger := BGSLogger on: sim.!!BGSSimulationExample methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/6/2011 18:52'!autoStopConditionReached 	^self stepCount = 100! !!BGSSimulationExample methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/10/2011 15:05'!deployRobots	self robots do: [:bot|		(bot body part: #frontRangeSensor) range: 3].	self robots with: {17@17. 37@17. 26@37} do: [:bot :position|		bot jumpTo: position in: self terrain]! !!BGSSimulationExample methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/8/2011 17:02'!name 	^'Basic Simulation Example'! !!BGSSimulationExample methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/12/2011 16:52'!robotClass	^BGSRandomWalkRobot! !!BGSSimulationExample methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/15/2011 22:19'!robotCount	^3! !!BGSSimulationExample methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/12/2011 16:56'!terrainClass	^BGSTerrainExample! !!BGSSlowedDownSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 23:07'!defaultStepDelayMilliseconds	^100! !!BGSSlowedDownSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 23:02'!initialize 	super initialize.	self stepDelayMilliseconds: self defaultStepDelayMilliseconds! !!BGSSlowedDownSimulation methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 23:02'!resetStepDelay	stepDelay := Delay forMilliseconds: self stepDelayMilliseconds! !!BGSSlowedDownSimulation methodsFor: 'stepping' stamp: 'NouryBouraqadi 12/13/2011 23:04'!runLoop	^ [ [ self autoStopConditionReached or: [ self isPaused ] ] whileFalse: [ 			self step.			self stepDelay wait] ]		ensure: [ self changed ]! !!BGSSlowedDownSimulation methodsFor: 'accessing' stamp: 'JulianGrigera 8/21/2015 19:10'!stepDelay	(stepDelay isNil or: [stepDelay schedulerBeingWaitedOn]) ifTrue: [self resetStepDelay].	^stepDelay! !!BGSSlowedDownSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/13/2011 23:02'!stepDelayMilliseconds	^ stepDelayMilliseconds! !!BGSSlowedDownSimulation methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/13/2011 23:02'!stepDelayMilliseconds: number	stepDelayMilliseconds := number.! !!BGSSimulationScriptGenerator class methodsFor: 'generating' stamp: 'LucFabresse 4/3/2012 14:31'!generateAt: folderFullPath minBots: minBotsCount maxBots: maxBotsCount	"self generateTopLeftInitialPositionAt: folderFullPath minBots: minBotsCount maxBots: maxBotsCount"	self generateMeanRandomPositionExperimentAt: folderFullPath minBots: minBotsCount maxBots: maxBotsCount! !!BGSSimulationScriptGenerator class methodsFor: 'generating' stamp: 'LucFabresse 4/5/2012 10:10'!generateExperiment: experimentClass at: folderFullPath minBots: minBotsCount maxBots: maxBotsCount	minBotsCount to: maxBotsCount do: [:botsCount|		|fileStr|		fileStr := FileStream fileNamed: folderFullPath, '/', (botsCount printStringPadded: 3), '.st'.		fileStr			nextPutAll: 'NonInteractiveTranscript stdout install.' ; crlf;			nextPutAll: experimentClass asString;			nextPutAll: ' runFor:'; 			space;			print: botsCount;			space;			nextPutAll: 'in: ';			nextPutAll: ' (BGSCheckerboardLikeTerrain extent: 100@100)  ';			"nextPutAll: ' (BGSExplorableTerrain extent: 100@100)  ';"			nextPutAll: 'logFileName:';			space;			nextPut: $' ;			nextPutAll: folderFullPath;			nextPut: $/ ;			nextPutAll: 'result-';			nextPutAll: (botsCount printStringPadded: 3);			nextPutAll:  '.st''.';			crlf;			close	]! !!BGSSimulationScriptGenerator class methodsFor: 'generating' stamp: 'LucFabresse 4/3/2012 13:17'!generateMeanRandomPositionExperimentAt: folderFullPath minBots: minBotsCount maxBots: maxBotsCount		self generateExperiment: BGSMeanSimulationWithRandomPosition at: folderFullPath minBots: minBotsCount maxBots: maxBotsCount! !!BGSSimulationScriptGenerator class methodsFor: 'generating' stamp: 'LucFabresse 4/3/2012 13:16'!generateTopLeftInitialPositionAt: folderFullPath minBots: minBotsCount maxBots: maxBotsCount	self generateExperiment: BGSSimulationWithTopLeftIinitialPosition at: folderFullPath minBots: minBotsCount maxBots: maxBotsCount! !!BGSGridView commentStamp: 'NouryBouraqadi 11/14/2011 17:03' prior: 33880175!BGSGridView is a morph that observes a grid and updates its display according to the grid changes: typically a change of a cell.Subclasses are likely to override methods:-drawCell:at:on: 		Main method that drives cell drwaing-drawRobotBody:at:on: 	Draws a robot as a blue dot in a cell!!BGSClickableGridView methodsFor: 'as yet unclassified' stamp: 'LucFabresse 4/1/2012 15:02'!cellAtAbsolutePosition: position	| clickedCell topLeftCellOriginPosition |	topLeftCellOriginPosition := (self boxForCellAt: (1@1)) origin.	clickedCell := ((position - topLeftCellOriginPosition) // self cellFrameExtent).		clickedCell := clickedCell + (1@1).	^clickedCell.		! !!BGSClickableGridView methodsFor: 'as yet unclassified' stamp: 'LucFabresse 4/1/2012 19:58'!emptyCellAt: cellPosition	"remove wall if any"	self grid emptyCellAt: cellPosition.	! !!BGSClickableGridView methodsFor: 'as yet unclassified' stamp: 'LucFabresse 4/1/2012 14:40'!initialize 	super initialize.	self on: #mouseDown send: #mouseDownEvt: to: self! !!BGSClickableGridView methodsFor: 'as yet unclassified' stamp: 'LucFabresse 4/1/2012 19:51'!mouseDownEvt: evt			| cellPosition |	cellPosition := self cellAtAbsolutePosition:  evt position.		evt redButtonPressed 		ifTrue: [ self setWallToCellAt: cellPosition ] 		ifFalse: [ 			evt yellowButtonPressed ifTrue: [ self emptyCellAt: cellPosition ]]! !!BGSClickableGridView methodsFor: 'as yet unclassified' stamp: 'LucFabresse 4/2/2012 09:17'!setWallToCellAt: cellPosition		((self grid isEmptyCellAt: cellPosition) or: [ ((self grid contentOfCellAt: cellPosition) isKindOf: BGSWall) not]) ifTrue: [		self grid addWallAt: cellPosition.	]! !!BGSClickableGridView methodsFor: 'as yet unclassified' stamp: 'LucFabresse 4/1/2012 19:40'!toggleWallOfCell: cellPosition	"add /remove wall "		(self grid isEmptyCellAt: cellPosition) ifTrue: [		self grid put: BGSWall new inCellAt: cellPosition.		Transcript cr; show: 'ADD WALL'.	] ifFalse: [		(self grid cellAt: cellPosition) empty.		Transcript cr; show: 'RM WALL'.	].	"self halt "	! !!BGSExplorableGridView commentStamp: 'NouryBouraqadi 12/8/2011 11:12' prior: 33880549!I am the view of an BGSExplorableGrid. I display frontiers, explored and unexplored cells in different colors.!!BGSChristmasGridView commentStamp: 'NouryBouraqadi 12/18/2011 20:22' prior: 33880741!see comment of BGSChristmasSimulation!!BGSChristmasGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 12/18/2011 10:17'!drawCell: cell on: aCanvas	| box cellColor |	box := self boxForCellAt: self visitedCellPosition.	aCanvas fillRectangle: box color: cell color! !!BGSChristmasGridView methodsFor: 'drawing' stamp: 'federicobalaguer 7/3/2014 15:51'!drawFrontierCell: cell	self drawCell: cell on: self canvas ! !!BGSChristmasGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 12/18/2011 15:49'!drawParts	^self! !!BGSChristmasGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 12/18/2011 18:39'!drawRobotBody: botBody on: aCanvas	|box emptyCells|	box := self boxForCellAt: self visitedCellPosition.	emptyCells := (botBody terrain cellsAround: botBody cell) select: [:cell| cell isEmpty].	emptyCells isEmpty 		ifFalse: [				aCanvas fillOval: box color: Color white.			aCanvas frameOval: box color: Color gray		] 		ifTrue: [aCanvas fillRectangle: box color: Color white]! !!BGSChristmasGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 12/18/2011 10:31'!drawWall: wall on: aCanvas	^self! !!BGSChristmasGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 12/18/2011 18:40'!unexploredCellColor 	^Color yellow! !!BGSExplorableGridView methodsFor: 'drawing' stamp: 'federicobalaguer 7/3/2014 15:51'!drawFrontierCell: cell	| box cellColor |	box := self boxForCellAt: cell position.	self canvas fillRectangle: box color: self frontierCellColor! !!BGSExplorableGridView methodsFor: 'drawing' stamp: 'federicobalaguer 7/3/2014 15:51'!drawUnexploredCell: cell	| box cellColor |	box := self boxForCellAt: cell position.	self canvas fillRectangle: box color: self unexploredCellColor! !!BGSExplorableGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 12/1/2011 19:55'!frontierCellColor	^Color yellow! !!BGSExplorableGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 12/1/2011 20:10'!unexploredCellColor	^Color lightGray ! !!BGSExplorableGridView methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/1/2011 19:52'!visitFrontierCell: cell	self drawFrontierCell: cell! !!BGSExplorableGridView methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/1/2011 19:52'!visitUnexploredCell: cell	self drawUnexploredCell: cell! !!BGSExplorationMapView methodsFor: 'as yet unclassified' stamp: 'NouryBouraqadi 12/14/2011 14:20'!drawParts	"We do not want these details at this level"	^self! !!BGSExplorationMapView methodsFor: 'as yet unclassified' stamp: 'NouryBouraqadi 12/14/2011 14:24'!drawRobotBody: botBody on: aCanvas	| box |	box := self boxForCellAt: botBody position.	aCanvas fillRectangle: box color: self robotBodyColor! !!BGSExplorationMapView methodsFor: 'as yet unclassified' stamp: 'NouryBouraqadi 12/14/2011 14:24'!robotBodyColor	^Color red! !!BGSGridView class methodsFor: 'accessing' stamp: 'LucFabresse 4/1/2012 10:32'!defaultCellExtent 	^10@10! !!BGSGridView class methodsFor: 'instance creation' stamp: 'NouryBouraqadi 11/10/2011 18:17'!on: aBGSGrid	^self new		grid: aBGSGrid;		yourself! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 11/10/2011 20:13'!boxForCellAt: aPoint	| center |	center := self centerOfCellAt: aPoint.	^ Rectangle center: center extent: self cellExtent! !!BGSGridView methodsFor: 'accessing' stamp: 'federicobalaguer 7/3/2014 15:51'!canvas	^ canvas! !!BGSGridView methodsFor: 'accessing' stamp: 'federicobalaguer 7/3/2014 15:52'!canvas: anObject	canvas := anObject! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 12/13/2011 22:29'!cellExtent	^cellExtent! !!BGSGridView methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 22:36'!cellExtent: anObject	cellExtent := anObject.	self updateExtent! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 11/10/2011 18:52'!cellFrameExtent	^self cellExtent + (1@1)! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 11/10/2011 19:14'!centerOfCellAt: aPoint	^ aPoint * self cellFrameExtent + self position! !!BGSGridView methodsFor: 'initialize-release' stamp: 'LucFabresse 4/1/2012 10:30'!defaultCellExtent	^self class defaultCellExtent! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 3/20/2012 21:10'!drawCell: cell on: aCanvas	| box cellColor |	box := self boxForCellAt: self visitedCellPosition.	aCanvas fillRectangle: box color: cell color! !!BGSGridView methodsFor: 'drawing' stamp: 'federicobalaguer 7/3/2014 15:51'!drawDirectionalRangeSensor: sensor	|origin lineLengthFactor extremity|	origin := self centerOfCellAt: sensor position.	extremity :=  self centerOfCellAt: (sensor position + (sensor heading * sensor range)). 	self canvas 		line: origin 		to: extremity 		color: self rangeSensorColor! !!BGSGridView methodsFor: 'drawing' stamp: 'federicobalaguer 7/3/2014 15:51'!drawOmnidirectionalRangeSensor: sensor	|box boxCenter boxExtent|	boxCenter := self centerOfCellAt: sensor position.	boxExtent := self cellFrameExtent  * 2. "Go to the middle of the most far covered cell" 	box := Rectangle center: boxCenter extent: boxExtent.	self canvas 		 	frameOval: box color: self rangeSensorColor.! !!BGSGridView methodsFor: 'drawing' stamp: 'federicobalaguer 7/3/2014 15:52'!drawOn: aCanvas	| renderer |	super drawOn: aCanvas.	self canvas: aCanvas.	self resetBotParts.	self grid cells		with: self grid positions		do: [ :cell :position | 			self visitedCellPosition: position.			cell acceptVisitor: self ].	"Parts should be drawn at the end cause their drawings go over multiple cells"	"Otherwise, part of it will be covered by cell drawings"	self drawParts! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 12/14/2011 14:20'!drawParts	self parts do: [ :each | each acceptVisitor: self ]! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 11/30/2011 23:28'!drawRobotBody: botBody on: aCanvas	|box headingLineOrigin headingLineExtremity extremityExtent|	box := self boxForCellAt: self visitedCellPosition.	aCanvas fillOval: box color: self robotBodyColor.	headingLineOrigin := self centerOfCellAt: self visitedCellPosition.	extremityExtent := (self cellExtent -  self robotBodyHeadingLineWidth) / 2 * botBody heading.	headingLineExtremity := headingLineOrigin + extremityExtent truncated.	aCanvas 		line: headingLineOrigin 		to: headingLineExtremity 		width: self robotBodyHeadingLineWidth  		color: self robotBodyHeadingLineColor! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 11/24/2011 18:30'!drawWall: wall on: aCanvas	| box |	box := self boxForCellAt: self visitedCellPosition.	aCanvas fillRectangle: box color: self wallColor! !!BGSGridView methodsFor: 'drawing' stamp: 'federicobalaguer 7/3/2014 15:51'!drawWireless: wireless	|origin lineLengthFactor |	origin := self centerOfCellAt: wireless position.	wireless peers do: [:peer|		|extremity|		extremity := self centerOfCellAt: peer position.		self canvas 			line: origin 			to: extremity 			color: self wirelessColor	]! !!BGSGridView methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/9/2011 21:46'!grid	^ grid! !!BGSGridView methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/13/2011 22:36'!grid: anObject	grid := anObject.	self updateExtent.	grid addDependent: self! !!BGSGridView methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/13/2011 22:29'!initialize	super initialize.	self 		cellExtent: self defaultCellExtent;		useGradientFill;		borderWidth: 2;		useRoundedCorners;		setBorderStyle: #complexRaised.	self	fillStyle direction: self extent.	self color: self simulationBackgroundColor! !!BGSGridView methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/10/2011 15:11'!parts	^botParts! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 11/19/2011 11:58'!rangeSensorColor	^Color red! !!BGSGridView methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 12/10/2011 15:13'!resetBotParts 	botParts := Set new! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 11/19/2011 09:36'!robotBodyColor	^Color blue! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 11/19/2011 12:22'!robotBodyHeadingLineColor	^Color cyan! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 11/30/2011 23:32'!robotBodyHeadingLineWidth	^4! !!BGSGridView methodsFor: 'initialize-release' stamp: 'NouryBouraqadi 11/10/2011 18:02'!simulationBackgroundColor	^ Color 		r: 0.10		g: 0.50		b: 0.30! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 11/10/2011 20:31'!update: anObject	self changed! !!BGSGridView methodsFor: 'accessing' stamp: 'NouryBouraqadi 12/13/2011 22:37'!updateExtent	self grid ifNil: [^self].	self extent: (1 + self grid extent) * self cellFrameExtent! !!BGSGridView methodsFor: 'visiting' stamp: 'federicobalaguer 7/3/2014 15:51'!visitCell: cell	self drawCell: cell on: self canvas! !!BGSGridView methodsFor: 'visiting' stamp: 'NouryBouraqadi 11/24/2011 19:32'!visitDirectionalRangeSensor: sensor	self drawDirectionalRangeSensor: sensor! !!BGSGridView methodsFor: 'visiting' stamp: 'NouryBouraqadi 11/24/2011 19:40'!visitOmnidirectionalRangeSensor: sensor	self drawOmnidirectionalRangeSensor: sensor! !!BGSGridView methodsFor: 'visiting' stamp: 'federicobalaguer 7/3/2014 15:51'!visitRobotBody: aRobotBody	self drawRobotBody: aRobotBody on: self canvas.	self parts addAll: aRobotBody parts! !!BGSGridView methodsFor: 'visiting' stamp: 'federicobalaguer 7/3/2014 15:51'!visitWall: wall	self drawWall: wall on: self canvas! !!BGSGridView methodsFor: 'visiting' stamp: 'NouryBouraqadi 12/13/2011 17:29'!visitWireless: wireless	self drawWireless: wireless! !!BGSGridView methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/16/2011 22:33'!visitedCellPosition	^ visitedCellPosition! !!BGSGridView methodsFor: 'accessing' stamp: 'NouryBouraqadi 11/16/2011 22:33'!visitedCellPosition: anObject	visitedCellPosition := anObject! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 11/19/2011 09:35'!wallColor	^Color black! !!BGSGridView methodsFor: 'drawing' stamp: 'NouryBouraqadi 12/13/2011 22:04'!wirelessColor.	^Color magenta! !!BGS1RobotFrontierExplorationSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/14/2011 14:40'!setUp 	super setUp.	simulation := BGS1RobotFrontierExplorationSimulation new.	terrain := simulation terrain! !!BGS1RobotFrontierExplorationSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/6/2011 18:53'!testFrontierCountAfterOneStep	simulation step.	self assert: simulation frontierPositionsCount = 4! !!BGS1RobotFrontierExplorationSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/6/2011 18:53'!testInitialFrontierCount	self assert: simulation frontierPositionsCount = 3! !!BGS1RobotFrontierExplorationSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/6/2011 18:50'!testInitialUnexploredCount	self assert: simulation unexploredPositionsCount =  2496! !!BGS1RobotFrontierExplorationSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/14/2011 14:40'!testRevealingTerrain	terrain markExplored.	terrain cells do: [:aCell| 		self assert: aCell isExplored].! !!BGS1RobotFrontierExplorationSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/6/2011 18:54'!testUnexploredCountAfterOneStep	simulation step.	self assert: simulation unexploredPositionsCount =  2494! !!BGSBodyPartTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/8/2011 11:07'!setUp 	botBody := BGSRobotBody new.	terrain := BGSGrid extent: 10@10.	botBody jumpTo: 5@5 in: terrain.! !!BGSDirectionalRangeSensorTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/11/2011 09:56'!setUp 	super setUp.	sensor := BGSDirectionalRangeSensor botBody: botBody name: #rangeSensor range: 4! !!BGSDirectionalRangeSensorTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 11:45'!testDetectionOfObstacleAfterRobotMove	botBody position: 5@6.	terrain addWallAt: 5@1.	(0 to: 3) reversed do: [:expectedDistance|		botBody goForward.		self assert: sensor distanceToObstacle = expectedDistance	].! !!BGSDirectionalRangeSensorTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 11:05'!testDetectionOfObstacleAfterRobotRotation	terrain addWallAt: 3@3 extent: 5@5.	terrain emptyCellsAt: 4@4 extent: 3@3.	8 timesRepeat: [		botBody turnLeft.		self assert: sensor distanceToObstacle = 1.	]! !!BGSDirectionalRangeSensorTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 11:00'!testDetectionOfObstacleInFrontOfRobot	{5@1. 5@2. 5@3. 5@4} with: (0 to: 3) reversed do: [:wallPosition :expectedDistance|		terrain addWallAt: wallPosition.		self assert: sensor distanceToObstacle = expectedDistance	].! !!BGSDirectionalRangeSensorTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/25/2011 09:36'!testInitialRange	self assert: sensor range = 4! !!BGSDirectionalRangeSensorTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 11:05'!testNoObstacle	self assert: sensor distanceToObstacle = 4! !!BGSDirectionalRangeSensorTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 11:15'!testObstacleBeyondRange	botBody position: 5@10.	{5@1. 5@2. 5@3. 5@4. 5@5} do: [:wallPosition|		terrain addWallAt: wallPosition.		self assert: sensor distanceToObstacle = 4	].! !!BGSOmnirectionalRangeSensorTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/11/2011 09:55'!setUp 	super setUp.	sensor := BGSOmnidirectionalRangeSensor botBody: botBody name: #proximityBelt! !!BGSOmnirectionalRangeSensorTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/13/2011 21:13'!testNoNeighboringObstacles 	|expectedEmptyPositions|	expectedEmptyPositions := {4@4. 5@4. 6@4. 4@5. 6@5. 4@6. 5@6. 6@6} asSet.	self assert: sensor emptySensedPositions asSet = expectedEmptyPositions! !!BGSOmnirectionalRangeSensorTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/13/2011 21:13'!testSomeNeighboringObstacles	|obstaclePositions|	obstaclePositions := {4@4. 6@5. 5@6} asSet.	obstaclePositions do: [:wallPosition| 		terrain put: BGSWall new inCellAt: wallPosition].	self assert: sensor emptySensedPositions asSet = { 5@4. 6@4. 4@5.  4@6. 6@6} asSet.	self assert: sensor obstacleSensedPositions asSet = obstaclePositions! !!BGSOmnirectionalRangeSensorTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/13/2011 21:13'!testSurroundedWithObstacles 	terrain addWallAt: (sensor position - 1) extent: 3@3.	self assert: sensor emptySensedPositions isEmpty! !!BGSWirelessTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/11/2011 09:58'!setUp 	super setUp.	wireless := BGSWireless botBody: botBody name: #wifi range: 3.	otherBotBody := BGSRobotBody new.	otherBotBody jumpTo: 1@1 in: terrain.	otherWireless := BGSWireless botBody: otherBotBody name: #wifi range: 3.! !!BGSWirelessTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/10/2011 21:46'!testDetectPeerWithinRange	|rangePositions expectedPeers|	rangePositions := Set new.	2 to: 8 do: [:x|		2 to: 8 do: [:y|			rangePositions add: x@y]].	expectedPeers := {otherWireless} asSet.	rangePositions do: [:aPoint|		otherBotBody position: aPoint.		self assert: wireless peers = expectedPeers].! !!BGSWirelessTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/10/2011 21:27'!testNoPeerWithinRange	|rangePositions outsideRangePositions|	rangePositions := Set new.	2 to: 8 do: [:x|		2 to: 8 do: [:y|			rangePositions add: x@y]].	outsideRangePositions := terrain positions asSet copyWithoutAll: rangePositions.	outsideRangePositions do: [:aPoint|		otherBotBody position: aPoint.		self assert: wireless peers isEmpty].! !!BGSCar2012SimulationTest methodsFor: 'testing' stamp: 'LucFabresse 4/3/2012 13:16'!setUp	super setUp.	simClass := BGSSimulationWithTopLeftIinitialPosition! !!BGSCar2012SimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 3/30/2012 15:28'!testPositionsFor1Robot	| positions |	positions := simClass positionsForRobotsCount: 1.	self assert: positions asSet = {1@1} asSet! !!BGSCar2012SimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 3/30/2012 15:28'!testPositionsFor2Robots	| positions |	positions := simClass positionsForRobotsCount: 2.	self assert: positions asSet =  {1@1.  1@3} asSet! !!BGSCar2012SimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 3/30/2012 15:28'!testPositionsFor3Robots	| positions |	positions := simClass positionsForRobotsCount: 3.	self assert: positions asSet =  {1@1.  1@3. 3@1} asSet! !!BGSCar2012SimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 3/30/2012 15:28'!testPositionsFor4Robots	| positions |	positions := simClass positionsForRobotsCount: 4.	self assert: positions asSet =  {1@1.  1@3. 3@1. 1@5} asSet! !!BGSCar2012SimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 3/30/2012 15:28'!testPositionsFor5Robots	| positions |	positions := simClass positionsForRobotsCount: 5.	self assert: positions asSet =  {1@1.  1@3. 3@1. 1@5. 5@1} asSet! !!BGSCollaborativeNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/13/2011 16:19'!robotClass	^BGSCollaborativeNearestFrontierExplorerRobot! !!BGSCollaborativeNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/13/2011 16:58'!setUp 	super setUp.	otherBot := self robotClass new.	otherBot jumpTo: 1@1 in: terrain.	otherMap := otherBot map.	{bot. otherBot} with: #(#bot #otherBot) do: [:robot :identifier|			robot id: identifier.			(robot body part: #wireless) range: 2]! !!BGSCollaborativeNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/13/2011 17:11'!testBroadcastToCloseRobots	otherBot jumpTo: 3@3. 	self assert: bot robotsWithinWirelessRange = {otherBot} asSet.	self assert: otherBot robotsWithinWirelessRange = {bot} asSet.	bot broadcast: #jumpTo: args: {4@4}.	self assert: otherBot position = (4@4).	otherBot broadcast: #jumpTo: args: {6@4}.	self assert: bot position = (6@4).	! !!BGSCollaborativeNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/13/2011 17:05'!testRobotsCloseEnoughToDetectEachOther	| closePositions |	closePositions := Set new.	3 to: 7 do: [:x|		3 to: 7 do: [:y| closePositions add: x@y]].	closePositions remove: 5@5. "Position of bot "	closePositions do: [:aPoint|		otherBot jumpTo: aPoint. 		self assert: bot robotsWithinWirelessRange = {otherBot} asSet.		self assert: otherBot robotsWithinWirelessRange = {bot} asSet].! !!BGSCollaborativeNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/13/2011 17:05'!testRobotsTooFarToDetectEachOther	| farPositions |	farPositions := Set new.	1 to: 10 do: [:x|		1to: 2 do: [:y| farPositions add: x@y]].	1 to: 2 do: [:x|		1to: 10 do: [:y| farPositions add: x@y]].	8 to: 10 do: [:x|		1to: 10 do: [:y| farPositions add: x@y]].	1 to: 10 do: [:x|		8to: 10 do: [:y| farPositions add: x@y]].	farPositions do: [:aPoint|		otherBot jumpTo: aPoint. 		self assert: bot robotsWithinWirelessRange isEmpty.		self assert: otherBot robotsWithinWirelessRange isEmpty].! !!BGSCollaborativeNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 4/3/2012 21:08'!testUpdateMapWithCellsMarkedEmptyFromMapWithSameCellsMarkedObstacles	|expectedEmptyCellPositions|	otherMap addWallAt: 1@1 extent: 10@10. 	otherMap put: otherBot body inCellAt: otherBot position.	otherMap markExplored. 	map markExplored.	bot updateMapFrom: otherMap.	expectedEmptyCellPositions := map positions asSet copyWithout: bot position.	self assert: map emptyCellPositions asSet = expectedEmptyCellPositions.	self deny: (map isEmptyCellAt: bot position).	self assert: (map isEmptyCellAt: otherBot position)! !!BGSCollaborativeNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 4/3/2012 20:59'!testUpdateMapWithCellsMarkedObstaclesFromMapWithSameCellsMarkedEmpty	|expectedEmptyCellPositions|	otherMap markExplored. 	map addWallAt: 1@1 extent: 10@10. 	map put: bot body inCellAt: bot position.	map markExplored.	bot updateMapFrom: otherMap.	expectedEmptyCellPositions := map positions asSet copyWithout: bot position.	self assert: map emptyCellPositions asSet = expectedEmptyCellPositions.	self deny: (map isEmptyCellAt: bot position)! !!BGSCollaborativeNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/13/2011 17:27'!testUpdatingEmptyMapFromOtherMapWithExploredEmptyCells	otherMap emptyCellsAt: 6@7 extent: 3@3.	6 to: 8 do: [:x|		7 to: 9 do: [:y|			self deny: (map cellAt: x@y) isExplored]].	bot updateMapFrom: otherMap.	6 to: 8 do: [:x|		7 to: 9 do: [:y|			self assert:  (map cellAt: x@y) isExplored.			self assert: (map isEmptyCellAt: x@y)]]! !!BGSCollaborativeNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/13/2011 17:24'!testUpdatingEmptyMapFromOtherMapWithObstacles	otherMap addWallAt: 6@7 extent: 3@3.	6 to: 8 do: [:x|		7 to: 9 do: [:y|			self deny: (map cellAt: x@y) isExplored]].	bot updateMapFrom: otherMap.	6 to: 8 do: [:x|		7 to: 9 do: [:y|			self assert:  (map cellAt: x@y) isExplored.			self deny: (map isEmptyCellAt: x@y)]]! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:17'!assertBotGoTo: botExpectedPosition withHeading: botExpectedHeading emptyCellPositions: emptyCellPositions unexploredPosition: unexploredPosition	map addWallsAtPositions: map positions.	(emptyCellPositions copyWith: bot position) do: [:aPoint| 		map emptyCellAt: aPoint].	map markUnexploredCellAt: unexploredPosition.	bot step.	self assert: bot heading = botExpectedHeading.	self assert: bot position = botExpectedPosition! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:18'!assertBotGoToFrontierAt: frontierPosition withHeading: botExpectedHeading unexploredCellAt: unexploredPosition	self assertBotGoTo: frontierPosition withHeading: botExpectedHeading emptyCellPositions: {frontierPosition} unexploredPosition: unexploredPosition! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/30/2011 23:50'!robotClass	^BGSFrontierExplorerRobot! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/13/2011 19:23'!setUp	super setUp.	terrain := BGSExplorableTerrain extent: 10@10.	bot := self robotClass new.	bot jumpTo: 5@5 in: terrain.	map := bot map.! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 4/3/2012 23:19'!testEmptyCellInMapRemainsEmptyEvenIfObstacleDetected	|expectedEmptyPositions wallPosition|	map positions  do: [:aPoint| 		map emptyCellAt: aPoint].	map put: bot body inCellAt: bot position.	self assert: map unexploredPositions isEmpty.	expectedEmptyPositions := map positions asSet copyWithout: bot position.	self assert: map emptyCellPositions asSet = expectedEmptyPositions.	wallPosition := bot position + (1@1).	terrain addWallAt: wallPosition.	self deny: (terrain isEmptyCellAt: wallPosition).	self assert: (bot obstacleSensedPositions asArray = {wallPosition}).	bot step.	self assert: map emptyCellPositions asSet = expectedEmptyPositions.! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 18:32'!testFrontierPositionsAfterOneStep	{4@4. 6@4. 4@6. 6@6} do: [:aPoint| 		terrain addWallAt: aPoint].	bot jumpTo: 5@5 in: terrain.	self assert: bot frontierPositions size = 4.	bot step.	self assert: bot frontierPositions size = 6! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:12'!testGoToUniqueFrontier1CellEast	self assertBotGoToFrontierAt: 6@5 withHeading: 1@0 unexploredCellAt: 7@5! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:12'!testGoToUniqueFrontier1CellNorth	self assertBotGoToFrontierAt: 5@4 withHeading: 0@ -1 unexploredCellAt: 5@3! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:13'!testGoToUniqueFrontier1CellNorthEast	self assertBotGoToFrontierAt: 6@4 withHeading: 1@ -1 unexploredCellAt: 7@3! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:13'!testGoToUniqueFrontier1CellNorthWest	self assertBotGoToFrontierAt: 4@4 withHeading: -1@ -1 unexploredCellAt: 3@3! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:14'!testGoToUniqueFrontier1CellSouth	self assertBotGoToFrontierAt: 5@6 withHeading: 0@1 unexploredCellAt:  5@7! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:14'!testGoToUniqueFrontier1CellSouthEast	self assertBotGoToFrontierAt: 6@6 withHeading: 1@1 unexploredCellAt: 7@7! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:14'!testGoToUniqueFrontier1CellSouthWest	self assertBotGoToFrontierAt: 4@6 withHeading: -1@1 unexploredCellAt: 3@7! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:14'!testGoToUniqueFrontier1CellWest	self assertBotGoToFrontierAt: 4@5 withHeading: -1@0 unexploredCellAt:  3@5! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:20'!testGoTowardsUniqueFrontier2CellsToTheEast	self assertBotGoTo: 6@5 withHeading: 1@0 emptyCellPositions: {6@5. 7@5} unexploredPosition: 8@5.! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:21'!testGoTowardsUniqueFrontier2CellsToTheNorth	self assertBotGoTo: 5@4 withHeading: 0@ -1 emptyCellPositions: {5@3. 5@4} unexploredPosition: 5@2.! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:22'!testGoTowardsUniqueFrontier2CellsToTheSouth	self assertBotGoTo: 5@6 withHeading: 0@1 emptyCellPositions: {5@6. 5@7} unexploredPosition: 5@8.! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:22'!testGoTowardsUniqueFrontier2CellsToTheWest	self assertBotGoTo: 4@5 withHeading: -1@0 emptyCellPositions: {3@5. 4@5} unexploredPosition: 2@5.! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 17:45'!testInitialExploredPositions	|expectedExploredPositions|	expectedExploredPositions := Set new.	4 to: 6 do: [:x|		4 to: 6 do: [:y| expectedExploredPositions add: x@y]].	self assert: bot exploredPositions asSet = expectedExploredPositions	! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 17:45'!testInitialFrontierPositions	self assert: bot frontierPositions asSet = {		4@4. 5@4. 6@4. 		4@5.         6@5.	 	4@6. 5@6. 6@6}  asSet	! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 17:45'!testInitialUnexploredPositions	|expectedExploredPositions expectedUnexploredPositions|	expectedExploredPositions := Set new.	4 to: 6 do: [:x|		4 to: 6 do: [:y| expectedExploredPositions add: x@y]].	expectedUnexploredPositions := terrain positions asSet copyWithoutAll: expectedExploredPositions.	self assert: bot unexploredPositions asSet  = expectedUnexploredPositions! !!BGSFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 18:44'!testNoMoveIfNoFrontier	|initialPosition|	map positions  do: [:aPoint| 		map emptyCellAt: aPoint].	self assert: map unexploredPositions isEmpty.	initialPosition := bot position.	bot step.	self assert: bot position = initialPosition! !!BGSNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:33'!assertBotPosition: expectedPosition andHeading: expectedHeading forUnexploredPosition: unexploredPosition	map addWallsAtPositions: map positions.	{5@5.	5@2. 5@3. 5@4.  	5@6. 5@7. 5@8.	2@5. 3@5. 4@5.	6@5. 7@5. 8@5} do: [:aPoint| 		map emptyCellAt: aPoint].	{5@1. 5@9. 1@5. 9@5. unexploredPosition} do: [:aPoint|		map markUnexploredCellAt: aPoint].	self assert: map frontierPositions size = 4.	bot step.	self assert: bot position = expectedPosition.	self assert: bot heading = expectedHeading.! !!BGSNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/30/2011 23:51'!robotClass	^BGSNearestFrontierExplorerRobot! !!BGSNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 1/10/2012 17:31'!testGoAroundObstaclesToNearestFrontier	map addWallsAtPositions: map positions.	{5@5. 6@4. 6@6. 7@5. 8@5} do: [:aPoint| 		map emptyCellAt: aPoint].	map markUnexploredCellAt: 9@5.	self assert: map frontierPositions size = 1.	3 timesRepeat: [bot step].	self assert: bot position = (8@5).	self assert: bot heading = (1@0).! !!BGSNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/12/2011 18:34'!testPathToAccessibleFrontier	|inaccessibleFrontierPosition targetFrontierPosition|	inaccessibleFrontierPosition := 7@4.	bot jumpTo: 5@4.	{terrain. map} do: [:grid|		grid cells do: [:cell| cell markUnexplored].		grid 			addWallAt: 4@3 extent: 3@1;			addWallAt: 4@3 extent: 1@7;			addWallAt: 6@3 extent: 1@7;			emptyCellsAt: 5@4 extent: 1@6;			emptyCellAt: inaccessibleFrontierPosition		].	targetFrontierPosition :=  bot pathToFrontier last.	self deny:  targetFrontierPosition = inaccessibleFrontierPosition.	self assert: targetFrontierPosition = (5@9)! !!BGSNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:33'!testTurnThenGoEastTowardsNearestFrontier	self assertBotPosition: 6@5 andHeading: 1@0 forUnexploredPosition: 8@5.! !!BGSNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:38'!testTurnThenGoNorthTowardsNearestFrontier	self assertBotPosition: 5@4 andHeading: 0@ -1 forUnexploredPosition: 5@2.! !!BGSNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:39'!testTurnThenGoSouthTowardsNearestFrontier	self assertBotPosition: 5@6 andHeading: 0@1 forUnexploredPosition: 5@8.! !!BGSNearestFrontierExplorerRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/1/2011 19:34'!testTurnThenGoWestTowardsNearestFrontier	self assertBotPosition: 4@5 andHeading: -1@0 forUnexploredPosition: 2@5.! !!BGSGridTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 09:41'!setUp 	super setUp.	grid := BGSGrid extent: 10@10! !!BGSGridTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/24/2011 15:41'!testAccessingInvalidPositions	{0@0. 0@10. 11@11. 10@0} do: [:position|		self shouldnt: [grid cellAt: position] raise: Error.		self deny: (grid isEmptyCellAt: position).	]! !!BGSGridTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/24/2011 18:08'!testAddingRobotBodyAtCellOccupiedByWall	| position wall botBody |	position := 3@3.	grid put: BGSWall new inCellAt: position.	wall := grid cellAt: position.	botBody := BGSRobotBody new.	grid put: botBody inCellAt: position.	self assert: (grid contentOfCellAt: position) == botBody! !!BGSGridTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/24/2011 18:05'!testAddingRobotBodyToEmptyCell	| botBody |	botBody := BGSRobotBody new.	grid put: botBody inCellAt: 3@3.	self assert: (grid contentOfCellAt: 3@3) == botBody! !!BGSGridTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 09:41'!testAllCellsAreEmptyByDefault	1 to: grid extent x do: [:x|		1 to: grid extent y do: [:y|			self assert: (grid isEmptyCellAt: x@y)]].		! !!BGSGridTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/24/2011 18:06'!testCellWithRobotIsNOTEmpty	| position |	position := 6@7.	grid put: BGSRobotBody new inCellAt: position.	self deny: (grid isEmptyCellAt: position)! !!BGSGridTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 09:41'!testPositionsAroundBottomLeftCell	| neighbors |	neighbors := grid positionsAround: 1@10.	self assert: neighbors asSet = {1@9. 2@9. 2@10. } asSet! !!BGSGridTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 09:41'!testPositionsAroundBottomRightCell	| neighbors |	neighbors := grid positionsAround: 10@10.	self assert: neighbors asSet = {9@9. 10@9. 9@10. } asSet! !!BGSGridTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 09:41'!testPositionsAroundMiddleCell	| neighbors |	neighbors := grid positionsAround: 4@4.	self assert: neighbors asSet = {3@3. 4@3. 5@3.  3@4. 5@4. 3@5. 4@5. 5@5} asSet! !!BGSGridTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 09:41'!testPositionsAroundTopLeftCell	| neighbors |	neighbors := grid positionsAround: 1@1.	self assert: neighbors asSet = {2@1. 1@2. 2@2. } asSet! !!BGSGridTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 09:41'!testPositionsAroundTopRightCell	| neighbors |	neighbors := grid positionsAround: 10@1.	self assert: neighbors asSet = {9@1. 9@2. 10@2. } asSet! !!BGSGridViewTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/10/2011 19:08'!setUp	super setUp.	grid := BGSGrid extent: 10@10.	gridView := BGSGridView on: grid.! !!BGSGridViewTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/25/2011 09:44'!testExtent	self assert: gridView extent = (121@121).	gridView grid: (BGSGrid extent: 100@100).	self assert: gridView extent = (1111@1111)		! !!BGSExplorationLoggerTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/8/2011 17:45'!initialExpectedLog	|expectedLogStream|	expectedLogStream := String new writeStream.	#(step frontiers unexplored 'robot1-position' 'robot1-heading') do: [:headerString|			expectedLogStream nextPutAll: headerString] 		separatedBy: [			expectedLogStream tab].	expectedLogStream cr.	{0. 3. 2496. 1@1. 0@ -1} do: [:initialValue|			expectedLogStream print: initialValue] 		separatedBy: [			expectedLogStream tab].	expectedLogStream cr.	^expectedLogStream contents! !!BGSExplorationLoggerTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/8/2011 17:27'!loggerClass 	^BGSExplorationLogger ! !!BGSExplorationLoggerTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/8/2011 17:31'!simulationClass 	^BGS1RobotFrontierExplorationSimulation! !!BGSExplorationLoggerTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/8/2011 17:34'!testInitialLog	self assert: logger allLog = self initialExpectedLog! !!BGSLoggerTest methodsFor: 'setUp-tearDown' stamp: 'NouryBouraqadi 12/8/2011 17:16'!loggerClass	^BGSLogger! !!BGSLoggerTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 18:10'!printLogHeaderOn: expectedLogStr botCount: expectedRobotCount	expectedLogStr nextPutAll: 'step'.	1 to: expectedRobotCount do: [ :number | 		expectedLogStr			tab;			nextPutAll: 'robot';			print: number;			nextPutAll: '-position';			tab;			nextPutAll: 'robot';			print: number;			nextPutAll: '-heading' ].	expectedLogStr cr! !!BGSLoggerTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 18:10'!printOn: expectedLogStr step:  step positions: expectedBotPositions 	expectedLogStr print: step.	expectedBotPositions		do: [ :position | 			expectedLogStr				tab;				print: position;				tab;				print: 0 @ -1 ].	expectedLogStr cr! !!BGSLoggerTest methodsFor: 'setUp-tearDown' stamp: 'NouryBouraqadi 12/8/2011 17:26'!setUp 	super setUp.	simulation := self simulationClass new.	logger := self loggerClass on: simulation! !!BGSLoggerTest methodsFor: 'setUp-tearDown' stamp: 'NouryBouraqadi 12/8/2011 17:16'!simulationClass	^BGSSimulationForTest! !!BGSLoggerTest methodsFor: 'setUp-tearDown' stamp: 'JulianGrigera 8/21/2015 19:23'!tearDown	super tearDown.	logger fileName asFileReference ensureDelete! !!BGSLoggerTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 18:06'!testInitialLogForASimulationWith1Robot	| expectedLogStr |	self assert: logger robots size = 1.	expectedLogStr := WriteStream on: String new.	self printLogHeaderOn: expectedLogStr botCount: 1.	self printOn: expectedLogStr step: 0 positions: {(1 @ 1)}.	self assert: logger allLog = expectedLogStr contents! !!BGSLoggerTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/22/2011 10:55'!testInitialLogForASimulationWith3Robots	| expectedLogStr |	2 to: 3 do: [ :botNumber | 		| bot botPosition |		bot := BGSRobot number: botNumber.		botPosition := botNumber @ botNumber.		bot jumpTo: botPosition in: simulation terrain.		simulation addRobot: bot ].	logger := BGSLogger on: simulation.	self assert: logger robots size = 3.	expectedLogStr := WriteStream on: String new.	self printLogHeaderOn: expectedLogStr botCount: 3.	self		printOn: expectedLogStr		step: 0		positions: {(1 @ 1). (2 @ 2). (3 @ 3)}.	self assert: logger allLog = expectedLogStr contents! !!BGSLoggerTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/6/2011 18:52'!testLogAfter3StepsForASimulationWith1Robot	| expectedLogStr |	self assert: logger robots size = 1.	3 timesRepeat: [ simulation step ].	self assert: logger stepCount = 3.	expectedLogStr := WriteStream on: String new.	self printLogHeaderOn: expectedLogStr botCount: 1.	(0 to: 3) do: [:step|		self printOn: expectedLogStr step: step positions: {(1 @ 1)}].	self assert: logger allLog = expectedLogStr contents! !!BGSRobotBodyTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/8/2011 11:07'!setUp	super setUp.	terrain := BGSGrid extent: 10@10.	botBody := BGSRobotBody new.	botBody jumpTo:  5@5 in: terrain! !!BGSRobotBodyTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/17/2011 20:41'!testCanNotMoveForwardOutsideTerrain	botBody position: 5@1.	3 timesRepeat: [botBody goForward.		self assert: botBody position = (5@1)].	! !!BGSRobotBodyTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/17/2011 20:43'!testGoOneCellForward	botBody goForward.	self assert: botBody position = (5@4).	botBody goForward.	self assert: botBody position = (5@3).	! !!BGSRobotBodyTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/11/2011 10:03'!testRetreivePartsByName	| sensor1 sensor2 |	sensor1 := BGSOmnidirectionalRangeSensor botBody: botBody name: #sensor1.	sensor2 := BGSOmnidirectionalRangeSensor botBody: botBody name: #sensor2.	self assert: (botBody part: #sensor1) == sensor1.	self assert: (botBody part: #sensor2) == sensor2.	! !!BGSRobotBodyTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/11/2011 10:14'!testRetreiveUnknownPart	self assert: (botBody part: #unknownPart) isNil	! !!BGSRobotBodyTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/17/2011 21:02'!testTurnLeftAndGoForward	{4@4. 4@5. 4@6. 5@6. 6@6. 6@5. 6@4. 5@4} do: [:expectedPosition|		botBody position: 5@5.		botBody turnLeft.		botBody goForward.		self assert: botBody position = expectedPosition	]! !!BGSRobotBodyTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/17/2011 21:14'!testTurnRightAndGoForward	 {(6@4). (6@5). (6@6). (5@6). (4@6). (4@5). (4@4). (5@4)} do: [:expectedPosition|		botBody position: 5@5.		botBody turnRight.		botBody goForward.		self assert: botBody position = expectedPosition	]! !!BGSRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/8/2011 11:07'!setUp 	super setUp.	terrain := BGSGrid extent: 10@10.	bot := BGSRobot new.	bot jumpTo: 5@5 in: terrain! !!BGSRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 18:18'!testGoForwardLessCellsThanAskedToStayInsideTerain	bot goForwardBy: 10.	self assert: bot position = (5@1)! !!BGSRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/24/2011 18:06'!testGoForwardUntilReachingAnObstacle	terrain put: BGSWall new inCellAt: 5@2. 	bot goForwardBy: 10.	self assert: bot position = (5@3)! !!BGSRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 18:14'!testGoSeveralCellsForward	bot goForwardBy: 3.	self assert: bot position = (5@2).	bot goForwardBy: 2.	self assert: bot position = (5@1).	! !!BGSRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 18:13'!testIdFromANumber	bot number: 243.	self assert: bot id == #robot243! !!BGSRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 18:13'!testIdStoredAsSymbolEvenIfStringProvided	bot id: 'myCoolRobot'.	self assert: bot id == #myCoolRobot! !!BGSRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 18:13'!testTurnLeftSeveralSteps	{4@6.  6@5. 4@4} do: [:expectedPosition|		bot jumpTo: 5@5.		bot turnLeftBy: 3.		bot goForward.		self assert: bot position = expectedPosition	]! !!BGSRobotTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/19/2011 18:14'!testTurnRightSeveralSteps	{6@6. 4@5. 6@4} do: [:expectedPosition|		bot jumpTo: 5@5.		bot turnRightBy: 3.		bot goForward.		self assert: bot position = expectedPosition	]! !!BGSSimulationParametrizationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 3/28/2012 10:38'!setUp	super setUp.	terrain := BGSExplorableTerrain new.	afterStopActionPerformed := false.	stopFlag := false.	robotsCount := 1.	robotsClass := BGSRobot.	simulation := BGSParametrizedExplorationSimulation 				terrain: terrain 				robotsClass: BGSRobot  				positions: {1@1} 				stopOn: [:sim| stopFlag] 				afterStopDo: [:sim| afterStopActionPerformed := true].! !!BGSSimulationParametrizationTest methodsFor: 'testing'!tearDown	super tearDown.	simulation pause! !!BGSSimulationParametrizationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 3/28/2012 10:32'!testAfterStopAction	simulation run.	(Delay forMilliseconds: 100) wait.	stopFlag := true.	(Delay forMilliseconds: 100) wait.	self assert: simulation autoStopConditionReached.	self assert: afterStopActionPerformed! !!BGSSimulationParametrizationTest methodsFor: 'testing'!testPauseDoesNotTriggerAfterStopAction	simulation run.	(Delay forMilliseconds: 100) wait.	simulation pause.	(Delay forMilliseconds: 100) wait.	self deny: simulation autoStopConditionReached.	self deny: afterStopActionPerformed! !!BGSSimulationParametrizationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 3/27/2012 11:50'!testRobotsClass	simulation robots do: [:bot|		self assert: (bot isKindOf: robotsClass)]! !!BGSSimulationParametrizationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 3/27/2012 12:12'!testRobotsCount	self assert: simulation robots size = robotsCount! !!BGSSimulationParametrizationTest methodsFor: 'testing'!testSimulationTerrainIsProvidedOnCreation	self assert: simulation terrain == terrain! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/9/2011 07:55'!setUp 	super setUp.	simulation := BGSSimulationForTest new.	robot := simulation robots first.	terrain := simulation terrain! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/22/2011 10:48'!testAccessRobotById	self assert: (simulation robot: #robot1) == robot.! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/18/2011 18:49'!testAddRobot	| newBot |	newBot := BGSRobot withId: #newBot.	simulation addRobot: newBot.	self assert: (simulation robots includes: newBot).	self assert: (simulation robot: #newBot) == newBot! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/22/2011 11:36'!testIsRunning	self deny: simulation isRunning.	simulation isPaused: false.	self assert: simulation isRunning.	simulation autoStopConditionFlag: true.	self deny: simulation isRunning.	! !!BGSSimulationTest methodsFor: 'testing' stamp: 'JulianGrigera 8/21/2015 19:25'!testRemoveRobot	simulation removeRobot: robot.	self deny: (simulation robots includes: robot).	self should: [ simulation robot: #robot1 ] raise: KeyNotFound! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/6/2011 18:52'!testReset	|wallPosition botInitialPosition botInitialHeading botFinalPosition|	botInitialPosition := robot position.	botInitialHeading := robot heading.	robot jumpTo: 4@3.	robot turnRightBy: 3.	robot goForwardBy: 2.	botFinalPosition := robot position.	self deny: botFinalPosition = botInitialPosition.	self deny: robot heading = botInitialHeading.	wallPosition := 8@7.	terrain addWallAt: wallPosition.	self deny: (terrain isEmptyCellAt: wallPosition).	simulation stepCount: 123.	simulation isPaused: false.	simulation reset.	robot := simulation robot: #robot1.	self assert: robot position = botInitialPosition.	self assert: robot heading = botInitialHeading.	self assert: (terrain isEmptyCellAt: wallPosition).	self deny: (terrain isEmptyCellAt: botInitialPosition).	self assert: (terrain contentOfCellAt: botInitialPosition) == robot body.	self assert: (terrain isEmptyCellAt: botFinalPosition).	self assert: simulation stepCount = 0.	self assert: simulation isPaused.! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/24/2011 18:14'!testRobotMoveToCellOccupiedByAWall	| targetPosition initialPosition wall|	targetPosition := 3@4.	terrain addWallAt: targetPosition.	wall := terrain contentOfCellAt: targetPosition.	initialPosition := robot position.	robot jumpTo: targetPosition.	self assert: robot position = initialPosition.	self assert: (terrain contentOfCellAt: targetPosition) == wall.	self assert: (terrain contentOfCellAt: initialPosition) == robot body! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/24/2011 18:14'!testRobotMoveToCellOccupiedByOtherRobot	| otherBotBody targetPosition initialPosition|	targetPosition := 3@4.	otherBotBody := BGSRobotBody new.	terrain put: otherBotBody inCellAt: targetPosition.	initialPosition := robot position.	robot jumpTo: targetPosition.	self assert: robot position = initialPosition.	self assert: (terrain contentOfCellAt: targetPosition) == otherBotBody.	self assert: (terrain contentOfCellAt: initialPosition) == robot body! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/24/2011 18:14'!testRobotMoveToCellOutsideTerrain	| initialPosition|	initialPosition := robot position.	{0@0. 0@10. 11@11. 10@0} do: [:targetPosition|		robot jumpTo: targetPosition.		self assert: robot position = initialPosition.		self assert: (terrain contentOfCellAt: initialPosition) == robot body		]! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/24/2011 18:14'!testRobotMoveToEmptyCell	| targetPosition initialPosition |	targetPosition := 3@4.	self assert: (terrain isEmptyCellAt: targetPosition).	initialPosition := robot position.	robot jumpTo: targetPosition.	self assert: robot position = targetPosition.	self deny: (terrain isEmptyCellAt: targetPosition).	self assert: (terrain contentOfCellAt: targetPosition) == robot body.	self assert: (terrain isEmptyCellAt: initialPosition)! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/9/2011 08:54'!testRobotPosition	self assert: robot position = (1@1)! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/6/2011 18:52'!testStepCounterIncremented	simulation step.	self assert: simulation stepCount = 1! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/6/2011 18:52'!testStepCounterIntiallyToZero	self assert: simulation stepCount = 0! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/9/2011 08:50'!testTerrainExtent	self assert: terrain extent = (10@10)! !!BGSSimulationTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/24/2011 18:15'!testTerrainIncludesRobot	self assert: (terrain contentOfCellAt: 1@1) == robot body! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 09:52'!assertCellsAreEmptyExceptAll: expectedWallPositions	| expectedEmptyPositions |	expectedWallPositions do: [ :position | self deny: (terrain isEmptyCellAt: position) ].	expectedEmptyPositions := terrain positions asArray copyWithoutAll: expectedWallPositions.	expectedEmptyPositions do: [ :position | self assert: (terrain isEmptyCellAt: position) ]! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 12/8/2011 11:07'!setUp 	super setUp.	terrain := BGSGrid extent: 10@10! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 09:53'!testAddBigWall	|expectedWallPositions|	terrain addWallAt: 1@1 extent: 4@4.	expectedWallPositions :={		1@1. 2@1. 3@1. 4@1.		1@2. 2@2. 3@2. 4@2.		1@3. 2@3. 3@3. 4@3.		1@4. 2@4. 3@4. 4@4	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 09:47'!testAddSmallWall	| wallPosition |	wallPosition := 3@6.	terrain addWallAt: wallPosition.	self assertCellsAreEmptyExceptAll: {wallPosition}! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 22:10'!testEmptyCells	|expectedWallPositions|	terrain addWallAt: 1@1 extent: 4@4.	terrain emptyCellsAt: 2@2 extent: 2@2.	expectedWallPositions :={		1@1. 2@1. 3@1. 4@1.		1@2.                  4@2.		1@3.                  4@3.		1@4. 2@4. 3@4. 4@4	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 19:22'!testHorizontalLineLeftToRight	| expectedWallPositions |	terrain addLineWallFrom: 5 @ 5 to: 8@5 width: 2.	expectedWallPositions := {		5@5. 6@5. 7@5. 8@5.		5@6. 6@6. 7@6. 8@6.	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 21:29'!testHorizontalLineRightToLeft	| expectedWallPositions |	terrain addLineWallFrom: 8 @ 5 to: 5@5 width: 2.	expectedWallPositions := {		5@5. 6@5. 7@5. 8@5.		5@6. 6@6. 7@6. 8@6.	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 10:55'!testLineWallLeftToRightBottomToTop	| expectedWallPositions |	terrain addLineWallFrom: 1 @ 4 to: 4@1 width: 3.	expectedWallPositions := {					4@1. 5@1. 6@1.				3@2. 4@2. 5@2.			2@3. 3@3. 4@3.		1@4. 2@4. 3@4.	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 21:27'!testLineWallLeftToRightBottomToTop2	| expectedWallPositions |	terrain addLineWallFrom: 1 @ 4 to: 2@1 width: 3.	expectedWallPositions := {			2@1. 3@1. 4@1.			2@2. 3@2. 4@2.		1@3. 2@3. 3@3.		1@4. 2@4. 3@4.	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions.! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 10:55'!testLineWallLeftToRightTopToBottom	| expectedWallPositions |	terrain addLineWallFrom: 1 @ 1 to: 4@ 4 width: 3.	expectedWallPositions := {		1@1. 2@1. 3@1.			2@2. 3@2. 4@2.				3@3. 4@3. 5@3. 					4@4. 5@4. 6@4.	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 21:28'!testLineWallLeftToRightTopToBottom2	| expectedWallPositions |	terrain addLineWallFrom: 2@1 to: 1 @ 4 width: 3.	expectedWallPositions := {			2@1. 3@1. 4@1.			2@2. 3@2. 4@2.		1@3. 2@3. 3@3.		1@4. 2@4. 3@4.	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions.! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 10:54'!testLineWallRightToLeftBottomToTop	| expectedWallPositions |	terrain addLineWallFrom: 4@4 to: 1@1 width: 3.	expectedWallPositions := {		1@1. 2@1. 3@1.			2@2. 3@2. 4@2.				3@3. 4@3. 5@3. 					4@4. 5@4. 6@4.	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 21:37'!testLineWallRightToLeftBottomToTop2	| expectedWallPositions |	terrain addLineWallFrom: 4@4 to: 3@1 width: 2.	expectedWallPositions := {		3@1. 4@1.		3@2. 4@2.			  4@3. 5@3. 			  4@4. 5@4.	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 17:17'!testLineWallRightToLeftTopToBottom	| expectedWallPositions |	terrain addLineWallFrom: 4@ 1 to: 1@4  width: 3.	expectedWallPositions := {					4@1. 5@1. 6@1.				3@2. 4@2. 5@2.			2@3. 3@3. 4@3.		1@4. 2@4. 3@4.	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions	! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 21:38'!testLineWallRightToLeftTopToBottom2	| expectedWallPositions |	terrain addLineWallFrom:  3@1 to: 4@4 width: 2.	expectedWallPositions := {		3@1. 4@1.		3@2. 4@2.			  4@3. 5@3. 			  4@4. 5@4.	}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 10:53'!testSmallLineWall	|expectedWallPositions|	terrain addLineWallFrom: 5@5 to: 5@5 width: 3.	expectedWallPositions := {5@5. 6@5. 7@5}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 17:29'!testVerticalLineWallBottomToTop	| expectedWallPositions |	terrain addLineWallFrom: 5 @ 6 to: 5@3 width: 2.	expectedWallPositions := {		5@3. 6@3.		5@4. 6@4.		5@5. 6@5.		5@6. 6@6.			}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTerrainTest methodsFor: 'testing' stamp: 'NouryBouraqadi 11/15/2011 17:24'!testVerticalLineWallTopToBottom	| expectedWallPositions |	terrain addLineWallFrom: 5 @ 3 to: 5@6 width: 2.	expectedWallPositions := {		5@3. 6@3.		5@4. 6@4.		5@5. 6@5.		5@6. 6@6.			}.	self assertCellsAreEmptyExceptAll: expectedWallPositions! !!BGSTestCoverageDefinition class methodsFor: 'coverage' stamp: 'NouryBouraqadi 11/25/2011 16:37'!packageNamesUnderTest	^#('BotGridSimulator')! !!BGSTestCoverageDefinition class methodsFor: 'coverage' stamp: 'NouryBouraqadi 12/16/2011 17:44'!testPackagesForContinuousIntegration	^SystemOrganization categories select: [:categoryName|		'BotGridSimulator*Test*' match: categoryName]! !"BOSS"!!BGSArenaWindow commentStamp: 'federicobalaguer 9/28/2015 13:45' prior: 0!BGSArenaWindow beginnerViewOn: (OnTheFlyConfigurableSimulation endlessWalkingBrush).BGSArenaWindow beginnerViewOn: (OnTheFlyConfigurableSimulation batteryWalkingBrush).BGSArenaWindow expertViewOn: (OnTheFlyConfigurableSimulation endlessWalkingBrush).BGSArenaWindow expertViewOn: (OnTheFlyConfigurableSimulation batteryWalkingBrush).!!MethodList commentStamp: 'ArturoZambrano 8/24/2014 21:19' prior: 0!A MethodList  is part of the MinimalBrowser, it lists the methods for a class.!!MinimalBrowser commentStamp: 'ArturoZambrano 8/24/2014 21:20' prior: 0!MinimalBrowser shows the definition of instance methods for a given class. It depends on Spec.!!OTFRobot commentStamp: 'federicobalaguer 7/10/2014 12:03' prior: 0!OTFRobot (On-The-Fly Robot) works within OnTheFlySimulation!!WalkingBrushRobot commentStamp: '<historical>' prior: 0!I am a robot and I am able to do simple things like move through a certain space, leaving marks of the paths I am doing. I have a battery that consumes itself according to my moves, and can be recharged at every moment.!!EmptyBatteryError commentStamp: '<historical>' prior: 0!I represent the error situation when the robot tries to move without enough battery charge.!!Battery commentStamp: '<historical>' prior: 0!I represent the robot's battery. I have a capacity and a charge that decreases, and I can recharge myself.!!BrushState commentStamp: '<historical>' prior: 0!Represento un posible estado en el que se encuentre el robot del que formo parte.!!BrushDown commentStamp: '<historical>' prior: 0!I represent the state of a robot in which the brush is down.!!BrushUp commentStamp: '<historical>' prior: 0!I represent the state of a robot in which the brush is up.!!EndlessBattery commentStamp: 'federicobalaguer 7/11/2014 14:55' prior: 0!An EndlessBattery is a battery with infinite charge!!BGSCastleWall methodsFor: 'as yet unclassified' stamp: 'DiegoTorres 8/30/2014 13:56'!bot! !!BGSArenaWindow commentStamp: 'federicobalaguer 9/28/2015 13:45' prior: 34040513!BGSArenaWindow beginnerViewOn: (OnTheFlyConfigurableSimulation endlessWalkingBrush).BGSArenaWindow beginnerViewOn: (OnTheFlyConfigurableSimulation batteryWalkingBrush).BGSArenaWindow expertViewOn: (OnTheFlyConfigurableSimulation endlessWalkingBrush).BGSArenaWindow expertViewOn: (OnTheFlyConfigurableSimulation batteryWalkingBrush).!!BGSArenaWindow class methodsFor: 'instance creation' stamp: 'federicobalaguer 8/20/2014 09:24'!basicViewOn: aSimulation	^self on: aSimulation terrainCellExtent: self defaultGridCellExtent factory: (BasicArenaBehavior new)! !!BGSArenaWindow class methodsFor: 'instance creation' stamp: 'federicobalaguer 8/20/2014 13:09'!beginnerViewOn: aSimulation	^self on: aSimulation terrainCellExtent: self defaultGridCellExtent ! !!BGSArenaWindow class methodsFor: 'instance creation' stamp: 'FedericoBalaguer 5/4/2012 10:29'!defaultGridCellExtent 	^10@10! !!BGSArenaWindow class methodsFor: 'instance creation' stamp: 'federicobalaguer 8/20/2014 09:24'!expertViewOn: aSimulation	^ self on: aSimulation terrainCellExtent: self defaultGridCellExtent factory: EnhancedArenaBehavior new! !!BGSArenaWindow class methodsFor: 'instance creation' stamp: 'federicobalaguer 8/20/2014 09:24'!on: aSimulation terrainCellExtent: aPoint	^ self on: aSimulation terrainCellExtent: aPoint factory: BasicArenaBehavior new! !!BGSArenaWindow class methodsFor: 'instance creation' stamp: 'federicobalaguer 8/14/2014 15:19'!on: aSimulation terrainCellExtent: aPoint factory: aFactory	^ self new		factory: aFactory;		gridCellExtent: aPoint;		simulation: aSimulation;			openInWorld;		yourself! !!BGSArenaWindow methodsFor: 'initialize-release' stamp: 'federicobalaguer 8/26/2014 16:40'!addBinding: aSymbol object: anObject	bindings at: aSymbol put: anObject! !!BGSArenaWindow methodsFor: 'initialize-release' stamp: 'federicobalaguer 8/14/2014 15:15'!addButtonsToPanel: panel	^factory addButtonsToPanel: panel of: self ! !!BGSArenaWindow methodsFor: 'initialize-release' stamp: 'FedericoBalaguer 12/6/2011 18:58'!addCountersToPanel: panel 	| stepsView |	self stepCounterMorph: (LabelMorph contents: '0').	stepsView := self wrapMorph: self stepCounterMorph andAddLabel: 'Steps:'. 	panel 		addMorph: stepsView		fullFrame: (LayoutFrame 				fractions: (0 @ 0 corner: 1 @ 0)				offsets: (4 @ 4 corner: -8 @ 44))! !!BGSArenaWindow methodsFor: 'callbacks' stamp: 'Gabriela 10/6/2015 20:58'!addRobot	| aName |	aName := self textEntry: 'Enter a new name' title: 'Enter Robot Name'.	aName ifNil: [ ^ self ].	bindings		at: aName		ifPresent: [ :robot | self alert: 'A Robot named: ' , aName , ' already exists. Please, choose another name' title: 'Robot creation error' ]		ifAbsent: [ self addRobotAndBinding: aName ]! !!BGSArenaWindow methodsFor: 'callbacks' stamp: 'federicobalaguer 8/25/2014 22:55'!addRobotAndBinding: aName	| robot |	robot := simulation createAndDeployRobot: aName.	bindings at: aName put: robot! !!BGSArenaWindow methodsFor: 'callbacks' stamp: 'Gabriela 10/6/2015 20:58'!addRobotOnPosition: cellPosition	| aName |	aName := self textEntry: 'Enter a new name' title: 'Enter Robot Name'.	aName ifNil: [ ^ self ].	bindings		at: aName		ifPresent: [ :robot | self alert: 'A Robot named: ' , aName , ' already exists. Please, choose another name' title: 'Robot creation error' ]		ifAbsent: [ bindings at: aName put: (simulation createAndDeployRobot: aName position: cellPosition) ]! !!BGSArenaWindow methodsFor: 'initialize-release' stamp: 'federicobalaguer 8/27/2014 12:39'!bindings	bindings ifNil: [ bindings := Dictionary new ].	^ bindings! !!BGSArenaWindow methodsFor: 'callbacks' stamp: 'federicobalaguer 8/25/2014 17:15'!browseAvailableObjects	bindings inspect! !!BGSArenaWindow methodsFor: 'private ' stamp: 'FedericoBalaguer 12/13/2011 23:33'!buttonsWidth	^150! !!BGSArenaWindow methodsFor: 'testing' stamp: 'FedericoBalaguer 11/22/2011 11:25'!canResetSimulation	^self simulation isRunning not! !!BGSArenaWindow methodsFor: 'initialize-release' stamp: 'federicobalaguer 8/27/2014 12:38'!cleanBindings	self bindings removeAll.	^ bindings! !!BGSArenaWindow methodsFor: 'displaying' stamp: 'federicobalaguer 8/19/2014 16:23'!displayGridView	| newExtent deltaWidth board deltaHeight |	board := AlignmentMorph newRow.	board extent: self gridView extent + (self buttonsWidth @ 0).	self gridView container: self.	board addMorphBack: self newControlPanelMorph.	board addMorphBack: self gridView.	deltaWidth := 2 * (self borderWidth + self class borderWidth).	deltaHeight := 2 * (self borderWidth + self class borderWidth) + self labelHeight.	newExtent := board fullBounds extent + (deltaWidth @ deltaHeight).	self extent: newExtent.	self addMorph: board frame: (0 @ 0 extent: 1 @ 1)! !!BGSArenaWindow methodsFor: 'accessing' stamp: 'federicobalaguer 8/14/2014 15:14'!factory: aFactory	factory := aFactory! !!BGSArenaWindow methodsFor: 'accessing' stamp: 'FedericoBalaguer 5/4/2012 10:27'!gridCellExtent	^ gridCellExtent! !!BGSArenaWindow methodsFor: 'accessing' stamp: 'FedericoBalaguer 5/4/2012 10:27'!gridCellExtent: anObject	gridCellExtent := anObject! !!BGSArenaWindow methodsFor: 'private ' stamp: 'federicobalaguer 8/6/2014 12:37'!gridViewClass	^BotArenaGridView ! !!BGSArenaWindow methodsFor: 'callbacks' stamp: 'federicobalaguer 8/20/2014 09:44'!handleRedButtonOnEmptyCell: cellPosition	factory handleRedButtonOnEmptyCell: cellPosition window: self! !!BGSArenaWindow methodsFor: 'callbacks' stamp: 'federicobalaguer 8/20/2014 10:50'!handleYellowButtonOnBot: aRobot	factory handleYellowButtonOnBot: aRobot window: self	! !!BGSArenaWindow methodsFor: 'testing' stamp: 'federicobalaguer 7/3/2014 13:40'!hasBrowser	^ browser isNil! !!BGSArenaWindow methodsFor: 'testing' stamp: 'federicobalaguer 8/25/2014 17:06'!hasWorkspace	^ false! !!BGSArenaWindow methodsFor: 'private ' stamp: 'federicobalaguer 8/25/2014 17:10'!initializeWorkspaceBindings: wrkspace	wrkspace setBindings: bindings! !!BGSArenaWindow methodsFor: 'private ' stamp: 'federicobalaguer 8/25/2014 17:03'!initializeWorkspaceContent: wrkspace	wrkspace setContent: self workspaceContent! !!BGSArenaWindow methodsFor: 'initialize-release' stamp: 'FedericoBalaguer 12/13/2011 22:46'!newControlPanelMorph	| panel |	panel := AlignmentMorph newColumn.	panel color: Color darkGray.	panel extent: self buttonsWidth @ self gridView extent y.	self addCountersToPanel: panel.	self addButtonsToPanel: panel.	^ panel! !!BGSArenaWindow methodsFor: 'private ' stamp: 'FedericoBalaguer 11/12/2011 17:45'!offButtonColor 	^Color white! !!BGSArenaWindow methodsFor: 'private ' stamp: 'FedericoBalaguer 11/12/2011 17:45'!onButtonColor 	^Color green ! !!BGSArenaWindow methodsFor: 'callbacks' stamp: 'federicobalaguer 10/6/2015 09:57'!openBrowser	Smalltalk tools browser fullOnClass: self simulation robotClass! !!BGSArenaWindow methodsFor: 'callbacks' stamp: 'ArturoZambrano 8/30/2014 20:16'!openBrowserOnRobot	(browser := MinimalBrowser on: self simulation robotClass) openWithSpec! !!BGSArenaWindow methodsFor: 'callbacks' stamp: 'federicobalaguer 8/27/2014 12:20'!openWorkspace	| wrkspace |	wrkspace := Workspace new.	wrkspace openLabel: 'Robot Arena Workspace'.	self initializeWorkspaceBindings: wrkspace.	^ wrkspace ! !!BGSArenaWindow methodsFor: 'callbacks' stamp: 'federicobalaguer 8/27/2014 12:15'!openWorkspaceWithContent	self initializeWorkspaceContent: self openWorkspace! !!BGSArenaWindow methodsFor: 'callbacks' stamp: 'federicobalaguer 8/19/2014 16:05'!resetSimulation	| shouldReset |	self canResetSimulation		ifFalse: [ ^ self ].	shouldReset := self proceed: 'Do you really want to reset the simulation?' title: 'Reset simulation?'.	shouldReset		ifFalse: [ ^ self ].	factory resetSimulation: self! !!BGSArenaWindow methodsFor: 'accessing' stamp: 'FedericoBalaguer 11/10/2011 22:31'!simulation	^ simulation! !!BGSArenaWindow methodsFor: 'accessing' stamp: 'federicobalaguer 8/27/2014 11:40'!simulation: newSimulation	simulation := newSimulation.	simulation addDependent: self.	self displayGrid: simulation terrain cellExtent: self gridCellExtent.	factory createAndDeployRobotsOn: simulation from: self.	self update: simulation! !!BGSArenaWindow methodsFor: 'displaying' stamp: 'FedericoBalaguer 11/12/2011 17:20'!simulationStatusString	self simulation autoStopConditionReached ifTrue: [^'Stop condition reached'].	self simulation isPaused ifTrue: [^'Paused'].	^'Running'! !!BGSArenaWindow methodsFor: 'accessing' stamp: 'FedericoBalaguer 11/10/2011 22:31'!stepCounterMorph	^ stepCounterMorph! !!BGSArenaWindow methodsFor: 'accessing' stamp: 'FedericoBalaguer 11/10/2011 22:31'!stepCounterMorph: anObject	stepCounterMorph := anObject! !!BGSArenaWindow methodsFor: 'displaying' stamp: 'FedericoBalaguer 12/13/2011 23:03'!update: anObject	super update: anObject.	self setLabel: self simulation name, ' - ', self simulationStatusString.	self stepCounterMorph contents: self simulation stepCount printString.! !!BGSArenaWindow methodsFor: 'private ' stamp: 'federicobalaguer 7/11/2014 16:35'!workspaceContent	| wst |	wst := WriteStream on: String new.	wst		nextPut: $";		nextPutAll: 'La forma de indicarle a un objeto que hacer, es mediante el envío de mensajes.';		nextPut: $";		cr;		cr;		nextPut: $";		nextPutAll: ' Para que el robot se mueva 10 celdas, le enviamos a robotech el mensaje #move: con parámetro 10';		nextPut: $";		cr;		nextPutAll: 'robotech move: 10.';		cr;		cr;		nextPut: $";		nextPutAll:				' Para que el robot se oriente hacia la derecha, le enviamos a robotech el mensaje #direction: con parámetro 90';		nextPut: $";		cr;		nextPutAll: 'robotech direction: 90.';		cr;		cr;		nextPut: $";		nextPutAll: 'Podemos enviarle a un objeto una serie de mensajes en cascada utilizando ;';		nextPut: $";		cr;		nextPutAll:				'robotech brushDown; direction: 0; move: 3; direction: 90; move: 3; direction: 180; move: 3; direction: 270; move: 3.'.	^ wst contents! !!BGSArenaWindow methodsFor: 'initialize-release' stamp: 'FedericoBalaguer 11/13/2011 11:56'!wrapMorph: aMorph andAddLabel: aString    "creates a wrapping panel for aMorph with  a label above it"    | column strM |    column := AlignmentMorph newColumn                wrapCentering: #topLeft;                cellPositioning: #topLeft;                hResizing: #spaceFill;                vResizing: #shrinkWrap;                borderWidth: 2;                layoutInset: 5;                color: Color transparent;                useRoundedCorners;                borderStyle: (BorderStyle complexAltInset width: 2).    column addMorph: aMorph.    strM := StringMorph contents: aString.    strM color: Color veryVeryLightGray.    column addMorph: strM.    ^ column ! !!BGSCastleExample methodsFor: 'as yet unclassified' stamp: 'DiegoTorres 8/30/2014 13:55'!addWallAt: origin extent: widthAndHeight	| corner |	corner := origin + widthAndHeight - 1.	origin x to: corner x do: [:x|		origin y to: corner y do: [:y|			self put: BGSCastleWall new inCellAt: x@y]].	self changed! !!BGSCastleExample methodsFor: 'as yet unclassified' stamp: 'DiegoTorres 9/1/2014 11:40'!buildWalls	"Left eye"		self addWallAt: 20@20 extent: 3@3.	self addWallAt: 30@20 extent: 3@3.				self addWallAt: 30@30 extent: 3@3.		self addWallAt: 20@30 extent: 3@3.		self addWallAt: 23@23 extent:7@7.	! !!MethodList commentStamp: 'ArturoZambrano 8/24/2014 21:19' prior: 34040922!A MethodList  is part of the MinimalBrowser, it lists the methods for a class.!!MethodList class methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/11/2014 23:41'!defaultSpec	<spec: #default>	^ SpecLayout composed		newColumn: [ :column | 					column						add: #label height: self toolbarHeight;						add: #protocols ];		yourself! !!MethodList methodsFor: 'as yet unclassified' stamp: 'FedericoBalaguer 8/21/2015 16:14'!initializeWidgets	protocols := self newList.	label := self newLabel.	label label: 'Protocol'.	protocols displayBlock: [ :m | m selector  ].	self focusOrder add: protocols! !!MethodList methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/11/2014 23:41'!items:aCollection protocols items:aCollection.! !!MethodList methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/11/2014 23:41'!label ^label! !!MethodList methodsFor: 'as yet unclassified' stamp: 'JulianGrigera 8/21/2015 19:08'!label: aString	label label: aString! !!MethodList methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/11/2014 23:41'!protocols ^protocols! !!MethodList methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/11/2014 23:41'!resetSelection protocols resetSelection ! !!MethodList methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/11/2014 23:41'!text:aString   label text:aString.! !!MethodList methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/11/2014 23:41'!title  ^'Art-Protocol Widget tutorial'! !!MethodList methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/11/2014 23:41'!whenSelectedItemChanged: aBlock	protocols whenSelectedItemChanged: aBlock! !!MinimalBrowser commentStamp: 'ArturoZambrano 8/24/2014 21:20' prior: 34041076!MinimalBrowser shows the definition of instance methods for a given class. It depends on Spec.!!MinimalBrowser class methodsFor: 'spec' stamp: 'ArturoZambrano 8/11/2014 23:09'!defaultSpec	<spec: #default>	^ SpecLayout composed		newColumn: [ :col | 					col						add: #list;						add: #text ];		yourself! !!MinimalBrowser class methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/30/2014 20:20'!on:aClass ^self basicNew		klass: aClass; initialize;		yourself! !!MinimalBrowser methodsFor: 'protocol' stamp: 'ArturoZambrano 8/11/2014 15:13'!initialExtent^ 750@600! !!MinimalBrowser methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/30/2014 20:15'!initializePresenter	list		whenSelectedItemChanged: [ :item | item ifNil: [ text text: '' ] ifNotNil: [ text text: (klass methodNamed: item) sourceCode ] ].	text		whenTextIsAccepted: [ :newText | 		       klass compile: newText.				self updateMessagesAndCode.			]! !!MinimalBrowser methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/30/2014 20:14'!initializeWidgets	text := self newText.	list := self instantiate: MethodList.	self updateMessagesAndCode.	self focusOrder		add: list;		add: text! !!MinimalBrowser methodsFor: 'protocol' stamp: 'ArturoZambrano 8/11/2014 23:30'!klass: aClass klass:= aClass.! !!MinimalBrowser methodsFor: 'protocol' stamp: 'ArturoZambrano 8/11/2014 23:10'!list^ list! !!MinimalBrowser methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/11/2014 15:13'!text	   ^text	! !!MinimalBrowser methodsFor: 'protocol' stamp: 'ArturoZambrano 8/13/2014 21:27'!title^ 'MiniBrowser on: ', klass name.! !!MinimalBrowser methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/30/2014 20:14'!updateMessagesAndCode	list items: klass methodDictionary keys sorted.	list label: 'Methods'.	list protocols displayBlock: [ :m | m ].	text behavior: klass.	text aboutToStyle: true! !!CastleSimulation methodsFor: 'as yet unclassified' stamp: 'federicobalaguer 10/6/2015 16:39'!terrainClass	^ BGSCastleExample! !!OnTheFlyConfigurableSimulation class methodsFor: 'instance creation' stamp: 'federicobalaguer 8/11/2014 15:54'!batteryWalkingBrush	^ self basicNew		robotClass: WalkingBrushRobot constructorSelector: #withBattery;		initialize;		yourself! !!OnTheFlyConfigurableSimulation class methodsFor: 'instance creation' stamp: 'federicobalaguer 10/6/2015 17:04'!batteryWirelessBrush	^ self basicNew		robotClass: WalkingBrushWirelessRobot constructorSelector: #withBattery;		initialize;		yourself! !!OnTheFlyConfigurableSimulation class methodsFor: 'instance creation' stamp: 'federicobalaguer 8/11/2014 15:54'!endlessWalkingBrush	^ self basicNew		robotClass: WalkingBrushRobot constructorSelector: #withoutBattery;		initialize;		yourself! !!OnTheFlyConfigurableSimulation class methodsFor: 'instance creation' stamp: 'federicobalaguer 8/11/2014 15:54'!randomTrace	^ self basicNew		robotClass: RandomTraceRobot;		initialize;		yourself! !!OnTheFlyConfigurableSimulation methodsFor: 'testing' stamp: 'federicobalaguer 8/19/2014 14:46'!autoStopConditionReached	^self robots allSatisfy: [ :each| each isIdle  ]! !!OnTheFlyConfigurableSimulation methodsFor: 'initialize - release' stamp: 'federicobalaguer 10/6/2015 16:40'!createAndDeployRobot: aName	^self createAndDeployRobot: aName position:  (self terrain emptyCellPositions atRandom).! !!OnTheFlyConfigurableSimulation methodsFor: 'initialize - release' stamp: 'federicobalaguer 8/19/2014 15:54'!createAndDeployRobot: aName position: aPosition	| bot |	bot := self robotWithId: aName asSymbol.	self addRobot: bot.	bot rangeSensorBelt.	bot jumpTo: aPosition in: self terrain.	bot addDependent: self.	^ bot! !!OnTheFlyConfigurableSimulation methodsFor: 'initialize - release' stamp: 'federicobalaguer 8/12/2014 23:00'!createRobots	! !!OnTheFlyConfigurableSimulation methodsFor: 'initialize - release' stamp: 'federicobalaguer 8/12/2014 23:00'!deployRobots	! !!OnTheFlyConfigurableSimulation methodsFor: 'initialize - release' stamp: 'federicobalaguer 8/19/2014 08:56'!initialize	super initialize.	lastBotNumber := 0! !!OnTheFlyConfigurableSimulation methodsFor: 'initialize - release' stamp: 'federicobalaguer 8/11/2014 15:54'!robotClass	^ robotClass! !!OnTheFlyConfigurableSimulation methodsFor: 'initialize - release' stamp: 'federicobalaguer 8/11/2014 15:54'!robotClass: aClass	self robotClass: aClass constructorSelector: #new! !!OnTheFlyConfigurableSimulation methodsFor: 'initialize - release' stamp: 'federicobalaguer 8/11/2014 15:54'!robotClass: aClass constructorSelector: aSymbol	robotClass := aClass.	constructorSelector := aSymbol! !!OnTheFlyConfigurableSimulation methodsFor: 'initialize - release' stamp: 'federicobalaguer 8/12/2014 22:56'!robotCount	^ 0! !!OnTheFlyConfigurableSimulation methodsFor: 'initialize - release' stamp: 'federicobalaguer 8/19/2014 15:44'!robotWithId: botNumber	^ (robotClass perform: constructorSelector)		id: botNumber;		yourself! !!OnTheFlyConfigurableSimulation methodsFor: 'stepping' stamp: 'federicobalaguer 8/28/2014 14:11'!run	pauseFlagLock		critical: [ 			self isPaused				ifFalse: [ ^ self ].			self isPaused: false ].	[ self runLoop ] forkAt: Processor userInterruptPriority! !!OnTheFlyConfigurableSimulation methodsFor: 'stepping' stamp: 'federicobalaguer 8/28/2014 16:16'!step	self stepCount: self stepCount + 1.	self robots		do: [ :each | 			each hasStepsToGo				ifTrue: [ each step ] ]! !!OnTheFlyConfigurableSimulation methodsFor: 'dependencies' stamp: 'federicobalaguer 8/19/2014 15:05'!update: aRobot	aRobot hasStepsToGo		ifFalse: [ self pause ]		ifTrue: [ 			self isPaused				ifTrue: [ self run ] ]! !!BotArenaGridView methodsFor: 'initialize - release' stamp: 'federicobalaguer 8/6/2014 12:29'!cellAtAbsolutePosition: position	| clickedCell topLeftCellOriginPosition |	topLeftCellOriginPosition := (self boxForCellAt: (1@1)) origin.	clickedCell := ((position - topLeftCellOriginPosition) // self cellFrameExtent).		clickedCell := clickedCell + (1@1).	^clickedCell.	! !!BotArenaGridView methodsFor: 'initialize - release' stamp: 'federicobalaguer 8/19/2014 16:19'!container: arenaWindow	container := arenaWindow! !!BotArenaGridView methodsFor: 'initialize - release' stamp: 'federicobalaguer 10/6/2015 13:50'!handleEvent: evt position: cellPosition cellContent: clickedCellContent	evt redButtonPressed		ifTrue: [ 			clickedCellContent isNil				ifTrue: [ container handleRedButtonOnEmptyCell: cellPosition ]				ifFalse: [ clickedCellContent bot inspect ] ].	evt yellowButtonPressed		ifTrue: [ 			clickedCellContent notNil				ifTrue: [ container handleYellowButtonOnBot: clickedCellContent bot ] ]! !!BotArenaGridView methodsFor: 'initialize - release' stamp: 'federicobalaguer 9/28/2015 23:52'!initialize 	super initialize.	self on: #click send: #mouseDownEvt: to: self.	! !!BotArenaGridView methodsFor: 'initialize - release' stamp: 'federicobalaguer 10/6/2015 13:50'!mouseDownEvt: evt	| cellPosition clickedCellContent |	cellPosition := self cellAtAbsolutePosition: evt position.	clickedCellContent := self grid contentOfCellAt: cellPosition.	(clickedCellContent isNil or: [ clickedCellContent isRobotBody ])		ifTrue: [ self handleEvent: evt position: cellPosition cellContent: clickedCellContent ]! !!OTFRobot commentStamp: 'federicobalaguer 7/10/2014 12:03' prior: 34041243!OTFRobot (On-The-Fly Robot) works within OnTheFlySimulation!!OTFRobot methodsFor: 'private' stamp: 'federicobalaguer 8/28/2014 15:04'!addCommand: otfCommand	semaphore wait.	commands addLast: otfCommand.	Transcript		show: commands size;		cr.	self changed.	Processor yield! !!OTFRobot methodsFor: 'initialize-release' stamp: 'federicobalaguer 7/4/2014 14:37'!bodyClass 	^BGSRobotBodyWithFrontRangeSensor "BGSRangeSensorBeltRobotBody" ! !!OTFRobot methodsFor: 'stepping' stamp: 'federicobalaguer 7/10/2014 16:06'!currentCommand	| first |	^ (first := commands first) stepsToGo > 0		ifTrue: [ first ]		ifFalse: [ self error: 'Missing Command' ]! !!OTFRobot methodsFor: 'private' stamp: 'federicobalaguer 7/11/2014 16:40'!directionMap	^ Dictionary new		at: 0 put: 0 @ -1;		at: 45 put: 1 @ -1;		at: 90 put: 1 @ 0;		at: 135 put: 1 @ 1;		at: 180 put: 0 @ 1;		at: 225 put: -1 @ 1;		at: 270 put: -1 @ 0;		at: 315 put: -1 @ -1;		at: 360 put: 0 @ -1;		yourself! !!OTFRobot methodsFor: 'stepping' stamp: 'federicobalaguer 7/10/2014 15:34'!goForward	self hasStepsToGo 		ifTrue: [ super goForward ]! !!OTFRobot methodsFor: 'stepping' stamp: 'federicobalaguer 7/10/2014 15:33'!handleStep: aDistance	! !!OTFRobot methodsFor: 'testing' stamp: 'federicobalaguer 7/10/2014 16:12'!hasStepsToGo	^ (commands notEmpty) and: [self currentCommand hasStepsToGo ]! !!OTFRobot methodsFor: 'private' stamp: 'federicobalaguer 8/12/2014 13:39'!headingFromDirection: aDirection	^ self heading: (self directionMap at: aDirection)! !!OTFRobot methodsFor: 'initialize-release' stamp: 'federicobalaguer 8/28/2014 15:02'!initialize	super initialize.	commands := OrderedCollection new. 	semaphore := Semaphore forMutualExclusion . 	body heading: 0 @ -1! !!OTFRobot methodsFor: 'testing' stamp: 'federicobalaguer 8/19/2014 14:46'!isIdle	^ self hasStepsToGo not! !!OTFRobot methodsFor: 'initialize-release' stamp: 'federicobalaguer 7/4/2014 14:37'!jumpTo: aPoint in: terrain	super jumpTo: aPoint in: terrain.	self addDependent: terrain.	self changed! !!OTFRobot methodsFor: 'exploring' stamp: 'federicobalaguer 7/4/2014 14:37'!rangeSensorBelt	^self body part: #rangeSensorBelt! !!OTFRobot methodsFor: 'exploring' stamp: 'federicobalaguer 7/4/2014 14:37'!sensedPositions	^self rangeSensorBelt sensedPositions! !!OTFRobot methodsFor: 'private' stamp: 'federicobalaguer 8/12/2014 16:04'!setDirection: aDirection	self addCommand: (OTFCommand actionBlock: [ self headingFromDirection: aDirection ])! !!OTFRobot methodsFor: 'private' stamp: 'federicobalaguer 10/5/2015 15:23'!setStepsToGo: aNumber	aNumber > 0		ifTrue: [ self addCommand: (OTFCommand actionBlock: [ self goForward ] times: aNumber) ]! !!OTFRobot methodsFor: 'stepping' stamp: 'federicobalaguer 8/28/2014 15:16'!step	| cmd |	(cmd := self currentCommand) executeCommand.	self handleStep: 1.	cmd hasStepsToGo		ifFalse: [ 			commands remove: cmd.			semaphore signal.			Transcript				show: 'Command removed';				cr ].	self changed! !!WalkingBrushRobot commentStamp: '<historical>' prior: 34041362!I am a robot and I am able to do simple things like move through a certain space, leaving marks of the paths I am doing. I have a battery that consumes itself according to my moves, and can be recharged at every moment.!!WalkingBrushRobot class methodsFor: 'instance creation' stamp: 'federicobalaguer 7/11/2014 19:37'!newWithPosition: aPosition	^ self new		position: aPosition;		battery: Battery fullyCharged;		yourself! !!WalkingBrushRobot class methodsFor: 'instance creation' stamp: 'federicobalaguer 7/11/2014 19:37'!withBattery	^ self new		battery: Battery fullyCharged ;		yourself! !!WalkingBrushRobot class methodsFor: 'instance creation' stamp: 'federicobalaguer 7/11/2014 15:00'!withoutBattery	^ self new		battery: EndlessBattery new;		yourself! !!WalkingBrushRobot methodsFor: 'battery' stamp: 'NahuelGarbezza 12/9/2012 18:21'!battery	^ battery! !!WalkingBrushRobot methodsFor: 'battery' stamp: 'NahuelGarbezza 12/9/2012 18:21'!battery: aBattery	battery := aBattery! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'federicobalaguer 8/25/2014 16:23'!brushDown	self setBrushCommand: [ self state brushDownFor: self ]! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'federicobalaguer 8/25/2014 16:23'!brushUp	self setBrushCommand: [ self state brushUpFor: self ]! !!WalkingBrushRobot methodsFor: 'direction' stamp: 'federicobalaguer 7/8/2014 13:14'!direction	^ self directionMap keyAtValue: self heading! !!WalkingBrushRobot methodsFor: 'direction' stamp: 'federicobalaguer 8/25/2014 23:16'!direction: aDirection	"aDirection should be 0, 45, 90,  135, 180, 225, 270, 315"	(aDirection \\ 45 = 0 and: [ aDirection between: 0 and: 360 ])		ifTrue: [ self setDirection: aDirection ]! !!WalkingBrushRobot methodsFor: 'direction' stamp: 'federicobalaguer 7/7/2014 23:44'!east	self direction: 90! !!WalkingBrushRobot methodsFor: 'private' stamp: 'federicobalaguer 7/10/2014 15:33'!handleStep: aDistance	self state tracePositionFor: self.	self battery consume: aDistance! !!WalkingBrushRobot methodsFor: 'private' stamp: 'NahuelGarbezza 12/9/2012 18:36'!initialState	^BrushUp new! !!WalkingBrushRobot methodsFor: 'initialize-release' stamp: 'federicobalaguer 8/12/2014 13:40'!initialize	super initialize.		self state: self initialState.	self headingFromDirection: 0.	^ self! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'NahuelGarbezza 12/9/2012 18:33'!isBrushDown	^self state isDown! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'NahuelGarbezza 12/9/2012 18:33'!isBrushUp	^self state isUp! !!WalkingBrushRobot methodsFor: 'positioning' stamp: 'federicobalaguer 7/10/2014 17:15'!move: aDistance	(self battery canConsume: aDistance)		ifTrue: [ self setStepsToGo: aDistance ]		ifFalse: [ EmptyBatteryError signal ]! !!WalkingBrushRobot methodsFor: 'direction' stamp: 'federicobalaguer 7/7/2014 23:45'!north	self direction: 0! !!WalkingBrushRobot methodsFor: 'positioning' stamp: 'federicobalaguer 7/8/2014 15:14'!position	^ self body position! !!WalkingBrushRobot methodsFor: 'as yet unclassified' stamp: 'federicobalaguer 10/13/2015 17:21'!position: aPoint	self addCommand: (OTFCommand actionBlock: [ self jumpTo: aPoint ] times: 1)! !!WalkingBrushRobot methodsFor: 'printing' stamp: 'NahuelGarbezza 12/9/2012 18:39'!printOn: aStream	aStream		nextPutAll: 'Robot at ';		nextPutAll: self position printString;		nextPutAll: ', direction ';		nextPutAll: self direction printString.! !!WalkingBrushRobot methodsFor: 'direction' stamp: 'ArturoZambrano 9/5/2014 20:45'!quarter self direction: self direction + 90.! !!WalkingBrushRobot methodsFor: 'private' stamp: 'federicobalaguer 8/12/2014 16:05'!setBrushCommand: aBlock	self addCommand: (OTFCommand actionBlock: aBlock)! !!WalkingBrushRobot methodsFor: 'direction' stamp: 'federicobalaguer 7/7/2014 23:45'!south	self direction: 180! !!WalkingBrushRobot methodsFor: 'private' stamp: 'NahuelGarbezza 12/9/2012 18:23'!state	^ state! !!WalkingBrushRobot methodsFor: 'private' stamp: 'NahuelGarbezza 12/9/2012 18:24'!state: aState	state := aState! !!WalkingBrushRobot methodsFor: 'direction' stamp: 'federicobalaguer 7/7/2014 23:45'!west	self direction: 270! !!WalkingBrushWirelessRobot methodsFor: 'initialize - release' stamp: 'federicobalaguer 10/5/2015 15:31'!bodyClass 	^BGSWirelessEnabledRangeSensorBeltRobotBody! !!WalkingBrushWirelessRobot methodsFor: 'accessing' stamp: 'federicobalaguer 10/6/2015 17:21'!peerBots	^ self wireless peers collect: [ :each | each bot ]! !!WalkingBrushWirelessRobot methodsFor: 'accessing' stamp: 'federicobalaguer 10/6/2015 17:15'!wireless	^self body part: #wireless! !!RandomTraceRobot methodsFor: 'initialize-release' stamp: 'federicobalaguer 7/3/2014 10:35'!bodyClass 	^BGSRobotBodyWithFrontRangeSensor "BGSRangeSensorBeltRobotBody" ! !!RandomTraceRobot methodsFor: 'bot compatibility' stamp: 'federicobalaguer 8/20/2014 14:25'!brushDown	self traceOn! !!RandomTraceRobot methodsFor: 'bot compatibility' stamp: 'federicobalaguer 8/20/2014 14:25'!brushUp	self traceOff! !!RandomTraceRobot methodsFor: 'bot compatibility' stamp: 'federicobalaguer 8/6/2014 15:50'!direction	^ 0! !!RandomTraceRobot methodsFor: 'bot compatibility' stamp: 'federicobalaguer 8/6/2014 15:50'!direction: aNumber	! !!RandomTraceRobot methodsFor: 'bot compatibility' stamp: 'federicobalaguer 8/6/2014 15:50'!east	! !!RandomTraceRobot methodsFor: 'stepping' stamp: 'federicobalaguer 6/26/2014 13:41'!goForward	stepsToGo > 0		ifTrue: [ 			super goForward.			stepsToGo := stepsToGo - 1 ]! !!RandomTraceRobot methodsFor: 'testing' stamp: 'federicobalaguer 6/26/2014 15:09'!hasStepsToGo	^ stepsToGo > 0! !!RandomTraceRobot methodsFor: 'initialize-release' stamp: 'federicobalaguer 6/26/2014 13:42'!initialize	super initialize.	traceOn := true.	stepsToGo := 0.	body heading: 0 @ 1! !!RandomTraceRobot methodsFor: 'bot compatibility' stamp: 'federicobalaguer 8/6/2014 15:48'!isBrushDown	^ true! !!RandomTraceRobot methodsFor: 'bot compatibility' stamp: 'federicobalaguer 8/6/2014 15:48'!isBrushUp	^ false! !!RandomTraceRobot methodsFor: 'testing' stamp: 'federicobalaguer 8/20/2014 13:55'!isIdle	^ self hasStepsToGo not! !!RandomTraceRobot methodsFor: 'initialize-release' stamp: 'federicobalaguer 6/26/2014 10:10'!jumpTo: aPoint in: terrain	super jumpTo: aPoint in: terrain.	self addDependent: terrain.	self changed! !!RandomTraceRobot methodsFor: 'stepping' stamp: 'federicobalaguer 6/26/2014 15:19'!move: aNumber	stepsToGo := aNumber.	self changed! !!RandomTraceRobot methodsFor: 'bot compatibility' stamp: 'federicobalaguer 8/28/2014 13:17'!north"nothing to do"! !!RandomTraceRobot methodsFor: 'exploring' stamp: 'federicobalaguer 6/26/2014 10:12'!rangeSensorBelt	^self body part: #rangeSensorBelt! !!RandomTraceRobot methodsFor: 'exploring' stamp: 'federicobalaguer 6/26/2014 10:11'!sensedPositions	^self rangeSensorBelt sensedPositions! !!RandomTraceRobot methodsFor: 'bot compatibility' stamp: 'federicobalaguer 8/6/2014 15:50'!south! !!RandomTraceRobot methodsFor: 'stepping' stamp: 'federicobalaguer 6/26/2014 13:26'!step	| bodyCell |	bodyCell := self body cell.	"bodyCell color = Color gray"	traceOn		ifTrue: [ bodyCell color: Color black ].	self turnBy: (-2 to: 2) atRandom.	self goForward.	self changed! !!RandomTraceRobot methodsFor: 'stepping' stamp: 'federicobalaguer 6/26/2014 13:24'!traceOff	traceOn := false! !!RandomTraceRobot methodsFor: 'stepping' stamp: 'federicobalaguer 6/26/2014 13:23'!traceOn	traceOn := true! !!RandomTraceRobot methodsFor: 'bot compatibility' stamp: 'federicobalaguer 8/6/2014 15:51'!west! !!Workspace methodsFor: '*BotArena' stamp: 'federicobalaguer 8/19/2014 08:58'!addBindingKey: aString value: object	((bindings includesKey: aString) and: [ (bindings at: aString) notNil ])		ifFalse: [ bindings at: aString put: object ]		ifTrue: [ self error: 'Key already in use' ]! !!EmptyBatteryError commentStamp: '<historical>' prior: 34041641!I represent the error situation when the robot tries to move without enough battery charge.!!EmptyBatteryError class methodsFor: 'signaling' stamp: 'NahuelGarbezza 12/9/2012 18:32'!signal	^self signal: 'No hay suficiente bateria para moverse!!'! !!ArenaBehavior methodsFor: 'initialiaze' stamp: 'federicobalaguer 8/20/2014 09:38'!createAndDeployRobotsOn: simulation	self subclassResponsibility! !!ArenaBehavior methodsFor: 'initialiaze' stamp: 'federicobalaguer 8/27/2014 11:28'!createAndDeployRobotsOn: simulation from: arenaWindow	self subclassResponsibility! !!ArenaBehavior methodsFor: 'callback' stamp: 'federicobalaguer 8/20/2014 09:46'!handleRedButtonOnEmptyCell: cellPosition window: arenaWindow	^ self subclassResponsibility! !!ArenaBehavior methodsFor: 'callback' stamp: 'federicobalaguer 8/20/2014 09:47'!handleYellowButtonOnBot: cellPosition window: arenaWindow	^ self subclassResponsibility! !!ArenaBehavior methodsFor: 'initialiaze' stamp: 'federicobalaguer 8/27/2014 12:07'!initializeBindingsFor: arenaWindow	self subclassResponsibility! !!ArenaBehavior methodsFor: 'private' stamp: 'federicobalaguer 8/14/2014 15:20'!makeButton:  aString action: actionSelector state: stateSelector target: target	| btn labelMorph |	btn := PluggableButtonMorph 		on: target		getState: stateSelector		action: actionSelector.	labelMorph := StringMorph contents: aString.	labelMorph emphasis: 1.	btn		label: labelMorph;		useRoundedCorners;		hResizing: #spaceFill;		onColor: target onButtonColor offColor: target offButtonColor;		borderWidth: 2;		borderColor: #raised.	btn label color: Color darkGray.	btn extent: target buttonsWidth @ 50. "50 is not an important value since it will be changed by the enclosing alignment morph"	^btn! !!ArenaBehavior methodsFor: 'callback' stamp: 'federicobalaguer 9/29/2015 12:20'!resetSimulation: arenaWindow	^ self subclassResponsibility	! !!BasicArenaBehavior methodsFor: 'buttons creations' stamp: 'federicobalaguer 8/20/2014 13:02'!addButtonsToPanel: panel of: aWindow	| resetBtn wrkSpaceBtn browserBtn objectListBtn |	resetBtn := self		makeButton: 'Reset'		action: #resetSimulation		state: #canResetSimulation		target: aWindow.	wrkSpaceBtn := self		makeButton: 'Open Workspace'		action: #openWorkspaceWithContent		state: #hasWorkspace		target: aWindow .	browserBtn := self		makeButton: 'Browse Definition'		action: #openBrowserOnRobot		state: #hasBrowser		target: aWindow .	objectListBtn := self		makeButton: 'Available Objects'		action: #browseAvailableObjects		state: #canResetSimulation		target: aWindow .	{resetBtn.	wrkSpaceBtn.	browserBtn.	objectListBtn} do: [ :button | panel addMorph: button ]! !!BasicArenaBehavior methodsFor: 'initialize' stamp: 'federicobalaguer 8/26/2014 16:35'!createAndDeployRobotsOn: simulation	simulation createAndDeployRobot: 'robotech' position: simulation terrain extent / 2.	! !!BasicArenaBehavior methodsFor: 'initialize' stamp: 'federicobalaguer 8/27/2014 12:11'!createAndDeployRobotsOn: simulation from: arenaWindow	self createAndDeployRobotsOn: simulation.	self initializeBindingsFor: arenaWindow .	simulation robots notEmpty		ifTrue: [ arenaWindow  addBinding: #robotech object: simulation robots first ]! !!BasicArenaBehavior methodsFor: 'callback' stamp: 'federicobalaguer 8/20/2014 09:44'!handleRedButtonOnEmptyCell: cellPosition window: arenaWindow! !!BasicArenaBehavior methodsFor: 'callback' stamp: 'federicobalaguer 8/20/2014 11:13'!handleYellowButtonOnBot: aRobot window: arenaWindow	! !!BasicArenaBehavior methodsFor: 'initialize' stamp: 'federicobalaguer 8/28/2014 15:35'!initializeBindingsFor: arenaWindow	| binding auxbat |	binding := arenaWindow cleanBindings.	binding		at: #backupBattery		put:			((auxbat := Battery new)				charge: auxbat defaultCapacity;				yourself).	binding at: #endlessBattery put: EndlessBattery new! !!BasicArenaBehavior methodsFor: 'callback' stamp: 'federicobalaguer 8/27/2014 12:23'!resetSimulation: arenaWindow	arenaWindow simulation reset.	self createAndDeployRobotsOn: arenaWindow simulation from: arenaWindow! !!EnhancedArenaBehavior methodsFor: 'buttons creations' stamp: 'federicobalaguer 8/14/2014 11:52'!addButtonsToPanel: panel of: aWindow	| resetBtn wrkSpaceBtn browserBtn addBotBtn|	resetBtn := self		makeButton: 'Reset'		action: #resetSimulation		state: #canResetSimulation		target: aWindow.	wrkSpaceBtn := self		makeButton: 'Open Workspace'		action: #openWorkspace		state: #hasWorkspace		target: aWindow .	browserBtn := self		makeButton: 'Browse Definition'		action: #openBrowser		state: #hasBrowser		target: aWindow .	addBotBtn := self		makeButton: 'Add Robot'		action: #addRobot		state: #canResetSimulation		target: aWindow .	{resetBtn.	wrkSpaceBtn.	browserBtn.	addBotBtn} do: [ :button | panel addMorph: button ]! !!EnhancedArenaBehavior methodsFor: 'initialize' stamp: 'federicobalaguer 8/20/2014 09:39'!createAndDeployRobotsOn: simulation! !!EnhancedArenaBehavior methodsFor: 'initialize' stamp: 'federicobalaguer 8/27/2014 12:26'!createAndDeployRobotsOn: simulation from: arenaWindow	self initializeBindingsFor: arenaWindow! !!EnhancedArenaBehavior methodsFor: 'callback' stamp: 'federicobalaguer 8/20/2014 09:44'!handleRedButtonOnEmptyCell: cellPosition window: arenaWindow	arenaWindow addRobotOnPosition: cellPosition! !!EnhancedArenaBehavior methodsFor: 'callback' stamp: 'federicobalaguer 8/20/2014 11:13'!handleYellowButtonOnBot: aRobot window: arenaWindow	! !!EnhancedArenaBehavior methodsFor: 'initialiaze' stamp: 'federicobalaguer 8/27/2014 12:37'!initializeBindingsFor: arenaWindow	arenaWindow cleanBindings ! !!EnhancedArenaBehavior methodsFor: 'callback' stamp: 'federicobalaguer 9/29/2015 12:13'!resetSimulation: arenaWindow	arenaWindow simulation reset.	arenaWindow changed.	self initializeBindingsFor: arenaWindow! !!Battery commentStamp: '<historical>' prior: 34041782!I represent the robot's battery. I have a capacity and a charge that decreases, and I can recharge myself.!!Battery class methodsFor: 'instance-creation' stamp: 'federicobalaguer 7/11/2014 19:36'!fullyCharged	| instance |	^ (instance := self new)		charge: instance capacity;		yourself! !!Battery methodsFor: 'consume' stamp: 'NahuelGarbezza 12/9/2012 18:02'!canConsume: amount	^self charge >= amount! !!Battery methodsFor: 'accessing' stamp: 'NahuelGarbezza 12/9/2012 18:00'!capacity	^ capacity! !!Battery methodsFor: 'private' stamp: 'NahuelGarbezza 12/9/2012 18:03'!capacity: anObject	capacity := anObject! !!Battery methodsFor: 'accessing' stamp: 'NahuelGarbezza 12/9/2012 17:59'!charge	^ charge! !!Battery methodsFor: 'private' stamp: 'NahuelGarbezza 12/9/2012 17:59'!charge: anObject	charge := anObject! !!Battery methodsFor: 'consume' stamp: 'federicobalaguer 8/29/2014 13:46'!consume: amount	(self canConsume: amount)		ifTrue: [ self charge: self charge - amount ]		ifFalse: [ EmptyBatteryError signal ]! !!Battery methodsFor: 'private' stamp: 'federicobalaguer 7/11/2014 19:32'!defaultCapacity	^100! !!Battery methodsFor: 'initialize-release' stamp: 'federicobalaguer 8/28/2014 17:01'!initialize	self capacity: self defaultCapacity.	self charge: 0.	^ self! !!BrushState commentStamp: '<historical>' prior: 34041941!Represento un posible estado en el que se encuentre el robot del que formo parte.!!BrushDown commentStamp: '<historical>' prior: 34042074!I represent the state of a robot in which the brush is down.!!BrushDown methodsFor: 'actions' stamp: 'federicobalaguer 8/25/2014 16:23'!brushDownFor: aRobot	"Nothing to do"! !!BrushDown methodsFor: 'actions' stamp: 'federicobalaguer 8/25/2014 16:23'!brushUpFor: aRobot	aRobot state: BrushUp new! !!BrushDown methodsFor: 'testing' stamp: 'NahuelGarbezza 12/9/2012 18:33'!isDown	^true! !!BrushDown methodsFor: 'testing' stamp: 'NahuelGarbezza 12/9/2012 18:33'!isUp	^false! !!BrushDown methodsFor: 'printing' stamp: 'NahuelGarbezza 12/9/2012 18:38'!printOn: aStream	aStream << 'Brush down'! !!BrushDown methodsFor: 'actions' stamp: 'federicobalaguer 8/25/2014 16:23'!toggleBrushFor: aRobot	self brushUpFor: aRobot! !!BrushDown methodsFor: 'printing' stamp: 'federicobalaguer 8/28/2014 16:29'!tracePositionFor: aRobot	|  bodyCell |	bodyCell := aRobot body cell.		bodyCell color: Color black! !!BrushState methodsFor: 'actions' stamp: 'federicobalaguer 8/25/2014 16:23'!brushDownFor: aRobot	self subclassResponsibility! !!BrushState methodsFor: 'actions' stamp: 'federicobalaguer 8/25/2014 16:23'!brushUpFor: aRobot	self subclassResponsibility! !!BrushState methodsFor: 'testing' stamp: 'NahuelGarbezza 12/9/2012 18:33'!isDown	self subclassResponsibility! !!BrushState methodsFor: 'testing' stamp: 'NahuelGarbezza 12/9/2012 18:33'!isUp 	self subclassResponsibility! !!BrushState methodsFor: 'actions' stamp: 'federicobalaguer 8/25/2014 16:23'!toggleBrushFor: aRobot	self subclassResponsibility! !!BrushState methodsFor: 'actions' stamp: 'federicobalaguer 7/10/2014 11:28'!tracePositionFor: aRobot	self subclassResponsibility! !!BrushUp commentStamp: '<historical>' prior: 34042185!I represent the state of a robot in which the brush is up.!!BrushUp methodsFor: 'actions' stamp: 'federicobalaguer 8/25/2014 16:23'!brushDownFor: aRobot	"aRobot startNewPath."	aRobot state: BrushDown new.! !!BrushUp methodsFor: 'actions' stamp: 'federicobalaguer 8/25/2014 16:23'!brushUpFor: aRobot	"Nothing to do"! !!BrushUp methodsFor: 'testing' stamp: 'NahuelGarbezza 12/9/2012 18:33'!isDown	^false! !!BrushUp methodsFor: 'testing' stamp: 'NahuelGarbezza 12/9/2012 18:33'!isUp	^true! !!BrushUp methodsFor: 'printing' stamp: 'NahuelGarbezza 12/9/2012 18:36'!printOn: aStream	aStream << 'Brush up'! !!BrushUp methodsFor: 'actions' stamp: 'federicobalaguer 8/25/2014 16:23'!toggleBrushFor: aRobot	self brushDownFor: aRobot! !!BrushUp methodsFor: 'actions' stamp: 'federicobalaguer 7/10/2014 11:32'!tracePositionFor: aRobot	"	nothing to do"	! !!EndlessBattery commentStamp: 'federicobalaguer 7/11/2014 14:55' prior: 34042321!An EndlessBattery is a battery with infinite charge!!EndlessBattery methodsFor: 'consume' stamp: 'federicobalaguer 7/9/2014 09:30'!canConsume: aNumber	^ true! !!EndlessBattery methodsFor: 'consume' stamp: 'federicobalaguer 7/9/2014 09:30'!consume: aNumber	! !!OTFCommand class methodsFor: 'instance-creation' stamp: 'federicobalaguer 8/6/2014 16:46'!actionBlock: aBlock	^ self actionBlock: aBlock times: 1! !!OTFCommand class methodsFor: 'instance-creation' stamp: 'federicobalaguer 7/10/2014 15:09'!actionBlock: aBlock times: aNumber	"aBlock has no arguments, aNumber is an Integer"	^ self new		actionBlock: aBlock timesToGo: aNumber;		yourself! !!OTFCommand methodsFor: 'initialize - release' stamp: 'federicobalaguer 7/10/2014 15:10'!actionBlock: aBlock timesToGo: aNumber	actionBlock := aBlock.	timesToGo := aNumber! !!OTFCommand methodsFor: 'executing' stamp: 'federicobalaguer 8/12/2014 16:08'!executeCommand	actionBlock value.	timesToGo := timesToGo - 1.! !!OTFCommand methodsFor: 'testing' stamp: 'federicobalaguer 7/10/2014 15:30'!hasStepsToGo	^ timesToGo > 0! !!OTFCommand methodsFor: 'testing' stamp: 'federicobalaguer 7/10/2014 15:52'!stepsToGo	^ timesToGo ! !!Association methodsFor: '*BotArena' stamp: 'JulianGrigera 8/21/2015 19:10'!emitValue: anIRBuilder 	anIRBuilder pushLiteralVariable: self! !"BotArena"!----SNAPSHOT----2015-10-26T20:59:32.115671-03:00 Pharo4.0.image priorSource: 269147!----SNAPSHOT----2015-10-26T21:00:26.365671-03:00 Pharo4.0.image priorSource: 531496!----SNAPSHOT----2015-10-26T21:00:40.228671-03:00 backup1.image priorSource: 531582!----SNAPSHOT----2015-10-26T21:00:48.307671-03:00 Pharo4.0.image priorSource: 531668!!WalkingBrushRobot methodsFor: 'as yet unclassified' stamp: 'northEast 10/26/2015 21:02'!northEast  self direction: 45! !!WalkingBrushRobot methodsFor: 'as yet unclassified' stamp: 'northEast 10/26/2015 21:02'!northWest  self direction: 315! !!WalkingBrushRobot methodsFor: 'as yet unclassified' stamp: 'northEast 10/26/2015 21:02'!southEast  self direction: 135! !!WalkingBrushRobot methodsFor: 'as yet unclassified' stamp: 'northEast 10/26/2015 21:02'!southWest  self direction: 22! !!WalkingBrushRobot methodsFor: 'as yet unclassified' stamp: 'northEast 10/26/2015 21:03'!trace: aDistance  "Dibuja una linea de una distancia dada"  aDistance    timesRepeat: [      self        brushDown;        brushUp;        move: 1 ]! !----SNAPSHOT----2015-10-26T21:03:49.543671-03:00 Pharo4.0.image priorSource: 531753!!WalkingBrushRobot methodsFor: 'as yet unclassified' stamp: 'northEast 10/26/2015 23:46'!dash: aNumber  "Realiza una linea punteada de longitud aNumber"  aNumber // 2    timesRepeat: [      self        trace: 1;        move: 1 ].  aNumber odd    ifTrue: [ self trace: 1 ]! !----SNAPSHOT----2015-10-26T23:47:59.943671-03:00 Pharo4.0.image priorSource: 532587!----SNAPSHOT----2015-10-26T23:49:01.524671-03:00 Pharo4.0.image priorSource: 532958!----SNAPSHOT----2015-10-26T23:49:53.750671-03:00 Pharo4.0.image priorSource: 533044!----SNAPSHOT----2015-10-26T23:49:59.564671-03:00 Pharo4.0.image priorSource: 533130!----SNAPSHOT----2015-10-26T23:50:04.864671-03:00 Pharo4.0.image priorSource: 533216!----SNAPSHOT----2015-10-26T23:50:07.046671-03:00 Pharo4.0.image priorSource: 533302!!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/26/2015 23:51' prior: 34069494!position: aPoint  "Posiciona al robot en la celda aPoint de la arena."  ^ self body position: aPoint! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/26/2015 23:51'!rotLeft: degrees  "Gira el robot x cant de grados hacia su izquierda"  | partial_dir |  partial_dir := self direction - degrees.  partial_dir < 0    ifTrue: [ partial_dir := partial_dir + 360 ].  self direction: partial_dir! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/26/2015 23:51'!rotRight: degrees  "Gira el robot x cant de grados hacia su derecha"  | partial_dir |  partial_dir := self direction + degrees.  partial_dir > 360    ifTrue: [ partial_dir := partial_dir - 360 ].  self direction: partial_dir! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/26/2015 23:52'!squareOfSize: aSize  "Realiza un cuadrado con una esquina en su posición actual y de lado aSize."  self brushDown.  4 timesRepeat: [    self move: aSize;    rotateRight: 90.  ].  self brushUp.! !----SNAPSHOT----2015-10-26T23:52:18.626671-03:00 Pharo4.0.image priorSource: 533388!!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/26/2015 23:53' prior: 34088802!squareOfSize: aSize  "Realiza un cuadrado con una esquina en su posición actual y de lado aSize."  self brushDown.  4 timesRepeat: [    self move: aSize;    rotRight: 90.  ].  self brushUp.! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/26/2015 23:56' prior: 34089185!squareOfSize: aSize  "Realiza un cuadrado con una esquina en su posición actual y de lado aSize."	  self brushDown.  4 timesRepeat: [    self move: aSize-1;    rotRight: 90.  ].  self brushUp.! !----SNAPSHOT----2015-10-26T23:58:49.084671-03:00 Pharo4.0.image priorSource: 534574!----SNAPSHOT----2015-10-26T23:59:08.478671-03:00 backup2.image priorSource: 535251!----SNAPSHOT----2015-10-26T23:59:18.414671-03:00 Pharo4.0.image priorSource: 535337!!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/27/2015 00:00' prior: 34089479!squareOfSize: aSize  "Realiza un cuadrado con una esquina en su posición actual y de lado aSize."	    4 timesRepeat: [    self move: aSize-1;    rotRight: 90.  ].  ! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/27/2015 00:01'!squareOfSize: aSize at: aPoint  "Realiza un cuadrado con una esquina en el punto aPoint y de lado aSize."  self    position: aPoint;    squareOfSize: aSize! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/27/2015 00:02'!squareAtHomeOfSize: aSize  "Realiza un cuadrado con una esquina en 25@25 y de lado aSize."  self squareOfSize: aSize at: (25@25)! !----SNAPSHOT----2015-10-27T00:03:22.147671-03:00 Pharo4.0.image priorSource: 535422!----SNAPSHOT----2015-10-27T00:03:52.084671-03:00 backup2.image priorSource: 536226!----SNAPSHOT----2015-10-27T00:04:03.980671-03:00 Pharo4.0.image priorSource: 536312!----SNAPSHOT----2015-10-27T00:04:09.212671-03:00 Pharo4.0.image priorSource: 536397!----SNAPSHOT----2015-10-27T00:04:10.792671-03:00 Pharo4.0.image priorSource: 536483!!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/27/2015 00:04'!rotatedSquareOfSize: aSize  "Realiza un cuadrado con una esquina en su posición actual, de lado aSize,  rotado 45 grados."  self    rotRight: 45;    squareOfSize: aSize.! !----SNAPSHOT----2015-10-27T00:04:43.674671-03:00 Pharo4.0.image priorSource: 536569!!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/27/2015 00:05'!rotatedSquareOfSize: aSize at: aPoint  "Realiza un cuadrado con una esquina en aPoint, de lado aSize, rotado 45 grados."  self    rotRight: 45;    squareOfSize: aSize at: aPoint.! !----SNAPSHOT----2015-10-27T00:05:39.332671-03:00 Pharo4.0.image priorSource: 536910!----SNAPSHOT----2015-10-27T00:06:12.247671-03:00 Pharo4.0.image priorSource: 537258!----SNAPSHOT----2015-10-27T00:06:17.517671-03:00 Pharo4.0.image priorSource: 537344!----SNAPSHOT----2015-10-27T00:06:21.245671-03:00 Pharo4.0.image priorSource: 537430!!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:07'!sniper: aRobot "Asigna un robot a sniper" sniper := aRobot.! !!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:07'!patrol: aRobot  "Asigna un robot a patrol"   patrol := aRobot.! !!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:07'!patrol: aPatrol sniper: aSniper  "Asigna un patrol y un sniper"  self    patrol: aPatrol;    sniper: aSniper! !!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:07'!sniper  "Retorna un sniper"  ^ sniper! !!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:07'!patrol  "Retorna un patrol"  ^ patrol! !----SNAPSHOT----2015-10-27T00:08:10.876671-03:00 Pharo4.0.image priorSource: 537516!----SNAPSHOT----2015-10-27T00:08:16.123671-03:00 Pharo4.0.image priorSource: 538367!----SNAPSHOT----2015-10-27T00:08:23.355671-03:00 Pharo4.0.image priorSource: 538453!----SNAPSHOT----2015-10-27T00:08:25.112671-03:00 Pharo4.0.image priorSource: 538539!----SNAPSHOT----2015-10-27T00:09:24.948671-03:00 Pharo4.0.image priorSource: 538625!!PatrolCouple class methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:10'!newWithPatrol: aPatrol andSniper: aSniper  "Crea e inicializa un PatrolCouple con robots."  ^ self new patrol: aPatrol sniper: aSniper! !----SNAPSHOT----2015-10-27T00:16:49.980671-03:00 Pharo4.0.image priorSource: 538711!----SNAPSHOT----2015-10-27T00:24:20.322671-03:00 Pharo4.0.image priorSource: 539029!!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:24'!reset  "Ambos robots se posicionan enfrentados a distancia 5 uno del otro (uno mira al    south y el otro al north, uno de ellos posicionado en 20@20"  self patrol    north;    position: (20@30).  self sniper    south;    position: (20@25).! !!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:24'!regularPatrol  "patrol hace un cuadrado de lado 10 rotado 45 grados alrededor de sniper,    sniper en el centro gira en sentido de las agujas del reloj."  self patrol rotatedSquareOfSize: 10 at: ((self sniper position x - 10)@(self sniper position y)).  4 timesRepeat: [self sniper rotRight: 90]! !----SNAPSHOT----2015-10-27T00:25:01.373671-03:00 Pharo4.0.image priorSource: 539115!----SNAPSHOT----2015-10-27T00:25:13.392671-03:00 Pharo4.0.image priorSource: 539928!!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:35' prior: 34094057!regularPatrol  "patrol hace un cuadrado de lado 10 rotado 45 grados alrededor de sniper,    sniper en el centro gira en sentido de las agujas del reloj."	4 timesRepeat: [self sniper rotRight: 90].  self patrol rotatedSquareOfSize: 10 at: ((self sniper position x - 10)@(self sniper position y)).  ! !!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:37' prior: 34094634!regularPatrol  "patrol hace un cuadrado de lado 10 rotado 45 grados alrededor de sniper,    sniper en el centro gira en sentido de las agujas del reloj."  self patrol rotatedSquareOfSize: 10 at: ((self sniper position x - 10)@(self sniper position y)).  4 timesRepeat: [self sniper rotRight: 90].  ! !----SNAPSHOT----2015-10-27T00:38:06.506671-03:00 Pharo4.0.image priorSource: 540014!!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:41'!regularPatrolTrace  "Similar a regularPatrol pero patrol realiza un trazo con el brush"  self patrol brushDown.  self regularPatrol.  self patrol brushUp.  ! !----SNAPSHOT----2015-10-27T00:41:45.522671-03:00 Pharo4.0.image priorSource: 540916!----SNAPSHOT----2015-10-27T00:41:58.804671-03:00 Pharo4.0.image priorSource: 541253!!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:42' prior: 34095041!regularPatrol  "patrol hace un cuadrado de lado 10 rotado 45 grados alrededor de sniper,    sniper en el centro gira en sentido de las agujas del reloj."  self patrol rotatedSquareOfSize: 10 at: ((self sniper position x - 9)@(self sniper position y)).  4 timesRepeat: [self sniper rotRight: 90].  ! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/27/2015 00:49'!rotatedSquareTraceOfSize: aSize  "Realiza un cuadrado con una esquina en su posición actual, de lado aSize,  rotado 45 grados."  self	 brushDown;    rotRight: 45;    squareOfSize: aSize;	 brushUp.! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/27/2015 00:51'!squareTraceOfSize: aSize  "Realiza un cuadrado con una esquina en su posición actual y de lado aSize."  self brushDown.    4 timesRepeat: [    self move: aSize-1;    rotRight: 90.  ].  self brushUp  ! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/27/2015 00:51'!squareTraceOfSize: aSize at: aPoint  "Realiza un cuadrado con una esquina en el punto aPoint y de lado aSize."  self    position: aPoint;    squareTraceOfSize: aSize! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/27/2015 00:52' prior: 34096342!rotatedSquareTraceOfSize: aSize  "Realiza un cuadrado con una esquina en su posición actual, de lado aSize,  rotado 45 grados."  self	     rotRight: 45;    squareTraceOfSize: aSize	 ! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 10/27/2015 00:53'!rotatedSquareTraceOfSize: aSize at: aPoint  "Realiza un cuadrado con una esquina en aPoint, de lado aSize, rotado 45 grados."  self    rotRight: 45;    squareTraceOfSize: aSize at: aPoint.! !----SNAPSHOT----2015-10-27T00:53:19.196671-03:00 Pharo4.0.image priorSource: 541339!----SNAPSHOT----2015-10-27T00:53:31.508671-03:00 Pharo4.0.image priorSource: 543212!!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:54' prior: 34095520!regularPatrolTrace  "Similar a regularPatrol pero patrol realiza un trazo con el brush"    self regularPatrol.    ! !!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 00:55' prior: 34097918!regularPatrolTrace  "Similar a regularPatrol pero patrol realiza un trazo con el brush"    self patrol rotatedSquareTraceOfSize: 10 at: ((self sniper position x - 9)@(self sniper position y)).  4 timesRepeat: [self sniper rotRight: 90].    ! !----SNAPSHOT----2015-10-27T00:55:20.017671-03:00 Pharo4.0.image priorSource: 543298!----SNAPSHOT----2015-10-27T00:55:54.457671-03:00 Pharo4.0.image priorSource: 543959!----SNAPSHOT----2015-10-27T00:57:07.052671-03:00 Pharo4.0.image priorSource: 544045!----SNAPSHOT----2015-10-27T00:57:12.465671-03:00 Pharo4.0.image priorSource: 544131!----SNAPSHOT----2015-10-27T00:57:16.572671-03:00 Pharo4.0.image priorSource: 544217!!WalkingBrushRobot methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 01:00'!canDoPatrol: movements  ^self battery charge >= (movements * 4 + 5)! !!WalkingBrushRobot methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 01:00'!canDoRegularPatrol  ^self canDoPatrol: 10! !!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 01:20'!doTheRegularPatrol  "Los guardias repiten regularPatrol 5 veces, pero luego de cada una se corren  5 hacia el este. Considere usar bateria con suficiente carga"  5 timesRepeat: [      self patrol canDoRegularPatrol & (self sniper battery charge >= 9)        ifTrue: [          self patrol north.          self regularPatrol ]  ]! !----SNAPSHOT----2015-10-27T01:21:11.151671-03:00 Pharo4.0.image priorSource: 544303!----SNAPSHOT----2015-10-27T01:21:29.046671-03:00 Pharo4.0.image priorSource: 545114!----SNAPSHOT----2015-10-27T01:22:08.442671-03:00 Pharo4.0.image priorSource: 545200!!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 01:25' prior: 34099205!doTheRegularPatrol  "Los guardias repiten regularPatrol 5 veces, pero luego de cada una se corren  5 hacia el este. Considere usar bateria con suficiente carga"  5 timesRepeat: [      self patrol canDoRegularPatrol & (self sniper battery charge >= 9)        ifTrue: [          self patrol north.          self regularPatrol.			 self sniper position:((self sniper position x + 5)@(self sniper position y)) ]  ]! !----SNAPSHOT----2015-10-27T01:25:27.831671-03:00 Pharo4.0.image priorSource: 545286!!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 01:35'!moveCouple  "Mueve la patrulla entera 5 lugares al este (metodo para el doTheRegularPatrol)"  self sniper position:((self sniper position x + 5)@(self sniper position y)).  self patrol position:((self patrol position x + 5)@(self patrol position y)). ! !!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 01:35' prior: 34099906!doTheRegularPatrol  "Los guardias repiten regularPatrol 5 veces, pero luego de cada una se corren  5 hacia el este. Considere usar bateria con suficiente carga"  5 timesRepeat: [      self patrol canDoRegularPatrol & (self sniper battery charge >= 9)        ifTrue: [          self patrol north.          self regularPatrol.			 self moveCouple]  ]! !----SNAPSHOT----2015-10-27T01:36:32.891671-03:00 Pharo4.0.image priorSource: 545897!!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 01:37'!doTheRegularPatrolTrace  "Similar a doTheRegularPatrol pero cada robot deja un trazo en la arena con  el brush"  5 timesRepeat: [      self patrol canDoRegularPatrol & (self sniper battery charge >= 9)        ifTrue: [          self patrol north.          self regularPatrolTrace.			 self moveCouple ]  ]! !----SNAPSHOT----2015-10-27T01:37:57.439671-03:00 Pharo4.0.image priorSource: 546790!!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 01:43'!endlessBatCouple  "Se asigna bateria infinita a la patrulla. Tanto a patrol, como a sniper"  self patrol battery: EndlessBattery.  self sniper battery: EndlessBattery.! !----SNAPSHOT----2015-10-27T01:44:03.631671-03:00 Pharo4.0.image priorSource: 547280!!PatrolCouple methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 01:45' prior: 34101884!endlessBatCouple  "Se asigna bateria infinita a la patrulla. Tanto a patrol, como a sniper"  self patrol battery charge: 999.  self sniper battery charge: 999.! !----SNAPSHOT----2015-10-27T01:46:04.508671-03:00 Pharo4.0.image priorSource: 547627!----SNAPSHOT----2015-10-27T01:46:18.310671-03:00 Pharo4.0.image priorSource: 547982!----SNAPSHOT----2015-10-27T01:46:23.027671-03:00 Pharo4.0.image priorSource: 548068!'From Pharo4.0 of 18 March 2013 [Latest update: #40620] on 1 October 2015 at 7:32:27.919523 pm'!ComposableModel subclass: #WallpostUI	instanceVariableNames: 'text likeButton dislikeButton likesLabel wallpost staticLikesLabel staticFeaturedLabel featuredCheckbox inspectButton'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Wallpost'!!WallpostUI methodsFor: 'accessing' stamp: 'ArturoZambrano 8/22/2014 18:00'!text	^ text! !!WallpostUI methodsFor: 'accessing' stamp: 'ArturoZambrano 8/22/2014 18:06'!title ^ 'Wallpost UI'! !!WallpostUI methodsFor: 'accessing' stamp: 'ArturoZambrano 9/4/2014 22:25'!initializePresenter	inspectButton whenActionPerformedDo: [ wallpost inspect ].	likeButton		whenActionPerformedDo: [ 			wallpost like.			self update ].	dislikeButton		whenActionPerformedDo: [ 			wallpost dislike.			self update ].	text		whenTextChanged: [ 			wallpost text: text text.			self update ].	featuredCheckbox		whenChangedDo: [ 			wallpost toggleFeatured.			self update ]! !!WallpostUI methodsFor: 'accessing' stamp: 'ArturoZambrano 8/22/2014 18:00'!likeButton	^ likeButton! !!WallpostUI methodsFor: 'accessing' stamp: 'ArturoZambrano 8/22/2014 18:00'!dislikeButton	^ dislikeButton! !!WallpostUI methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 22:21'!staticFeaturedLabel  ^staticFeaturedLabel! !!WallpostUI methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 21:46'!likesLabel  ^likesLabel! !!WallpostUI methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 22:24'!inspectButton ^ inspectButton! !!WallpostUI methodsFor: 'as yet unclassified' stamp: 'DiegoT 10/1/2015 19:27'!update	text text: wallpost text.	likesLabel label: wallpost likes printString.	"featuredCheckbox state: wallpost isFeatured"! !!WallpostUI methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 21:46'!wallpost:aPost wallpost:=aPost.! !!WallpostUI methodsFor: 'as yet unclassified' stamp: 'DiegoT 9/28/2015 17:41'!initializeWidgets	text := self newText.	text autoAccept:true; isCodeCompletionAllowed: false.	text text: wallpost text.	likeButton := self newButton label: 'Like'.	inspectButton := self newButton label: 'Inspect'.	dislikeButton := self newButton label: 'Dislike'.	staticLikesLabel := self newLabel		label: 'Likes ';		yourself.	featuredCheckbox := self newCheckBox.	staticFeaturedLabel := self newLabel		label: 'Featured';		yourself.	likesLabel := self newLabel label: wallpost likes printString.	self focusOrder		add: inspectButton;		add: text;		add: featuredCheckbox;		add: likeButton;		add: dislikeButton! !!WallpostUI methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 22:21'!featuredCheckbox  ^featuredCheckbox! !!WallpostUI methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 21:54'!staticLikesLabel  ^staticLikesLabel! !!WallpostUI methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/22/2014 18:09'!initialExtent	^ 250@250! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WallpostUI class	instanceVariableNames: ''!!WallpostUI class methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 21:47'!on: aWP	^ self basicNew		wallpost: aWP;		initialize;		openWithSpec;		yourself! !!WallpostUI class methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 22:27'!defaultSpec	<spec: #default>	^ SpecLayout composed		newColumn: [ :column | 					column						add: #inspectButton height: 30;						add: #text;						newRow: [ :row | 									row										add: #staticFeaturedLabel;										add: #featuredCheckbox ]							height: 30;						newRow: [ :row | 									row										add: #staticLikesLabel;										add: #likesLabel ]							height: 30;						newRow: [ :row | 									row										add: #likeButton;										add: #dislikeButton ]							height: 30 ];		yourself! !----End fileIn----!'From Pharo3.0 of 18 March 2013 [Latest update: #30846] on 5 September 2014 at 9:21:46.291446 pm'!TestCase subclass: #WallpostTest	instanceVariableNames: 'wallpost coolPost'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Wallpost-Tests'!!WallpostTest commentStamp: '<historical>' prior: 0!A WallpostTest is a test class for testing the behavior of Wallpost!!WallpostTest methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 22:07'!testFeatured self deny:  wallpost isFeatured. ! !!WallpostTest methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 22:08'!testWallpost    self assert:   wallpost likes  = 0 . ! !!WallpostTest methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 22:09'!testText	wallpost text: 'hello'.	self assert: wallpost text = 'hello'.      wallpost text: 'bye'.	self assert: wallpost text = 'bye'.	! !!WallpostTest methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 8/24/2014 21:11'!testLike	self assert: wallpost likes = 0.	wallpost like.	self assert: wallpost likes = 1.	wallpost		like;		like;		like.	self assert: wallpost likes = 4! !!WallpostTest methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 22:08'!testToggleFeatured	self assert: wallpost toggleFeatured isFeatured.	self deny: coolPost toggleFeatured isFeatured! !!WallpostTest methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 21:04'!testDislike	coolPost dislike.	self assert: coolPost likes = 3.	coolPost		dislike;		dislike.	self assert: coolPost likes = 1.	coolPost dislike.	self assert: coolPost likes = 0.	coolPost dislike.	self assert: coolPost likes = 0! !!WallpostTest methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 9/4/2014 22:08'!setUp	wallpost := Wallpost new.	coolPost := Wallpost new.	coolPost		like;		like;		like;		like; toggleFeatured 		 ! !----End fileIn----!----SNAPSHOT----2015-10-27T01:56:48.591671-03:00 Pharo4.0.image priorSource: 548154!!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 02:00'!regularWatch  "los robots realizan un cuadrado de lado 3 en su correspondiente flanco."  self brushDown.  self robots do: [ :robot| robot squareOfSize: 3].  self brushUp! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 02:01'!paranoicWatch  "cada robot realiza un recorrido del flanco completo, dibujando un rectangulo  de 4x10"  self brushDown.  self robots do: [ :robot | robot rectangleWithBase: 4 andHeight: 10 ].  self brushUp.! !!WalkingBrushRobot methodsFor: 'as yet unclassified' stamp: 'northEast 10/27/2015 02:01'!rectangleWithBase: aBase andHeight: aHeight  2 timesRepeat: [    self      move: aBase;      rotRight: 90;      move: aHeight;      rotRight: 90 ]! !----SNAPSHOT----2015-10-27T02:05:29.389671-03:00 Pharo4.0.image priorSource: 554104!----STARTUP----2015-11-14T12:49:46.997675-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:00' prior: 34108707!regularWatch  "Los robots realizan un cuadrado de lado 3 en su correspondiente flanco."  self brushDown.  self robots do: [ :robot| robot squareOfSize: 3].  self brushUp! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:00' prior: 34148881!regularWatch  "Los robots realizan un cuadrado de lado 3 en su correspondiente flanco."  self brushDown.  self robots do: [ :robot | robot squareOfSize: 3].  self brushUp! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:03'!initialize	"Inicializa el conjunto de robots."  robots := OrderedCollection new! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:03'!robots	"Devuelve los robots del castillo."  ^ robots! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:03'!brushDown	"Baja el pincel para los robots del castillo."  self robots do: [ :robot | robot brushDown ]! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:04'!brushUp	"Levanta el pincel para los robots del castillo."  self robots do: [ :robot | robot brushUp ]! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:04'!eastWatch	"Retorna el robot de la puesta ESTE"  ^ eastWatch! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:05'!eastWatch: aRobot	"Asigna el robot de la puerta ESTE."  eastWatch := aRobot! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:05'!northWatch	"Retorna el robot de la puerta NORTE."  ^ northWatch! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:05'!northWatch: aRobot	"Asigna el robot de la puerta NORTE."  northWatch := aRobot! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:06'!westWatch	"Retorna el robot de la puerta OESTE."  ^ westWatch! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:06'!westWatch: aRobot	"Asigna el robot de la puerta OESTE."  westWatch := aRobot! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:06'!southWatch	"Retorna el robot de la puerta SUR."  ^ southWatch! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:07'!southWatch: aRobot	"Asigna el robot de la puerta SUR."  southWatch := aRobot! !OTFRobot subclass: #WalkingBrushRobot	instanceVariableNames: 'battery state defaultPosition'	classVariableNames: ''	category: 'BotArena-Robots'!!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 11/14/2015 13:15'!defaultPosition: aPosition  defaultPosition := aPosition! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 11/14/2015 13:16'!defaultPosition  ^ defaultPosition! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 11/14/2015 13:16'!resetPosition  self position: defaultPosition! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 11/14/2015 13:16' prior: 34109277!rectangleWithBase: aBase andHeight: aHeight  2 timesRepeat: [    self      move: aBase;      rotRight: 90;      move: aHeight;      rotRight: 90 ]! !!WalkingBrushRobot methodsFor: 'brush' stamp: 'northEast 11/14/2015 13:17' prior: 34151920!rectangleWithBase: aBase andHeight: aHeight	"Realiza un rectangulo con base 'aBase' y altura 'aHeight'"  2 timesRepeat: [    self      move: aBase;      rotRight: 90;      move: aHeight;      rotRight: 90 ]! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:18'!setEastWatch: aRobot	"Setea un robot en la puerta ESTE y lo posiciona en ella."  self eastWatch: aRobot.  self eastWatch      defaultPosition: (36@26);      east.    robots add: eastWatch.! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:18'!setNorthWatch: aRobot	"Setea un robot en la puerta NORTE y lo posiciona en ella."  self northWatch: aRobot.  self northWatch    defaultPosition: (26@16);    north.  robots add: northWatch! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:20'!setSouthWatch: aRobot	"Setea el robot en la puerta SUR y lo posiciona en ella."	self southWatch: aRobot.	self southWatch		defaultPosition: 26 @ 36;		south.	robots add: southWatch! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:20' prior: 34153032!setSouthWatch: aRobot	"Setea el robot en la puerta SUR y lo posiciona en ella."	self southWatch: aRobot.	self southWatch		defaultPosition: 26 @ 36;		south.	robots add: southWatch! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:20'!setWestWatch: aRobot	"Setea el robot en la puerta OESTE y lo posiciona en ella."  self westWatch: aRobot.  self westWatch    defaultPosition: (16@26);    west.  robots add: westWatch.! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:20'!reset  self robots do: [ :robot| robot resetPosition ]! !!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:21' prior: 34153870!reset	"Posiciona a los robots en sus respectivas puertas."  self robots do: [ :robot| robot resetPosition ]! !----SNAPSHOT----2015-11-14T13:21:53.775675-03:00 backupcastle.image priorSource: 555000!----SNAPSHOT----2015-11-14T13:22:00.589675-03:00 Pharo4.0.image priorSource: 599709!----SNAPSHOT----2015-11-14T13:29:05.649675-03:00 Pharo4.0.image priorSource: 599799!!CastleWatch methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:29'!northWatch: aRobotN southWatch: aRobotS eastWatch: aRobotE westWatch: aRobotW  self    setNorthWatch: aRobotN;    setSouthWatch: aRobotS;    setEastWatch: aRobotE;    setWestWatch: aRobotW.! !----SNAPSHOT----2015-11-14T13:31:03.030675-03:00 Pharo4.0.image priorSource: 599885!----SNAPSHOT----2015-11-14T13:36:00.155675-03:00 Pharo4.0.image priorSource: 600253!----SNAPSHOT----2015-11-14T13:36:31.776675-03:00 Pharo4.0.image priorSource: 600339!----SNAPSHOT----2015-11-14T13:36:46.792675-03:00 Pharo4.0.image priorSource: 600425!----SNAPSHOT----2015-11-14T13:36:52.918675-03:00 Pharo4.0.image priorSource: 600511!----SNAPSHOT----2015-11-14T13:36:59.993675-03:00 Pharo4.0.image priorSource: 600597!----STARTUP----2015-11-14T13:37:36.818724-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----STARTUP----2015-11-14T13:38:01.526406-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----SNAPSHOT----2015-11-14T13:38:15.608406-03:00 backupcastle.image priorSource: 600683!----SNAPSHOT----2015-11-14T13:38:40.292406-03:00 backupcastle.image priorSource: 679293!Object subclass: #Wallpost	instanceVariableNames: 'likes featured text'	classVariableNames: ''	category: 'Wallpost'!!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:39'!text: aString  "Setea el texto descriptivo de la publicación"  text := aString! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:40' prior: 34234108!text: aString  "Setea el texto de la publicación"  text := aString! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:40'!text  "Retorna el texto de la publicación"  ^ text! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:40'!likes  "Retorna la cantidad de 'me gusta' "  ^ likes! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:41'!likes: aNumber  "Setter para likes"  likes := aNumber! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:41'!dislike  "Decrementa la cantidad de likes en uno (si ya es 0, no hace nada)"  self likes > 0 ifTrue: [ self likes: self likes - 1 ]! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:41'!featured  "getter para featured"  ^ featured! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:41'!featured: aValue  "setter para featured"  featured := aValue! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:42'!isFeatured  "Retorna true si el post esta marcado como destacado, false en caso contrario"  ^ self featured! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:42'!toggleFeatured  "Cambia el post del estado destacado a no destacado y viceversa"  self featured: self featured not! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:42'!initialize  "Inicializa el estado de las variables de instancia del Wallpost. Luego de  la invocación el Wallpost debe tener como texto: 'Undefined post', no debe  estar marcado como destacado y la cantidad de 'Me gusta' deben ser 0."  self    text: 'Undefined post';    featured: false;    likes: 0.! !----SNAPSHOT----2015-11-14T13:43:56.327406-03:00 backupcastle.image priorSource: 679383!!Wallpost methodsFor: 'as yet unclassified' stamp: 'northEast 11/14/2015 13:45'!like  "Incrementa la cantidad de likes en uno"  self likes: self likes + 1! !----SNAPSHOT----2015-11-14T13:46:13.324406-03:00 backupcastle.image priorSource: 681642!----SNAPSHOT----2015-11-14T13:47:15.208406-03:00 Ejercicio 6.image priorSource: 681894!----SNAPSHOT----2015-11-14T13:47:21.705406-03:00 Pharo4.0.image priorSource: 681984!----SNAPSHOT----2015-11-14T20:27:46.381406-03:00 Pharo4.0.image priorSource: 682073!----STARTUP----2015-11-15T18:27:31.429323-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----SNAPSHOT----2015-11-15T18:47:52.906323-03:00 Pharo4.0.image priorSource: 682159!----SNAPSHOT----2015-11-15T18:51:54.161323-03:00 Pharo4.0.image priorSource: 721507!----SNAPSHOT----2015-11-15T18:52:56.086323-03:00 Pharo4.0.image priorSource: 721593!----SNAPSHOT----2015-11-15T19:08:58.004323-03:00 Pharo4.0.image priorSource: 721679!Object subclass: #Triangle	instanceVariableNames: 'base altura'	classVariableNames: ''	category: 'Triangles'!Smalltalk globals removeClassNamed: #Triangle!Object subclass: #TrianguloRectangulo	instanceVariableNames: 'base altura'	classVariableNames: ''	category: 'Triangles'!!TrianguloRectangulo methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 19:27'!superficie	"Retorna la superficie del triangulo."	^(self base * self altura) / 2! !!TrianguloRectangulo methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 19:27'!hipotenusa  "calcula la hipotenusa del triangulo"  ^ (self base squared + self altura squared) sqrt! !!TrianguloRectangulo methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 19:27'!perimetro  "calcula el perimetro del triangulo"  ^ self base + self altura + self hipotenusa.! !!TrianguloRectangulo methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 19:27'!perimetroMayorQue: unPerimetro  ^ self perimetro > unPerimetro! !----SNAPSHOT----2015-11-15T19:34:12.924323-03:00 Ejercicio 9.image priorSource: 721765!----SNAPSHOT----2015-11-15T19:34:18.633323-03:00 Pharo4.0.image priorSource: 722866!----SNAPSHOT----2015-11-15T19:34:21.530323-03:00 Pharo4.0.image priorSource: 722955!Object subclass: #Document	instanceVariableNames: 'title body'	classVariableNames: ''	category: 'Documents'!!Document methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 20:30'!title: aTitle	title:= aTitle.! !!Document methodsFor: 'inicializacion' stamp: 'northEast 11/15/2015 20:31'!title	^title! !!Document methodsFor: 'inicializacion' stamp: 'northEast 11/15/2015 20:31'!body: aBody	body:= aBody.! !!Document methodsFor: 'inicializacion' stamp: 'northEast 11/15/2015 20:31'!body	^body! !!Document methodsFor: 'inicializacion' stamp: 'northEast 11/15/2015 20:32'!size	^self body size + self title size + (self body size * 0.1).! !!Document methodsFor: 'inicializacion' stamp: 'northEast 11/15/2015 20:32'!addLine: aString  "Agrega (concatena) al body la linea aString"  self body: self body, aString.! !!Document methodsFor: 'inicializacion' stamp: 'northEast 11/15/2015 20:33' prior: 34278154!size "Retorna el tamaño del documento que es la suma del tamaño del título, el  tamaño del body y el overhead del documento que siempre es el 10% del body"	^self body size + self title size + (self body size * 0.1).! !!Document methodsFor: 'inicializacion' stamp: 'northEast 11/15/2015 20:33'!titled: aString  "Retorna una nueva instancia de Document, cuyo título es aString"  ^ self new title: aString; body:''.! !!Document class methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 20:37'!titled: aTitle	^self new title: aTitle body:''.! !!Document class methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 20:37' prior: 34279010!titled: aString  "Retorna una nueva instancia de Document, cuyo título es aString"  ^ self new title: aString; body:''.! !Document removeSelector: #titled:!----SNAPSHOT----2015-11-15T20:37:25.208323-03:00 Pharo4.0.image priorSource: 723041!----SNAPSHOT----2015-11-15T20:37:42.241323-03:00 Pharo4.0.image priorSource: 724896!----SNAPSHOT----2015-11-15T20:45:11.709323-03:00 Ejercicio 2.image priorSource: 724982!----SNAPSHOT----2015-11-15T20:45:18.211323-03:00 Pharo4.0.image priorSource: 725068!----SNAPSHOT----2015-11-15T20:45:20.101323-03:00 Pharo4.0.image priorSource: 725157!----SNAPSHOT----2015-11-15T20:45:28.204323-03:00 Pharo4.0.image priorSource: 725243!Battery subclass: #NonRechargeableBattery!Battery subclass: #NonRechargeableBattery	instanceVariableNames: ''	classVariableNames: ''	category: 'Bot-Arena Modules'!Battery subclass: #NonRechargeableBattery	instanceVariableNames: ''	classVariableNames: ''	category: 'BotArena-Modules'!!NonRechargeableBattery methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 23:54'!canConsume: anInteger  ^ charge >= anInteger.! !Battery subclass: #RechargeableBattery	instanceVariableNames: ''	classVariableNames: ''	category: 'BotArena-Modules'!!RechargeableBattery methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 23:57'!recharge  ^ self subclassResponsibility.! !!RechargeableBattery methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 23:58'!canConsume: anInteger  ^ anInteger <= capacity.! !!RechargeableBattery methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 23:58'!basicConsume: anInteger  charge := charge - anInteger.  charge <= (capacity / 10)    ifTrue: [self recharge].! !!Battery methodsFor: 'consume' stamp: 'northEast 11/15/2015 23:58'!basicConsume: anInteger  charge := charge - anInteger.! !RechargeableBattery subclass: #RechargeableAlkalineBattery	instanceVariableNames: ''	classVariableNames: ''	category: 'BotArena-Modules'!!RechargeableAlkalineBattery methodsFor: 'as yet unclassified' stamp: 'northEast 11/15/2015 23:59'!recharge  charge := capacity.  Transcript show: 'Recharging alkaline battery...'! !RechargeableBattery subclass: #RechargeableFuelBattery	instanceVariableNames: ''	classVariableNames: ''	category: 'BotArena-Modules'!!RechargeableFuelBattery methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 00:00'!recharge  charge := capacity.  Transcript show: 'Recharging fuel battery...'! !----SNAPSHOT----2015-11-16T00:00:43.445323-03:00 Pharo4.0.image priorSource: 725329!!Battery methodsFor: 'initialize-release' stamp: 'northEast 11/16/2015 00:04' prior: 34081601!initialize	self capacity: self defaultCapacity.	self charge: self capacity.	^ self! !----SNAPSHOT----2015-11-16T00:13:47.812323-03:00 Ejercicio 3.image priorSource: 727237!----SNAPSHOT----2015-11-16T00:13:54.335323-03:00 Pharo4.0.image priorSource: 727507!----SNAPSHOT----2015-11-16T00:24:30.038323-03:00 Pharo4.0.image priorSource: 727596!Object subclass: #Profile  instanceVariableNames: 'name likes posts karma'  classVariableNames: ''  category: 'ProfileAndKarma'.!!Profile methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 00:24'!like  self likes: self likes + 1.! !!Profile methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 00:25'! ncPosts  self posts: self posts + 10.! !!Profile methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 00:25'!incPosts  self posts: self posts + 10.! !Profile removeSelector: #ncPosts!!Profile methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 00:25'!initialize  self    karma: 0;    resetear.! !!Profile methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 00:26'!newWithName: aName   ^ self new name: aName.! !!Profile methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 00:26'!resetear  self    posts: 0;    likes: 0.! !!Profile methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 00:26'!set_points  |var|  var:= self calcKarma.  (var between: 31 and: 50)    ifTrue: [ self karma: self karma + 2 ].  (var > 50)    ifTrue: [ self karma: self karma + 3 ].  self resetear.! !!Profile methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 00:26'!calcKarma  ^ self subclassResponsibility! !Profile subclass: #Gold  instanceVariableNames: ''  classVariableNames: ''  category: 'ProfileAndKarma'.!!Gold methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 00:27'!calcKarma  ^ self posts * self likes / Float halfPi.! !Profile subclass: #Silver  instanceVariableNames: ''  classVariableNames: ''  category: 'ProfileAndKarma'.!!Silver methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 00:27'!calcKarma  ^ self posts * self likes / Float pi.! !----SNAPSHOT----2015-11-16T01:09:05.420323-03:00 Ejercicio 4.image priorSource: 727682!----SNAPSHOT----2015-11-16T01:09:10.260323-03:00 Pharo4.0.image priorSource: 729571!----SNAPSHOT----2015-11-16T02:21:44.049323-03:00 Pharo4.0.image priorSource: 729660!Object subclass: #Producto  instanceVariableNames: 'name price'  classVariableNames: ''  category: 'BotArena'.!!Producto class methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 02:22'!newWithName: aName price: aPrice  ^self new    name: aName;    preis: aPrice.! !----SNAPSHOT----2015-11-16T02:53:40.848323-03:00 Pharo4.0.image priorSource: 729746!----SNAPSHOT----2015-11-16T02:54:10.745323-03:00 Ejercicio 7.image priorSource: 730119!----SNAPSHOT----2015-11-16T02:54:16.138323-03:00 Pharo4.0.image priorSource: 730205!----SNAPSHOT----2015-11-16T02:54:21.388323-03:00 Pharo4.0.image priorSource: 730294!----STARTUP----2015-11-16T12:46:54.638196-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!Object subclass: #DateLapse	instanceVariableNames: 'from to'	classVariableNames: ''	category: 'DateLapse'!!DateLapse class methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 18:43'!new	"Retorna error ya que una instancia de DateLapse debe crearse con el mensaje de clase #from:to:"	^ self error: 'A DateLapse must be created with the message #from:to:'! !!DateLapse class methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 18:43'!from: aDate to: anotherDate	"Crea un DateLapse que abarca el intervalo cerrado comprendido entre aDate y anotherDate."	^ super new from: aDate to: anotherDate! !!DateLapse methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 18:43'!sizeInDays	^ self to subtractDate: self from.! !!DateLapse methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 18:43' prior: 34324873!sizeInDays	"Retorna la cantidad de días entre la fecha from y la fecha to"	^ self to subtractDate: self from.! !!DateLapse methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 18:44'!includesDate: aDate	"Recibe un objeto Date y retorna true si la fecha esta entre el 'from' y el	 'to' del receptor y false en caso contrario"	^ aDate between: self from and: self to.! !!DateLapse methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 18:44'!from: aDate to: anotherDate	"inicializa el receptor representando el intervalo cerrado comprendido por aDate y anotherDate"	self		from: aDate;		to: anotherDate.! !!DateLapse methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 18:44'!from	^ from.! !!DateLapse methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 18:44'!to		^to.! !!DateLapse methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 18:44'!from: aDate	from := aDate.! !!DateLapse methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 18:45'!to: aDate	to:= aDate.! !----SNAPSHOT----2015-11-16T18:45:27.507196-03:00 Pharo4.0.image priorSource: 730380!'From Pharo3.0 of 18 March 2013 [Latest update: #30806] on 2 October 2014 at 6:24:40.40031 pm'!TestCase subclass: #DateLapseTest	instanceVariableNames: 'dateLapse'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-DateLapse'!!DateLapseTest methodsFor: 'testing' stamp: 'Anonymous 10/2/2014 17:57'!testFromTo	"testea el mensaje from:to:"	self dateLapse from: (Date newDay: 20 month: #May year: 2014) to: (Date newDay: 20 month:9 year: 2014).	self assert: self dateLapse from = (Date newDay: 20 month: #May year: 2014).	self assert: self dateLapse to = (Date newDay: 20 month: #Sep year: 2014)! !!DateLapseTest methodsFor: 'testing' stamp: 'Anonymous 10/2/2014 17:48'!testIncludesDate	"testea el mensaje includesDate"	self dateLapse from: (Date newDay: 12 month:#Sep year: 2014) 	                        to: (Date newDay: 20 month:#Sep year: 2014).		self assert: (self dateLapse includesDate: (Date newDay: 12 month:#Sep year: 2014)) = true.		self assert: (self dateLapse includesDate: (Date newDay: 20 month:#Sep year: 2014)) = true.		self assert: (self dateLapse includesDate: (Date newDay: 16 month:#Sep year: 2014)) = true.		self assert: (self dateLapse includesDate: (Date newDay: 16 month:#Nov year: 2014)) = false! !!DateLapseTest methodsFor: 'testing' stamp: 'Anonymous 10/2/2014 18:08'!testSizeInDays	"testea el mensaje sizeInDays"	self dateLapse from: (Date newDay:20 month: 9 year: 2014)				      to: (Date newDay: 20 month: 9 year: 2014).	self assert: self dateLapse sizeInDays = 0.      self dateLapse from: (Date newDay:20 month: 9 year: 2013)				      to: (Date newDay: 20 month: 9 year: 2014).	self assert: self dateLapse sizeInDays = 365.      self dateLapse from: (Date newDay: 20 month: 9 year: 2012)				      to: (Date newDay: 20 month: 9 year: 2014).	self assert: self dateLapse sizeInDays = 730.! !!DateLapseTest methodsFor: 'accessing' stamp: 'Anonymous 10/2/2014 17:39'!dateLapse	^ dateLapse! !!DateLapseTest methodsFor: 'accessing' stamp: 'Anonymous 10/2/2014 17:40'!dateLapse: anObject	dateLapse := anObject! !!DateLapseTest methodsFor: 'initialize-release' stamp: 'Anonymous 10/2/2014 17:57'!setUp	self dateLapse: (DateLapse from: (Date newDay: 31											  month: 12										        year: 1973)								 to: (Date newDay: 28										   month: 12										   year: 1982))! !!DateLapseTest methodsFor: 'testing' stamp: 'Anonymous 10/2/2014 17:57' prior: 34326481!testFromTo	"testea el mensaje from:to:"	self dateLapse from: (Date newDay: 20 month: #May year: 2014) to: (Date newDay: 20 month:9 year: 2014).	self assert: self dateLapse from = (Date newDay: 20 month: #May year: 2014).	self assert: self dateLapse to = (Date newDay: 20 month: #Sep year: 2014)! !!DateLapseTest methodsFor: 'testing' stamp: 'Anonymous 10/2/2014 17:48' prior: 34326857!testIncludesDate	"testea el mensaje includesDate"	self dateLapse from: (Date newDay: 12 month:#Sep year: 2014) 	                        to: (Date newDay: 20 month:#Sep year: 2014).		self assert: (self dateLapse includesDate: (Date newDay: 12 month:#Sep year: 2014)) = true.		self assert: (self dateLapse includesDate: (Date newDay: 20 month:#Sep year: 2014)) = true.		self assert: (self dateLapse includesDate: (Date newDay: 16 month:#Sep year: 2014)) = true.		self assert: (self dateLapse includesDate: (Date newDay: 16 month:#Nov year: 2014)) = false! !!DateLapseTest methodsFor: 'testing' stamp: 'Anonymous 10/2/2014 18:08' prior: 34327498!testSizeInDays	"testea el mensaje sizeInDays"	self dateLapse from: (Date newDay:20 month: 9 year: 2014)				      to: (Date newDay: 20 month: 9 year: 2014).	self assert: self dateLapse sizeInDays = 0.      self dateLapse from: (Date newDay:20 month: 9 year: 2013)				      to: (Date newDay: 20 month: 9 year: 2014).	self assert: self dateLapse sizeInDays = 365.      self dateLapse from: (Date newDay: 20 month: 9 year: 2012)				      to: (Date newDay: 20 month: 9 year: 2014).	self assert: self dateLapse sizeInDays = 730.! !!DateLapseTest methodsFor: 'accessing' stamp: 'Anonymous 10/2/2014 17:39' prior: 34328112!dateLapse	^ dateLapse! !!DateLapseTest methodsFor: 'accessing' stamp: 'Anonymous 10/2/2014 17:40' prior: 34328213!dateLapse: anObject	dateLapse := anObject! !!DateLapseTest methodsFor: 'initialize-release' stamp: 'Anonymous 10/2/2014 17:57' prior: 34328343!setUp	self dateLapse: (DateLapse from: (Date newDay: 31											  month: 12										        year: 1973)								 to: (Date newDay: 28										   month: 12										   year: 1982))! !----End fileIn----!TestCase subclass: #TestDelaunayElement	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'DelaunayTriangulation-Test'!!TestDelaunayElement methodsFor: 'testing' stamp: 'federicobalaguer 10/15/2014 09:12'!testThreeTriangle	| triangle |	triangle := DelaunayElement withPoints: (OrderedCollection with: 1 @ 1 with: 1 @ 2 with: 3 @ 0).	self should: [ triangle area closeTo: 0.999999999999999 ].	self should: [ triangle perimeter closeTo: 6.06449510224598 ]! !!TestDelaunayElement methodsFor: 'testing' stamp: 'federicobalaguer 10/15/2014 09:13'!testTwoTriangle	| triangle |	triangle := DelaunayElement withPoints: (OrderedCollection with: 0 @ 0 with: -4 @ 0 with: 0 @ -4).	self should: [ triangle area closeTo: 8.0 ].	self should: [ triangle perimeter closeTo: 13.656 ]! !!TestDelaunayElement methodsFor: 'testing' stamp: 'federicobalaguer 10/24/2014 11:32'!testNeighborElement	| t1 t2 t3 |	t1 := DelaunayElement withPoints: (OrderedCollection with: -1 @ -1 with: -1 @ -3 with: -3 @ 4).	t2 := DelaunayElement withPoints: (OrderedCollection with: -3 @ 0 with: -1 @ -3 with: -1 @ -1).	t3 := DelaunayElement withPoints: (OrderedCollection with: 1 @ 1 with: 1 @ 3 with: 3 @ -4).	self should: [ t1 isNeighborElement: t2 ].	self shouldnt: [ t1 isNeighborElement: t3 ]! !!TestDelaunayElement methodsFor: 'testing' stamp: 'federicobalaguer 10/15/2014 09:26'!testVertex	| t1 |	t1 := DelaunayElement withPoints: (OrderedCollection with: -1 @ -1 with: -1 @ -3 with: -3 @ 4).	self should: [ t1 isVertex: -1 @ -1 ].	self shouldnt: [ t1 isVertex: 1 @ 1 ]! !!TestDelaunayElement methodsFor: 'testing' stamp: 'federicobalaguer 10/24/2014 11:18'!testShareSide	| t1 t2 t3 |	t1 := DelaunayElement withPoints: (OrderedCollection with: -1 @ -1 with: -1 @ -3 with: -3 @ 4).	t2 := DelaunayElement withPoints: (OrderedCollection with: -3 @ 0 with: -1 @ -3 with: -1 @ -1).	t3 := DelaunayElement withPoints: (OrderedCollection with: 1 @ 1 with: 1 @ 3 with: 3 @ -4).	self should: [ t1 shareSide: t2 ].	self shouldnt: [ t1 shareSide: t3 ]! !!TestDelaunayElement methodsFor: 'testing' stamp: 'federicobalaguer 10/15/2014 09:10'!testOneTriangle	| triangle |	triangle := DelaunayElement withPoints: (OrderedCollection with: 0 @ 0 with: 4 @ 0 with: 0 @ 4).	self should: [ triangle area closeTo: 8.0  ].	self should: [ triangle perimeter closeTo: 13.656 ]! !!TestDelaunayElement methodsFor: 'testing' stamp: 'federicobalaguer 10/15/2014 09:09'!testFourTriangle	| triangle |	triangle := DelaunayElement withPoints: (OrderedCollection with: -1 @ -1 with: -1 @ -2 with: -3 @ 0).	self should: [ triangle area closeTo: 0.999999999999999 ].	self should: [ triangle perimeter closeTo: 6.06449510224598 ]! !!TestDelaunayElement methodsFor: 'testing' stamp: 'federicobalaguer 10/15/2014 09:11'!testSameAs	| t1 t2 |	t1 := DelaunayElement withPoints: (OrderedCollection with: -1 @ -1 with: -1 @ -2 with: -3 @ 0).	t2 := DelaunayElement withPoints: (OrderedCollection with: -3 @ 0 with: -1 @ -2 with: -1 @ -1).	self should: [ t1 sameAs: t2 ]! !TestCase subclass: #TestEdge	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'DelaunayTriangulation-Test'!!TestEdge methodsFor: 'testing' stamp: 'federicobalaguer 11/11/2015 00:00'!testSetIntersection	| e1 e2 e3 s1 s2 |	e1 := Edge points: (OrderedCollection with: 1 @ 1 with: -1 @ -1).	e2 := Edge points: (OrderedCollection with: -2 @ -1 with: 1 @ 1).	e3 := Edge points: (OrderedCollection with: -1 @ -1 with: 1 @ 1).	s1 := Set with: e1 with: e2.	s2 := Set with: e3.	self should: [ (s1 intersection: s2) notEmpty ]! !!TestEdge methodsFor: 'testing' stamp: 'federicobalaguer 10/24/2014 14:29'!testEquality	| e1 e2 |	e1 := Edge points: (OrderedCollection with: 1 @ 1 with: -1 @ -1).	e2 := Edge points: (OrderedCollection with: -1 @ -1 with: 1 @ 1).	self should: [ e1 = e2 ]! !!TestEdge methodsFor: 'testing' stamp: 'federicobalaguer 10/24/2014 14:40'!testConstructors	| e1 e2 |	e1 := Edge p1: 1 @ 1 p2: -1 @ -1.	e2 := Edge points: (OrderedCollection with: -1 @ -1 with: 1 @ 1).	self should: [ e1 = e2 ]! !TestCase subclass: #TestMesh	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'DelaunayTriangulation-Test'!!TestMesh methodsFor: 'testing' stamp: 'federicobalaguer 10/15/2014 09:30'!testOneTriangle	| mesh |	mesh := DelaunayMesh fromVertices: self oneTriangle.	self should: [ mesh area closeTo: 8.0 ].	self should: [ mesh perimeter closeTo: 13.656 ]! !!TestMesh methodsFor: 'testing' stamp: 'federicobalaguer 10/15/2014 09:30'!testThreeTriangles	| mesh |	mesh := DelaunayMesh fromVertices: self threeTriangles.	self should: [ mesh area closeTo: 24.0 ].	self should: [ mesh perimeter closeTo: 24.97 ]! !!TestMesh methodsFor: 'testing' stamp: 'federicobalaguer 10/15/2014 09:29'!testFourTriangles	| mesh |	mesh := DelaunayMesh fromVertices: self fourTriangles.	self should: [ mesh area closeTo: 32.0 ].	self should: [ mesh perimeter closeTo: 22.627 ]! !!TestMesh methodsFor: 'testing' stamp: 'federicobalaguer 10/15/2014 09:30'!testTwoTriangles	| mesh |	mesh := DelaunayMesh fromVertices: self twoTriangles.	self should: [ mesh area closeTo: 16.0 ].	self should: [ mesh perimeter closeTo: 13.656 * 2 ]! !!TestMesh methodsFor: 'private' stamp: 'FedericoBalaguer 5/15/2013 16:41'!twoTriangles	^ OrderedCollection		with: (Array with: 0 @ 0 with: 4 @ 0 with: 0 @ 4)		with: (Array with: 0 @ 0 with: -4 @ 0 with: 0 @ -4)! !!TestMesh methodsFor: 'private' stamp: 'FedericoBalaguer 5/20/2013 23:28'!threeTriangles	^ OrderedCollection		with: (Array with: 0 @ 0 with: 4 @ 0 with: 0 @ 4)		with: (Array with: 0 @ 0 with: -4 @ 0 with: 0 @ -4)		with: (Array with: 0 @ 0 with: -4 @ 0 with: 0 @ 4)! !!TestMesh methodsFor: 'private' stamp: 'FedericoBalaguer 5/15/2013 16:41'!oneTriangle	^ OrderedCollection with: (Array with: 0 @ 0 with: 4 @ 0 with: 0 @ 4)! !!TestMesh methodsFor: 'private' stamp: 'federicobalaguer 11/11/2015 00:06'!fourTriangles	^ OrderedCollection		with: (Array with: 0 @ 0 with: 4 @ 0 with: 0 @ 4)		with: (Array with: 0 @ 0 with: -4 @ 0 with: 0 @ -4)		with: (Array with: 0 @ 0 with: -4 @ 0 with: 0 @ 4)		with: (Array with: 0 @ 0 with: 4 @ 0 with: 0 @ -4)! !----End fileIn----!'From Pharo3.0 of 18 March 2013 [Latest update: #30806] on 3 October 2014 at 4:26:18.99153 pm'!TestCase subclass: #TestBoolean	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-TestBoolean'!!TestBoolean methodsFor: 'testing' stamp: 'Anonymous 10/3/2014 16:24'!testImplies	self assert: (false implies: false).	self assert: (false implies: true).	self deny: (true implies: false).	self assert: (true implies: true)! !!TestBoolean methodsFor: 'testing' stamp: 'Anonymous 10/3/2014 16:25'!testNor	self assert: (false nor: false).	self deny: (false nor: true).	self deny: (true nor: false).	self deny: (true nor: true)! !!TestBoolean methodsFor: 'testing' stamp: 'Anonymous 10/3/2014 16:25'!testNand	self assert: (false nand: false).	self assert: (false nand: true).	self assert: (true nand: false).	self deny: (true nand: true)! !!TestBoolean methodsFor: 'testing' stamp: 'Anonymous 10/3/2014 16:24' prior: 34337394!testImplies	self assert: (false implies: false).	self assert: (false implies: true).	self deny: (true implies: false).	self assert: (true implies: true)! !!TestBoolean methodsFor: 'testing' stamp: 'Anonymous 10/3/2014 16:25' prior: 34337625!testNor	self assert: (false nor: false).	self deny: (false nor: true).	self deny: (true nor: false).	self deny: (true nor: true)! !!TestBoolean methodsFor: 'testing' stamp: 'Anonymous 10/3/2014 16:25' prior: 34337832!testNand	self assert: (false nand: false).	self assert: (false nand: true).	self assert: (true nand: false).	self deny: (true nand: true)! !----End fileIn----!'From Pharo3.0 of 18 March 2013 [Latest update: #30806] on 2 October 2014 at 5:55:13.64131 pm'!Object subclass: #DateLapse	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-DateLapse'!!DateLapse commentStamp: 'Anonymous 10/2/2014 17:55' prior: 0!A DateLapse class representa el lapso de tiempo entre dos fechas.!!DateLapse methodsFor: 'initialization' stamp: '' prior: 34325491!from: aDate to: anotherDate	"inicializa el receptor representando el intervalo cerrado comprendido por aDate y anotherDate"	"borre la siguiente expresion e implemente correctamente este mensaje:"	self error: 'Not implemented!!'! !!DateLapse methodsFor: 'initialization' stamp: '' prior: 34339130!from: aDate to: anotherDate	"inicializa el receptor representando el intervalo cerrado comprendido por aDate y anotherDate"	"borre la siguiente expresion e implemente correctamente este mensaje:"	self error: 'Not implemented!!'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DateLapse class	instanceVariableNames: ''!!DateLapse commentStamp: '<historical>' prior: 34338995!!!DateLapse class methodsFor: 'instance creation' stamp: '' prior: 34324626!from: aDate to: anotherDate	"Crea un DateLapse que abarca el intervalo cerrado comprendido entre aDate y anotherDate."	^ super new from: aDate to: anotherDate! !!DateLapse class methodsFor: 'instance creation' stamp: '' prior: 34324360!new	"Retorna error ya que una instancia de DateLapse debe crearse con el mensaje de clase #from:to:"	^ self error: 'A DateLapse must be created with the message #from:to:'! !!DateLapse class methodsFor: 'instance creation' stamp: '' prior: 34339908!from: aDate to: anotherDate	"Crea un DateLapse que abarca el intervalo cerrado comprendido entre aDate y anotherDate."	^ super new from: aDate to: anotherDate! !!DateLapse class methodsFor: 'instance creation' stamp: '' prior: 34340149!new	"Retorna error ya que una instancia de DateLapse debe crearse con el mensaje de clase #from:to:"	^ self error: 'A DateLapse must be created with the message #from:to:'! !----End fileIn----!Object subclass: #DateLapse	instanceVariableNames: 'from to'	classVariableNames: ''	category: 'Objetos1-DateLapse'!!DateLapse methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 18:49' prior: 34339433!from: aDate to: anotherDate	"inicializa el receptor representando el intervalo cerrado comprendido por aDate y anotherDate"	self		from: aDate;		to: anotherDate.! !----SNAPSHOT----2015-11-16T18:53:04.524196-03:00 Ejercicio 2.3.image priorSource: 771642!----SNAPSHOT----2015-11-16T18:53:12.110196-03:00 Pharo4.0.image priorSource: 786797!'From Pharo3.0 of 18 March 2013 [Latest update: #30858] on 22 October 2014 at 7:21:26.893689 am'!Object subclass: #DateLapse
	instanceVariableNames: 'from sizeInDays'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Objetos1-DateLapse'!!DateLapse commentStamp: 'IvanKarl 10/22/2014 07:20' prior: 34339830!A DateLapse is a range of dates.

Instance Variables
	from:		<Object>
	sizeInDays:		<Object>

from
	- xxxxx

sizeInDays
	- xxxxx
!!DateLapse methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/22/2014 07:21' prior: 34325219!includesDate: aDate
	"Recibe un objeto Date y retorna true si la fecha esta entre el 'from' 
	y el 'to' del receptor y false en caso contrario"

	^ aDate between: self from and: self to.! !!DateLapse methodsFor: 'initialization' stamp: 'IvanKarl 10/22/2014 07:20' prior: 34341061!from: aDate to: anotherDate
	"inicializa el receptor representando el intervalo cerrado comprendido por aDate y anotherDate"

	self
		from: aDate;
		sizeInDays: (anotherDate subtractDate: aDate)! !!DateLapse methodsFor: 'accessing' stamp: 'IvanKarl 10/22/2014 07:20' prior: 34325936!from: aDate
	from := aDate.! !!DateLapse methodsFor: 'accessing' stamp: 'IvanKarl 10/22/2014 07:21'!sizeInDays: aSize
	sizeInDays := aSize.! !!DateLapse methodsFor: 'accessing' stamp: 'camila 10/21/2014 11:23' prior: 34325841!to	
	"Retorna la fecha de fin del rango"
	^self from addDays: self sizeInDays 
	! !!DateLapse methodsFor: 'accessing' stamp: 'IvanKarl 10/22/2014 07:21' prior: 34325021!sizeInDays
	"retorna la cantidad de dÌas entre la fecha from y la fecha to"

	^ sizeInDays.! !!DateLapse methodsFor: 'accessing' stamp: 'camila 10/21/2014 11:19' prior: 34325742!from
	"Retorna la fecha de inicio del rango"

	^ from! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DateLapse class
	instanceVariableNames: ''!!DateLapse commentStamp: '<historical>' prior: 34341730!!!DateLapse class methodsFor: 'instance creation' stamp: '' prior: 34340403!from: aDate to: anotherDate
	"Crea un DateLapse que abarca el intervalo cerrado comprendido entre aDate y anotherDate."

	^ super new from: aDate to: anotherDate! !!DateLapse class methodsFor: 'instance creation' stamp: '' prior: 34340644!new
	"Retorna error ya que una instancia de DateLapse debe crearse con el mensaje de clase #from:to:"

	^ self error: 'A DateLapse must be created with the message #from:to:'! !----End fileIn----!----SNAPSHOT----2015-11-16T18:58:46.391196-03:00 Ejercicio 2.5.image priorSource: 786888!!DateLapse methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 19:07'!~> aDate  ^DateLapse from: self to: aDate! !!DateLapse methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 19:08' prior: 34344054!~> aDate	"Crear una instancia de DateLapse a partir del envío de un mensaje a un objeto Date"  ^DateLapse from: self to: aDate! !'From Pharo3.0 of 18 March 2013 [Latest update: #30858] on 27 October 2014 at 8:56:15.818135 pm'!Object subclass: #DelaunayElement
	instanceVariableNames: 'vertices'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'BotArena'!!DelaunayElement commentStamp: 'IvanKarl 10/24/2014 11:41' prior: 0!A DelaunayElement is Triangle yo.

Instance Variables
	vertex1:		<Object>
	vertex2:		<Object>
	vertex3:		<Object>

vertex1
	- xxxxx

vertex2
	- xxxxx

vertex3
	- xxxxx
!!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:50'!vertex3
	^ vertices at: 3! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:51'!vertex1: aVertex
	vertices at: 1 put: aVertex.! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:48'!vertices: aCollection
	vertices := aCollection.! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:49'!vertex1
	^ vertices at: 1! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:50'!vertex3: aVertex
	vertices at: 3 put: aVertex.! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:51'!vertex2: aVertex
	vertices at: 2 put: aVertex.! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:51'!vertex2
	^ vertices at: 2! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:56'!vertices
	^ vertices! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'camila 10/21/2014 09:47'!perimeter
	^ self edge1 + self edge2 + self edge3! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/27/2014 20:55'!sameAs: aTriangle
	"retorna true si dos triangulos son iguales"

	^(self comun: aTriangle)  = 0.! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/27/2014 20:43'!isVertex: aPoint
 	^self vertices includes: aPoint. ! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'camila 10/21/2014 09:46'!area
	| s |
	s := self perimeter / 2.
	^ (s * (s - self edge1) * (s - self edge2) * (s - self edge3)) sqrt! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/24/2014 11:52'!initialize
	vertices := OrderedCollection new. ! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/27/2014 20:54'!shareSide: aTriangle
	"retorna si dos triangulos comparten un lado"
	^(self comun:aTriangle) <= 1.

	! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/27/2014 20:55'!isNeighborElement:aTriangle
"retorna true si son triangulos vecinos: no son el mismo y comparten un lado"
^(self comun: aTriangle)  = 1.! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'camila 10/21/2014 09:45'!edge3
	^ self vertex3 dist: self vertex1! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'camila 10/21/2014 09:46'!edge2
	^ self vertex2 dist: self vertex3! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'camila 10/21/2014 09:46'!edge1
	^ self vertex1 dist: self vertex2! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/27/2014 20:46'!comun: aTriangle
	"calcula cantidad de lados en comun"

	^ (self vertices reject: [ :vertex | aTriangle vertices includes: vertex ]) size.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DelaunayElement class
	instanceVariableNames: ''!!DelaunayElement commentStamp: '<historical>' prior: 34344643!!!DelaunayElement class methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/24/2014 11:47'!withPoints: aCollection
	^ self new
		vertices: aCollection;
		yourself! !----End fileIn----!!Boolean methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 19:39'!implies: aBoolean  ^self ==> [ aBoolean ].! !!Boolean methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 19:39'!nand: aBoolean  ^ (self & aBoolean) not.! !!Boolean methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 19:39'!nor: aBoolean  ^ (self | aBoolean) not.! !----SNAPSHOT----2015-11-16T19:40:18.174196-03:00 Ejercicio 2.5.image priorSource: 789448!----SNAPSHOT----2015-11-16T19:42:14.845196-03:00 Ejercicio 4.image priorSource: 793942!----SNAPSHOT----2015-11-16T19:42:20.571196-03:00 Pharo4.0.image priorSource: 794033!----SNAPSHOT----2015-11-16T19:49:27.256196-03:00 Pharo4.0.image priorSource: 794122!----SNAPSHOT----2015-11-16T20:03:22.308196-03:00 Pharo4.0.image priorSource: 794208!----SNAPSHOT----2015-11-16T20:04:06.296196-03:00 Pharo4.0.image priorSource: 794294!Object subclass: #Computadora	instanceVariableNames: 'memoria procesador discoduro'	classVariableNames: ''	category: 'Computadora'!Object subclass: #Memoria	instanceVariableNames: 'gb ghz'	classVariableNames: ''	category: 'Computadora'!Object subclass: #Memoria	instanceVariableNames: 'gb'	classVariableNames: ''	category: 'Computadora'!Object subclass: #Procesador	instanceVariableNames: 'ghz'	classVariableNames: ''	category: 'Computadora'!Procesador subclass: #X86	instanceVariableNames: 'arch'	classVariableNames: ''	category: 'Computadora'!Procesador subclass: #ARM	instanceVariableNames: 'arch'	classVariableNames: ''	category: 'Computadora'!Procesador subclass: #Itanium	instanceVariableNames: 'arch'	classVariableNames: ''	category: 'Computadora'!Object subclass: #HDD	instanceVariableNames: 'capacity'	classVariableNames: ''	category: 'Computadora'!!X86 methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 21:31'!arch	^arch.! !!X86 methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 21:32'!arch: anArch	arch:= anArch! !Smalltalk globals removeClassNamed: #ARM!Smalltalk globals removeClassNamed: #Itanium!Smalltalk globals removeClassNamed: #X86!Object subclass: #Procesador	instanceVariableNames: 'arch ghz'	classVariableNames: ''	category: 'Computadora'!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 21:56'!procesador	^procesador! !!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 21:56'!procesador: aProcessor	procesador:= aProcessor.! !!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 21:57'!memoria	^memoria! !!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 21:57'!memoria: aMemory	memoria:= aMemory! !!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:02'!hdd: aHDD	discoduro:= aHDD.! !!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:03'!hdd	^discoduro.! !!Computadora class methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:04'!newPro: aProcessor mem: aMemory hdd: aHDD	^self new procesador: aProcessor;				 memoria: aMemory;				 hdd: aHDD.! !Object subclass: #Computadora	instanceVariableNames: 'procesador memoria discoduro'	classVariableNames: ''	category: 'Computadora'!!HDD methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:07'!capacity	^capacity! !!HDD methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:07'!capacity: amount	capacity:= amount.! !!HDD class methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:09'!newAmount: amount	^self new capacity: amount.! !!Memoria methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:09'!gb	^gb! !!Memoria methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:09'!gb: amount	gb:= amount.! !!Procesador methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:10'!ghz	^ghz! !!Procesador methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:10'!ghz: amount	ghz:= amount! !!Procesador class methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:11'!newGhz: amount	^self new ghz: amount.! !!Procesador methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:12'!arch 	^arch! !!Procesador methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:12'!arch: anArch	arch:= anArch! !!Procesador class methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:12'!newGhz: amount arch: anArch	^self new ghz: amount; arch: anArch.! !Procesador class removeSelector: #newGhz:!!Memoria class methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:21'!newMem: amount	^self new memoria: amount.! !!Memoria class methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:21' prior: 34352670!newMem: amount	^self new gb: amount.! !----SNAPSHOT----2015-11-16T23:34:26.174196-03:00 Pharo4.0.image priorSource: 794380!----SNAPSHOT----2015-11-16T23:37:49.558196-03:00 Pharo4.0.image priorSource: 798426!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:41'!on	|string|	string:= 'Procesador: ', self procesador arch,' - ', self procesador ghz,				'Memoria: ', self memoria gb,				'Disco Duro: ', self hdd capacity.	! !!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:41' prior: 34353115!on	|string|	string:= 'Procesador: ', self procesador arch,' - ', self procesador ghz,				'Memoria: ', self memoria gb,				'Disco Duro: ', self hdd capacity.	Transcript show: string.	! !----SNAPSHOT----2015-11-16T23:42:49.877196-03:00 Pharo4.0.image priorSource: 798512!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:45' prior: 34353381!on	|pro mem hdd|	pro:= 'Procesador: ', self procesador arch, ' - ', self procesador ghz.	mem:=	'Memoria: ', self memoria gb.	hdd:=	'Disco Duro: ', self hdd capacity.	Transcript show: pro.	Transcript show: mem.	Transcript show: hdd.	! !----SNAPSHOT----2015-11-16T23:45:36.086196-03:00 Pharo4.0.image priorSource: 799140!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:49' prior: 34353759!on	|pro mem hdd|	pro:= self procesador arch, ' - ', self procesador ghz.	mem:=	self memoria gb.	hdd:=	self hdd capacity.	Transcript show: 'Procesador: '.	Transcript show: pro.	Transcript show: 'Memoria: '.	Transcript show: mem.	Transcript show: 'Disco Duro: '.	Transcript show: hdd.	! !----SNAPSHOT----2015-11-16T23:49:24.796196-03:00 Pharo4.0.image priorSource: 799570!----SNAPSHOT----2015-11-16T23:49:28.868196-03:00 Pharo4.0.image priorSource: 800054!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:50' prior: 34354189!on	|pro mem hdd|	pro:= self procesador arch, self procesador ghz.	mem:=	self memoria gb.	hdd:=	self hdd capacity.	Transcript show: 'Procesador: '.	Transcript show: pro.	Transcript show: 'Memoria: '.	Transcript show: mem.	Transcript show: 'Disco Duro: '.	Transcript show: hdd.	! !----SNAPSHOT----2015-11-16T23:50:11.567196-03:00 Pharo4.0.image priorSource: 800140!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:51' prior: 34354759!on	|pro mem hdd|	pro:= self procesador arch , self procesador ghz.	mem:=	self memoria gb.	hdd:=	self hdd capacity.	Transcript show: 'Procesador: '.	Transcript show: pro.	Transcript show: 'Memoria: '.	Transcript show: mem.	Transcript show: 'Disco Duro: '.	Transcript show: hdd.	! !----SNAPSHOT----2015-11-16T23:51:10.018196-03:00 Pharo4.0.image priorSource: 800617!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:53' prior: 34355236!on	|pro mem hdd|	pro:=''.	pro:= self procesador arch , self procesador ghz.	mem:=	self memoria gb.	hdd:=	self hdd capacity.	Transcript show: 'Procesador: '.	Transcript show: pro.	Transcript show: 'Memoria: '.	Transcript show: mem.	Transcript show: 'Disco Duro: '.	Transcript show: hdd.	! !----SNAPSHOT----2015-11-16T23:53:07.478196-03:00 Pharo4.0.image priorSource: 801095!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:54' prior: 34355714!on	Transcript show: 'Procesador: '.	Transcript show: self procesador arch.	Transcript show: self procesador ghz.	Transcript show: 'Memoria: '.	Transcript show: self memoria gb.	Transcript show: 'Disco Duro: '.	Transcript show: self hdd capacity.	! !----SNAPSHOT----2015-11-16T23:54:45.839196-03:00 Pharo4.0.image priorSource: 801583!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:55' prior: 34356202!on	Transcript clear.	Transcript show: 'Procesador: '.	Transcript show: self procesador arch.	Transcript show: self procesador ghz.	Transcript show: 'Memoria: '.	Transcript show: self memoria gb.	Transcript show: 'Disco Duro: '.	Transcript show: self hdd capacity.	! !----SNAPSHOT----2015-11-16T23:55:23.688196-03:00 Pharo4.0.image priorSource: 802027!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:56' prior: 34356646!on	Transcript clear.	Transcript show: 'Procesador: '.	Transcript show: self procesador arch, ' - '.	Transcript show: self procesador ghz.	Transcript show: 'Memoria: '.	Transcript show: self memoria gb.	Transcript show: 'Disco Duro: '.	Transcript show: self hdd capacity.	! !!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:56' prior: 34357109!on	Transcript clear.	Transcript show: 'Procesador: '.	Transcript show: self procesador arch, ' - '.	Transcript show: self procesador ghz.	Transcript cr.	Transcript show: 'Memoria: '.	Transcript show: self memoria gb.	Transcript show: 'Disco Duro: '.	Transcript show: self hdd capacity.	! !----SNAPSHOT----2015-11-16T23:56:24.731196-03:00 Pharo4.0.image priorSource: 802490!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:57' prior: 34357493!on	Transcript clear.	Transcript show: 'Procesador: '.	Transcript show: self procesador arch, ' - '.	Transcript show: self procesador ghz, 'ghz'.	Transcript cr.	Transcript show: 'Memoria: '.	Transcript show: self memoria gb.	Transcript show: 'Disco Duro: '.	Transcript show: self hdd capacity.	! !!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:58' prior: 34357979!on	Transcript clear.	Transcript show: 'Procesador: '.	Transcript show: self procesador arch, ' - '.	Transcript show: self procesador ghz, 'ghz'; cr.		Transcript show: 'Memoria: '.	Transcript show: self memoria gb, 'RAM'; cr.	Transcript show: 'Disco Duro: '.	Transcript show: self hdd capacity.	! !----SNAPSHOT----2015-11-16T23:58:13.868196-03:00 Pharo4.0.image priorSource: 803360!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:59' prior: 34358386!on	Transcript clear.	Transcript show: 'Procesador: '.	Transcript show: self procesador arch, ' - '.	Transcript show: self procesador ghz; show: 'ghz'; cr.	Transcript show: 'Memoria: '.	Transcript show: self memoria gb, 'RAM'; cr.	Transcript show: 'Disco Duro: '.	Transcript show: self hdd capacity.	! !----SNAPSHOT----2015-11-16T23:59:27.084196-03:00 Pharo4.0.image priorSource: 804260!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/16/2015 23:59' prior: 34358879!on	Transcript clear.	Transcript show: 'Procesador: '.	Transcript show: self procesador arch, ' - '.	Transcript show: self procesador ghz; show: 'ghz'; cr.	Transcript show: 'Memoria: '.	Transcript show: self memoria gb, ' RAM'; cr.	Transcript show: 'Disco Duro: '.	Transcript show: self hdd capacity.	! !----SNAPSHOT----2015-11-16T23:59:53.416196-03:00 Pharo4.0.image priorSource: 804758!----SNAPSHOT----2015-11-17T00:00:30.690196-03:00 Ejercicio 9.image priorSource: 805257!----SNAPSHOT----2015-11-17T00:00:35.742196-03:00 Pharo4.0.image priorSource: 805343!----SNAPSHOT----2015-11-17T01:05:03.100196-03:00 Pharo4.0.image priorSource: 805432!'From Pharo3.0 of 18 March 2013 [Latest update: #30858] on 31 October 2014 at 11:19:08.040118 am'!Object subclass: #Edge
	instanceVariableNames: 'points'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'BotArena'!!Edge commentStamp: 'IvanKarl 10/30/2014 20:39' prior: 0!An Edge is a pair of points.

Instance Variables
	points:		<Object>

points
	- xxxxx
!!Edge methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 20:42'!initialize
	points := OrderedCollection new! !!Edge methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 20:43'!points 
	^ points! !!Edge methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 20:48'!points: aCollection
	points := aCollection.! !!Edge methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 23:07'!distance
	^ (self points at: 1) dist: (self points at: 2)! !!Edge methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 20:56'!= anEdge
	
	^(self points select: [:point| anEdge points includes: point]) size = 2! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Edge class
	instanceVariableNames: ''!!Edge commentStamp: '<historical>' prior: 34360325!!!Edge class methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 20:47'!p1: aPoint p2: anotherPoint
	^ self new
		points: (OrderedCollection with: aPoint with: anotherPoint);
		yourself! !!Edge class methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 20:49'!points: aCollection
	^ self new
		points: aCollection;
		yourself! !----End fileIn----!'From Pharo3.0 of 18 March 2013 [Latest update: #30858] on 31 October 2014 at 11:11:37.120301 am'!Object subclass: #DelaunayElement
	instanceVariableNames: 'vertices edges'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'BotArena'!!DelaunayElement commentStamp: 'IvanKarl 10/24/2014 11:41' prior: 34347803!A DelaunayElement is Triangle yo.

Instance Variables
	vertex1:		<Object>
	vertex2:		<Object>
	vertex3:		<Object>

vertex1
	- xxxxx

vertex2
	- xxxxx

vertex3
	- xxxxx
!!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:50' prior: 34344906!vertex3
	^ vertices at: 3! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:51' prior: 34345014!vertex1: aVertex
	vertices at: 1 put: aVertex.! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:48' prior: 34345143!vertices: aCollection
	vertices := aCollection.! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:49' prior: 34345273!vertex1
	^ vertices at: 1! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:50' prior: 34345381!vertex3: aVertex
	vertices at: 3 put: aVertex.! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:51' prior: 34345510!vertex2: aVertex
	vertices at: 2 put: aVertex.! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:51' prior: 34345639!vertex2
	^ vertices at: 2! !!DelaunayElement methodsFor: 'acccessing' stamp: 'IvanKarl 10/24/2014 11:56' prior: 34345747!vertices
	^ vertices! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 23:12' prior: 34345857!perimeter
	^ (self edge1) + (self edge2 ) + (self edge3 )! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/27/2014 20:55' prior: 34345998!sameAs: aTriangle
	"retorna true si dos triangulos son iguales"

	^(self comun: aTriangle)  = 0.! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/27/2014 20:43' prior: 34346188!isVertex: aPoint
 	^self vertices includes: aPoint. ! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 23:12' prior: 34346330!area
	| s |
	s := self perimeter / 2.
	^ (s * (s - self edge1) * (s - self edge2) * (s - self edge3)) sqrt! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 21:35' prior: 34346530!initialize
	vertices := OrderedCollection new. 
	edges := OrderedCollection new.! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/27/2014 20:54' prior: 34346669!shareSide: aTriangle
	"retorna si dos triangulos comparten un lado"
	^(self comun:aTriangle) <= 1.

	! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/27/2014 20:55' prior: 34346865!isNeighborElement:aTriangle
"retorna true si son triangulos vecinos: no son el mismo y comparten un lado"
^(self comun: aTriangle)  = 1.! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 21:56'!edges
	^ edges! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 23:13' prior: 34347092!edge3
	^ (self edges at: 3) distance.! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 23:16' prior: 34347222!edge2
	^ (self edges at: 2) distance.! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 23:13' prior: 34347352!edge1
	^ (self edges at: 1) distance! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/27/2014 20:46' prior: 34347484!comun: aTriangle
	"calcula cantidad de lados en comun"

	^ (self vertices reject: [ :vertex | aTriangle vertices includes: vertex ]) size.! !!DelaunayElement methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 22:28'!createEdgesFrom: anOrderedCollection
	| index |
	index := 1.
	anOrderedCollection
		do: [ :point | 
			self edges add: (
			Edge points: (OrderedCollection with: point with: 
				(anOrderedCollection at: 
					(index \\ anOrderedCollection size) + 1)
			)).
			index := index + 1 ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DelaunayElement class
	instanceVariableNames: ''!!DelaunayElement commentStamp: '<historical>' prior: 34361924!!!DelaunayElement class methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 22:18' prior: 34347898!withPoints: aCollection
	^ self new
		vertices: aCollection asSortedCollection;
		createEdgesFrom: aCollection;
		yourself! !----End fileIn----!'From Pharo3.0 of 18 March 2013 [Latest update: #30858] on 30 October 2014 at 11:16:42.746537 pm'!Object subclass: #DelaunayMesh
	instanceVariableNames: 'meshElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'BotArena'!!DelaunayMesh commentStamp: '<historical>' prior: 0!A DelaunayMesh is un conjunto de triangulos.

Instance Variables
	fromVertices:		<Object>

fromVertices
	- xxxxx
!!DelaunayMesh methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 21:23'!area
	^ self meshElements inject: 0 into: [ :area :triangle| area + triangle area ]! !!DelaunayMesh methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 21:11'!meshElements
	^ meshElements! !!DelaunayMesh methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 21:06'!initialize

	meshElements := OrderedCollection new.! !!DelaunayMesh methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 23:06'!perimeter
^ self sideEdges inject: 0 into: [ :perimeter :edge| perimeter + edge distance ]! !!DelaunayMesh methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 22:54'!allEdges
"returns a collection of edges from all it's triangles."
	^self meshElements flatCollect: [ :triangle| triangle edges ]! !!DelaunayMesh methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 23:05'!sideEdges
"returns a collection of edges from all it's triangles."
	|allTemp|
	allTemp := self allEdges .
	^self allEdges reject: [ :edge|  allTemp occurrencesOf: edge >= 2 ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DelaunayMesh class
	instanceVariableNames: ''!!DelaunayMesh commentStamp: '<historical>' prior: 34366477!!!DelaunayMesh class methodsFor: 'as yet unclassified' stamp: 'IvanKarl 10/30/2014 21:13'!fromVertices: anOrderedCollection
	|mesh|
	mesh := self new.
	anOrderedCollection do: [ :points | mesh meshElements add: (DelaunayElement withPoints: points) ].
	^ mesh yourself! !----End fileIn----!----SNAPSHOT----2015-11-17T01:10:24.493196-03:00 Pharo4.0.image priorSource: 805518!!TestEdge methodsFor: 'testing' stamp: 'northEast 11/17/2015 01:22' prior: 34334082!testSetIntersection	| e1 e2 e3 s1 s2 |	e1 := Edge points: (OrderedCollection with: 1 @ 1 with: -1 @ -1).	e2 := Edge points: (OrderedCollection with: -2 @ -1 with: 1 @ 1).	e3 := Edge points: (OrderedCollection with: 1 @ 1 with: -1 @ -1).	s1 := Set with: e1 with: e2.	s2 := Set with: e3.	self should: [ (s1 intersection: s2) notEmpty ]! !!TestEdge methodsFor: 'testing' stamp: 'northEast 11/17/2015 01:26' prior: 34368329!testSetIntersection	| e1 e2 e3 s1 s2 |	e1 := Edge points: (OrderedCollection with: 1 @ 1 with: -1 @ -1).	e2 := Edge points: (OrderedCollection with: -2 @ -1 with: 1 @ 1).	e3 := Edge points: (OrderedCollection with: 1 @ 1 with: -1 @ -1).	s1 := Set with: e1 with: e2.	s2 := Set with: e3.	self should: [ (s1 intersection: s2)]! !!TestEdge methodsFor: 'testing' stamp: 'northEast 11/17/2015 01:27' prior: 34368758!testSetIntersection	| e1 e2 e3 s1 s2 |	e1 := Edge points: (OrderedCollection with: 1 @ 1 with: -1 @ -1).	e2 := Edge points: (OrderedCollection with: -2 @ -1 with: 1 @ 1).	e3 := Edge points: (OrderedCollection with: -1 @ -1 with: 1 @ 1).	s1 := Set with: e1 with: e2.	s2 := Set with: e3.	self should: [ (s1 intersection: s2) notEmpty ]! !----SNAPSHOT----2015-11-17T01:30:30.673196-03:00 Pharo4.0.image priorSource: 813725!----SNAPSHOT----2015-11-17T01:41:00.560196-03:00 Pharo4.0.image priorSource: 815088!----STARTUP----2015-11-17T13:23:59.09362-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!Object subclass: #User
	instanceVariableNames: 'name wall friends'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Practica5-1'!!User commentStamp: 'IvanKarl 11/13/2014 15:19' prior: 0!An User is a frigging user!!.

Instance Variables
	friends:		<Object>
	name:		<Object>
	wall:		<Object>

friends
	- xxxxx

name
	- xxxxx

wall
	- xxxxx
!!User methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:31'!addFriend: aUser
	"Agregar aUser a la lista de amigos"

	self friends add: aUser! !!User methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:40'!messages 
^ self wall messages! !!User methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 17:33'!friendsToFriends: aString
	self friendsOfMyfriends do: [ :friend | friend newMessage: aString from: self ]! !!User methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:17'!name: aString
	name := aString! !!User methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 17:30'!post: aString
	"Publica un mensaje en muro"

	self wall post: (WallMessage text: aString from: self).
	self updateFriends: aString! !!User methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 16:40'!newMessage: aMessage from: aFriend
	"Los usuarios reciben este mensaje cuando el amigo indicado por el par·metro anotherUser publicÛ el mensaje aMessage en su propio muro"

	self addMessage: (WallMessage text:aMessage from:aFriend)
	! !!User methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:31'!initialize
	friends := OrderedCollection new.
	wall := Wall new! !!User methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 17:30'!floodPost: aString
	"Publica un mensaje en muro"

	self wall post: (WallMessage text: aString from: self).
	self friendsToFriends: aString! !!User methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 16:10'!wall
	^ wall! !!User methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:17'!name
	^ name! !!User methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:53'!addMessage: aMessage

	self wall post: aMessage! !!User methodsFor: 'as yet unclassified' stamp: 'camila 11/6/2014 17:22'!friends
	^friends! !!User methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 17:19'!friendsOfMyfriends
	^ self friends flatCollectAsSet: [ :friend | friend friends ]! !!User methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 17:33'!updateFriends:aString
	self friends do: [ :friend| friend newMessage: aString from: self ]! !Object subclass: #Wall
	instanceVariableNames: 'messages'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Practica5-1'!!Wall commentStamp: 'IvanKarl 11/13/2014 15:19' prior: 0!A Wall is  a place to leave messages .

Instance Variables
	list:		<Object>

list
	- xxxxx
!!Wall methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:21'!messages
	^ messages! !!Wall methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 16:35'!initialize
	messages :=OrderedCollection new.! !!Wall methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:21'!list
	^ self messages! !!Wall methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:47'!removeOldestMessage
	self removeMessage: self oldestMessage.! !!Wall methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 16:48'!oldestMessage
	^ self messages first! !!Wall methodsFor: 'as yet unclassified' stamp: 'camila 11/6/2014 17:32'!numberOfMessages
	"Retorna la cantidad de mensajes posteados en el muro"

	^ self list size! !!Wall methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:47'!removeMessage: aMessage
	"Elimina el mensaje del muro"

	self list remove: aMessage! !!Wall methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 17:13'!post: aMessage
	"Agrega un mensaje al muro"
	(self numberOfMessages = 10) ifTrue: [self removeOldestMessage].
  	self list add: aMessage! !Object subclass: #WallMessage
	instanceVariableNames: 'text date author'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Practica5-1'!!WallMessage commentStamp: 'IvanKarl 11/13/2014 17:41' prior: 0!A WallMessage is a place for user's messages.

Instance Variables
	author:		<Object>
	date:		<Object>
	text:		<Object>

author
	- xxxxx

date
	- xxxxx

text
	- xxxxx
!!WallMessage methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:34'!initialize
	date := Date today.
	! !!WallMessage methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 16:15'!date: aDate
	date:=aDate! !!WallMessage methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 16:27'!author: aUser
	author := aUser! !!WallMessage methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 16:23'!text: aString
	text := aString! !!WallMessage methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 16:15'!date
	^ date! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WallMessage class
	instanceVariableNames: ''!!WallMessage commentStamp: '<historical>' prior: 34413171!!!WallMessage class methodsFor: 'as yet unclassified' stamp: 'IvanKarl 11/13/2014 15:34'!text: aString from: aUser
	^ self new
		text: aString;
		author: aUser;
		yourself! !----End fileIn----!----SNAPSHOT----2015-11-17T13:26:48.66262-03:00 Ejercicio 1.image priorSource: 815174!----SNAPSHOT----2015-11-17T13:27:05.77262-03:00 Pharo4.0.image priorSource: 859851!Object subclass: #Mail
	instanceVariableNames: 'rtte dest asunto cuerpo fecha leido'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Practica5-3'!!Mail methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 19:39'!cuerpo: aString
	cuerpo := aString! !!Mail methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 18:57'!fecha: unaFecha
	fecha:=unaFecha! !!Mail methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 19:43'!asunto
	^asunto! !!Mail methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 19:38'!cuerpo
	^cuerpo ! !!Mail methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 20:55'!marcarLeido
	leido:=true.! !!Mail methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 18:56'!leido
	^leido! !!Mail methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 19:43'!asunto: unAsunto
	asunto := unAsunto! !!Mail methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 18:57'!fecha
	^fecha! !!Mail methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 18:56'!leido: estado
	leido:=estado! !!Mail methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 19:39'!tamaÒo
	^ self cuerpo size! !Object subclass: #Bandeja
	instanceVariableNames: 'mails tipo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Practica5-3'!!Bandeja methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 20:38'!initialize
	mails := OrderedCollection new! !!Bandeja methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 20:01'!mails 
	^mails! !!Bandeja methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 20:33'!tipo: unTipo
	tipo:=unTipo! !!Bandeja methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 21:45'!porTamaÒo
	"retornar los mails de una bandeja ordenados por tamaÒo"

	^ self mails asSortedCollection: [ :a :b | a tamaÒo < b tamaÒo ]! !!Bandeja methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 20:11'!tipo
	^ tipo! !!Bandeja methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 21:46'!cronologicamente
	"retornar los mails de una bandeja ordenados cronolÛgicamente"

	^ self mails asSortedCollection: [ :a :b | a fecha < b fecha ]! !!Bandeja methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 22:58'!addMail: mail 
	self mails add: mail.! !!Bandeja methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 19:42'!asuntos
	"retornar (en una colecciÛn) el campo asunto de los emails de cualquier bandeja."

	^ self mails collect: [ :mail | mail asunto ]! !Bandeja subclass: #Entrada
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Practica5-3'!!Entrada methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 20:51'!noLeidos
	^ self mails select: [ :unMail | unMail leido=false ]! !!Entrada methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 20:52'!tamaÒo
	^ self mails inject:0 into:[:tam :unMail | tam+ unMail tamaÒo  ]! !!Entrada methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 21:14'!marcarComoLeido: mail
	(self mails detect: [ :m | m = mail ]) marcarLeido! !!Entrada methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 20:28'!borrar: unMail
	^self mails remove: unMail.! !Bandeja subclass: #Eliminados
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Practica5-3'!!Eliminados methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 21:59'!borrar: mail
	self mails remove: mail! !Object subclass: #App
	instanceVariableNames: 'bandejas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Practica5-3'!!App methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 21:54'!borrarEntrada: unMail
	self bandejaEliminados addMail: (self bandejaEntrada borrar: unMail)! !!App methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 20:03'!initialize
	bandejas := OrderedCollection new! !!App methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 20:12'!bandejas
	^bandejas! !!App methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 22:03'!borrarEliminados: mail
	self bandejaEliminados borrar: mail! !!App methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 21:53'!bandejaEliminados
	^ self bandejas detect: [ :band | band tipo = 'eliminados' ]! !!App methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 21:59'!borrarSalida: mail
	self bandejaEntrada borrar: mail! !!App methodsFor: 'as yet unclassified' stamp: 'camila 11/13/2014 21:53'!bandejaEntrada
	^self bandejas detect: [ :band | band tipo = 'entrada' ]! !----End fileIn----!!Bandeja methodsFor: 'as yet unclassified' stamp: 'northEast 11/17/2015 14:02'!porTamanio
	"retornar los mails de una bandeja ordenados por tamaÒo"

	^ self mails asSortedCollection: [ :a :b | a tamaÒo < b tamaÒo ]! !!Mail methodsFor: 'as yet unclassified' stamp: 'northEast 11/17/2015 14:02'!tamanio
	^ self cuerpo size! !!Entrada methodsFor: 'as yet unclassified' stamp: 'northEast 11/17/2015 14:02'!tamanio
	^ self mails inject:0 into:[:tam :unMail | tam+ unMail tamaÒo  ]! !----SNAPSHOT----2015-11-17T14:03:07.85862-03:00 Ejercicio 3.image priorSource: 859939!----SNAPSHOT----2015-11-17T14:03:13.06962-03:00 Pharo4.0.image priorSource: 865150!----SNAPSHOT----2015-11-17T20:45:00.46962-03:00 Pharo4.0.image priorSource: 865238!----STARTUP----2015-11-20T20:07:52.494745-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Computadora methodsFor: 'as yet unclassified' stamp: 'northEast 11/20/2015 20:18'!initialize	memoria:= Memoria new.	discoduro:= HDD new.	procesador:= Procesador new.! !!WallMessage commentStamp: '<historical>' prior: 34414082!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	author:		<Object>	date:		<Object>	text:		<Object>    Implementation Points!----SNAPSHOT----2015-11-20T23:46:44.113745-03:00 Pharo4.0.image priorSource: 865323!----STARTUP----2015-11-21T00:21:50.309033-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Edge methodsFor: 'as yet unclassified' stamp: 'northEast 11/21/2015 00:23'!hash	^self points hash! !----SNAPSHOT----2015-11-21T00:23:34.059033-03:00 Pharo4.0.image priorSource: 905692!!Edge commentStamp: '<historical>' prior: 34361220!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	points:		<Object>    Implementation Points!----STARTUP----2015-12-17T13:47:00.568881-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----STARTUP----2015-12-18T02:15:51.71365-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----SNAPSHOT----2015-12-18T02:17:30.16365-03:00 Pharo4.0.image priorSource: 945144!----SNAPSHOT----2015-12-18T02:23:46.87765-03:00 Pharo4.0.image priorSource: 1024560!----SNAPSHOT----2015-12-18T02:38:26.63165-03:00 Pharo4.0.image priorSource: 1024645!----SNAPSHOT----2015-12-18T02:39:11.20765-03:00 Pharo4.0.image priorSource: 1024731!----SNAPSHOT----2015-12-18T13:07:45.78765-03:00 Pharo4.0.image priorSource: 1024817!----STARTUP----2015-12-19T13:28:27.550295-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----STARTUP----2015-12-20T00:09:27.873983-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----STARTUP----2016-02-04T19:56:21.335743-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Aporte methodsFor: 'as yet unclassified' stamp: 'northEast 2/4/2016 20:08'!monto	^monto! !!Aporte methodsFor: 'setters and getters' stamp: 'northEast 2/4/2016 20:09'!monto: amount	monto:= amount! !!Aporte methodsFor: 'setters and getters' stamp: 'northEast 2/4/2016 20:09'!fecha	^fecha! !!Aporte methodsFor: 'setters and getters' stamp: 'northEast 2/4/2016 20:10'!fecha: aDate	fecha:= aDate! !!Aporte methodsFor: 'setters and getters' stamp: 'northEast 2/4/2016 20:10'!aportador	^aportador! !!Aporte methodsFor: 'setters and getters' stamp: 'northEast 2/4/2016 20:10'!aportador: aport	aportador:= aport! !!Aporte methodsFor: 'setters and getters' stamp: 'northEast 2/4/2016 20:11'!initialize	aportador:= Usuario new.! !!Aporte class methodsFor: 'as yet unclassified' stamp: 'northEast 2/4/2016 20:12'!new: amount fecha:aDate aportador: aport	^self new monto: amount; fecha: aDate; aportador:aport.					! !!Aporte class methodsFor: 'constructor' stamp: 'northEast 2/4/2016 20:13'!new: amount aportador: aport	^self new monto: amount; fecha: Date today; aportador:aport.					! !----SNAPSHOT----2016-02-04T20:13:53.472743-03:00 Pharo4.0.image priorSource: 1024903!----STARTUP----2016-02-06T13:28:44.866193-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Entrada commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	nombre:		<Object>    Implementation Points!Entrada removeSelector: #tamanio!Entrada removeSelector: #noLeidos!Entrada removeSelector: #borrar:!Entrada removeSelector: #tamaÒo!Entrada removeSelector: #marcarComoLeido:!!Entrada methodsFor: 'as yet unclassified' stamp: 'northEast 2/6/2016 13:30'!nombre	^nombre! !!Entrada methodsFor: 'as yet unclassified' stamp: 'northEast 2/6/2016 13:31'!nombre: aName	nombre:= aName! !!Funcion methodsFor: 'accessing' stamp: 'northEast 2/6/2016 13:33'!fecha	^ fecha! !!Funcion methodsFor: 'accessing' stamp: 'northEast 2/6/2016 13:33'!fecha: anObject	fecha := anObject! !!Funcion methodsFor: 'accessing' stamp: 'northEast 2/6/2016 13:33'!precio	^ precio! !!Funcion methodsFor: 'accessing' stamp: 'northEast 2/6/2016 13:33'!precio: anObject	precio := anObject! !!Funcion methodsFor: 'accessing' stamp: 'northEast 2/6/2016 13:33'!capacidad	^ capacidad! !!Funcion methodsFor: 'accessing' stamp: 'northEast 2/6/2016 13:33'!capacidad: anObject	capacidad := anObject! !!Funcion methodsFor: 'accessing' stamp: 'northEast 2/6/2016 13:33'!entradas	^ entradas! !!Funcion methodsFor: 'accessing' stamp: 'northEast 2/6/2016 13:33'!entradas: anObject	entradas := anObject! !----SNAPSHOT----2016-02-06T13:33:29.172193-03:00 Pharo4.0.image priorSource: 1143881!!FuncionCachetFijo methodsFor: 'accessing' stamp: 'northEast 2/6/2016 13:41'!fijo	^ fijo! !!FuncionCachetFijo methodsFor: 'accessing' stamp: 'northEast 2/6/2016 13:41'!fijo: anObject	fijo := anObject! !!Obra methodsFor: 'accessing' stamp: 'northEast 2/6/2016 14:56'!funciones	^ funciones! !!Obra methodsFor: 'accessing' stamp: 'northEast 2/6/2016 14:56'!funciones: anObject	funciones := anObject! !!Obra methodsFor: 'accessing' stamp: 'northEast 2/6/2016 14:56'!nombre	^ nombre! !!Obra methodsFor: 'accessing' stamp: 'northEast 2/6/2016 14:56'!nombre: anObject	nombre := anObject! !!Escudo methodsFor: 'accessing' stamp: 'northEast 2/6/2016 14:57'!obras	^ obras! !!Escudo methodsFor: 'accessing' stamp: 'northEast 2/6/2016 14:57'!obras: anObject	obras := anObject! !!Funcion commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	capacidad:		<Object>	entradas:		<Object>	fecha:		<Object>	precio:		<Object>    Implementation Points!!FuncionBordereau commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!FuncionCachetFijo commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	fijo:		<Object>    Implementation Points!!Obra commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	funciones:		<Object>	nombre:		<Object>    Implementation Points!!Escudo commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	obras:		<Object>    Implementation Points!!Entrada class methodsFor: 'as yet unclassified' stamp: 'northEast 2/6/2016 15:00'!newFor: aName	^self new nombre: aName! !----SNAPSHOT----2016-02-06T15:01:11.214193-03:00 Pharo4.0.image priorSource: 1185226!!FuncionCachetFijo methodsFor: 'accessing' stamp: 'northEast 2/6/2016 15:04'!recaudadoEscudo	^self ! !!Funcion methodsFor: 'accessing' stamp: 'northEast 2/6/2016 15:05'!recaudado	^self entradas size * self precio! !!FuncionCachetFijo methodsFor: 'accessing' stamp: 'northEast 2/6/2016 15:06' prior: 34744894!recaudadoEscudo	^self recaudado - self fijo >= 500! !!FuncionCachetFijo methodsFor: 'accessing' stamp: 'northEast 2/6/2016 15:09' prior: 34745131!recaudadoEscudo	^self recaudado - self fijo! !!FuncionCachetFijo methodsFor: 'accessing' stamp: 'northEast 2/6/2016 15:10'!superaPiso	^self recaudadoEscudo >= 500! !!FuncionCachetFijo class methodsFor: 'as yet unclassified' stamp: 'northEast 2/6/2016 15:12'!newFijo: unMonto dia: unaFecha precio:unPrecio capacidad:unNumero	^self new fijo:unMonto; dia:unaFecha; precio:unPrecio; capacidad:unNumero! !!Funcion methodsFor: 'accessing' stamp: 'northEast 2/6/2016 15:13'!initialize	entradas:= OrderedCollection new! !!FuncionBordereau class methodsFor: 'as yet unclassified' stamp: 'northEast 2/6/2016 15:15'!newDia: unaFecha precio:unPrecio capacidad:unNumero	^self new dia:unaFecha; precio:unPrecio; capacidad:unNumero! !!FuncionBordereau methodsFor: 'as yet unclassified' stamp: 'northEast 2/6/2016 15:17'!recaudadoEscudo	^self recaudado * 0,3 >= 500! !!FuncionBordereau methodsFor: 'as yet unclassified' stamp: 'northEast 2/6/2016 15:21' prior: 34746100!recaudadoEscudo	^self recaudado * 0.3 >= 500! !!FuncionBordereau methodsFor: 'as yet unclassified' stamp: 'northEast 2/6/2016 15:21' prior: 34746252!recaudadoEscudo	^self recaudado * 0.3! !!FuncionBordereau methodsFor: 'as yet unclassified' stamp: 'northEast 2/6/2016 15:21'!superaPiso	^self recaudadoEscudo >= 500! !!Funcion methodsFor: 'accessing' stamp: 'northEast 2/6/2016 15:24'!venderEntrada: unNombre	self entradas add: Entrada newFor: unNombre! !----SNAPSHOT----2016-02-06T15:28:36.725193-03:00 Pharo4.0.image priorSource: 1190296!----SNAPSHOT----2016-02-06T15:29:24.518193-03:00 Pharo4.0.image priorSource: 1192284!----SNAPSHOT----2016-02-06T16:31:32.584193-03:00 Pharo4.0.image priorSource: 1192371!----STARTUP----2016-02-27T13:57:51.5602-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----STARTUP----2016-03-29T12:05:57.082391-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----SNAPSHOT----2016-03-29T12:06:04.893391-03:00 Pharo4.0.image priorSource: 1192458!----SNAPSHOT----2016-03-29T12:08:01.101391-03:00 defaultPharo.image priorSource: 1271067!----SNAPSHOT----2016-03-29T12:08:21.049391-03:00 defaultPharo.image priorSource: 1271154!----SNAPSHOT----2016-03-29T12:08:28.881391-03:00 Pharo4.0.image priorSource: 1271245!----STARTUP----2016-04-12T00:23:02.590983-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----STARTUP----2016-04-12T01:03:30.872035-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----STARTUP----2016-04-12T01:03:48.974669-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----STARTUP----2016-04-19T10:24:46.288369-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----SNAPSHOT----2016-04-19T10:24:49.850369-03:00 Pharo4.0.image priorSource: 1374874!----STARTUP----2016-04-19T10:26:00.065267-03:00 as C:\Pharo4.0\Pharo4.0.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----SNAPSHOT----2016-04-19T10:26:06.497267-03:00 Pharo4.0.image priorSource: 1831850!Object subclass: #Facebook	instanceVariableNames: 'users'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!!Facebook methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:29'!users	^ users! !!Facebook methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:29'!users: anObject	users := anObject! !Object subclass: #User	instanceVariableNames: 'username apellido nombre muro'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!Smalltalk globals removeClassNamed: #User!Object subclass: #Users	instanceVariableNames: 'username apellido nombre muro'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!!Users methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:34'!username	^ username! !!Users methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:34'!username: anObject	username := anObject! !!Users methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:34'!apellido	^ apellido! !!Users methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:34'!apellido: anObject	apellido := anObject! !!Users methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:34'!nombre	^ nombre! !!Users methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:34'!nombre: anObject	nombre := anObject! !!Users methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:34'!muro	^ muro! !!Users methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:34'!muro: anObject	muro := anObject! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:49'!apellido	^ apellido! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:49'!apellido: anObject	apellido := anObject! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:49'!nombre	^ nombre! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:49'!nombre: anObject	nombre := anObject! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:49'!fecha	^ fecha! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:49'!fecha: anObject	fecha := anObject! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:49'!texto	^ texto! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:49'!texto: anObject	texto := anObject! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:49'!likes	^ likes! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:49'!likes: anObject	likes := anObject! !!Facebook methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:50'!initialize	users:= OrderedCollection new! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:53'!initialize	self likes: 0! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 10:53' prior: 35024791!initialize	self likes: 0.	self fecha: DateAndTime today.! !----SNAPSHOT----2016-04-19T11:07:12.770267-03:00 Pharo4.0.image priorSource: 1467799!!Post class methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 11:08'!new: unTexto nom: unNombre ape: unApellido	^self new	texto: unTexto;	nombre: unNombre;	apellido: unApellido! !!Users methodsFor: 'accessing' stamp: 'bys 4/19/2016 11:09'!initialize	muro:= SortedCollection new sortBlock: [ :p1 :p2 | p1 fecha < p2 fecha ]! !!Users class methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 11:15'!new: unUsername nom: unNombre ape: unApellido	^self new	username: unUsername;	nombre: unNombre;	apellido: unApellido! !!Post methodsFor: 'accessing' stamp: 'bys 4/19/2016 11:16'!like	self likes: self likes + 1! !Smalltalk globals removeClassNamed: #Users!Object subclass: #Facebook	instanceVariableNames: 'users muro'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!!Facebook methodsFor: 'accessing' stamp: 'bys 4/19/2016 11:26'!muro	^ muro! !!Facebook methodsFor: 'accessing' stamp: 'bys 4/19/2016 11:26'!muro: anObject	muro := anObject! !!Facebook methodsFor: 'accessing' stamp: 'bys 4/19/2016 11:26' prior: 35024686!initialize	muro:= SortedCollection new sortBlock: [ :p1 :p2 | p1 fecha < p2 fecha ]! !Facebook removeSelector: #users!Facebook removeSelector: #users:!Object subclass: #Facebook	instanceVariableNames: 'muro'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!----SNAPSHOT----2016-04-19T11:27:20.553267-03:00 Pharo4.0.image priorSource: 1470525!----SNAPSHOT----2016-04-19T11:27:51.453267-03:00 OO II 2016 - Practica 3 - Ejercicio 1.image priorSource: 1471983!----SNAPSHOT----2016-04-19T11:27:58.769267-03:00 OO II 2016 - Practica 3 - Ejercicio 1.image priorSource: 1472070!----STARTUP----2016-04-19T12:23:00.475999-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Practica 3\Ejercicio 1\OO II 2016 - Practica 3 - Ejercicio 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----STARTUP----2016-04-19T12:25:12.780797-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Practica 3\Ejercicio 1\OO II 2016 - Practica 3 - Ejercicio 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Facebook methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:43'!post: unEstado	self muro add: (Post new: unEstado nom: self nombre ape: self apellido)! !Object subclass: #Facebook	instanceVariableNames: 'muro apellido nombre'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!!Facebook methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:43'!apellido	^ apellido! !!Facebook methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:43'!apellido: anObject	apellido := anObject! !!Facebook methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:43'!nombre	^ nombre! !!Facebook methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:43'!nombre: anObject	nombre := anObject! !!Client methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 12:45'!post: unString	self subclassResponsibility ! !Client subclass: #Facebook	instanceVariableNames: 'muro apellido nombre'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!Object subclass: #Twitti	instanceVariableNames: ''	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!Object subclass: #Twitti	instanceVariableNames: 'tw apellido nombre'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:46'!tw	^ tw! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:46'!tw: anObject	tw := anObject! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:46'!apellido	^ apellido! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:46'!apellido: anObject	apellido := anObject! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:46'!nombre	^ nombre! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:46'!nombre: anObject	nombre := anObject! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:47'!initialize	tw:= SortedCollection new sortBlock: [ :t1 :t2 | t1 fecha < t2 fecha ]! !!Twitti class methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 12:50'!new: unApellido nom: unNombre	^self new	apellido: unApellido;	nombre: unNombre! !!AdapterTwitti methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 12:52'!post: unString	Twitti publish: unString! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:53'!publish: unString	self tw add: (Post new: unString nom: self nombre ape: self apellido)! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:56' prior: 35107680!publish: unString	(unString size > 144) ifFalse: 	[self tw add: (Post new: unString nom: self nombre ape: self apellido)]	ifTrue: [ Transcript clear; cr; show: '[TW] El estado es demasiado largo para publicarse' ]! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 12:56' prior: 35107850!publish: unString	(unString size > 144) 	ifFalse:[self tw add: (Post new: unString nom: self nombre ape: self apellido)]	ifTrue: [ Transcript clear; cr; show: '[TW] El estado es demasiado largo para publicarse' ]! !Object subclass: #Twitt	instanceVariableNames: 'apellido nombre fecha texto favs'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:20'!apellido	^ apellido! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:20'!apellido: anObject	apellido := anObject! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:20'!nombre	^ nombre! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:20'!nombre: anObject	nombre := anObject! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:20'!fecha	^ fecha! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:20'!fecha: anObject	fecha := anObject! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:20'!texto	^ texto! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:20'!texto: anObject	texto := anObject! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:20'!favs	^ favs! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:20'!favs: anObject	favs := anObject! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:20'!fav	self favs: self favs + 1! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:21'!initialize	self favs: 0! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:21' prior: 35108148!publish: unString	(unString size > 144) 	ifFalse:[self tw add: (Twitt new: unString nom: self nombre ape: self apellido)]	ifTrue: [ Transcript clear; cr; show: '[TW] El estado es demasiado largo para publicarse' ]! !Object subclass: #Twitti	instanceVariableNames: 'tw username apellido nombre'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:31'!username	^ username! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:31'!username: anObject	username := anObject! !!Twitti class methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 13:31'!new: unUsername ape: unApellido nom: unNombre	^self new	apellido: unApellido;	nombre: unNombre! !Twitti class removeSelector: #new:nom:!Object subclass: #Twitt	instanceVariableNames: 'username apellido nombre fecha texto favs'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:33'!username	^ username! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:33'!username: anObject	username := anObject! !!Twitt class methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 13:35'!new: unTexto user: unUsername ape: unApellido nom: unNombre	^self new	texto: unTexto;	username: unUsername;	apellido: unApellido;	nombre: unNombre ! !!Twitt methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:35' prior: 35109582!initialize	self favs: 0.	self fecha: DateAndTime today! !Object subclass: #Post	instanceVariableNames: 'fecha texto likes'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!Object subclass: #Twitt	instanceVariableNames: 'fecha texto favs'	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 1'!!Twitt class methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 13:46'!new: unTexto 	^self new	texto: unTexto! !Twitt class removeSelector: #new:user:ape:nom:!!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:51' prior: 35109688!publish: unString	(unString size > 144) 	ifFalse:[self tw add: (Twitt new: unString nom: self nombre ape: self)]	ifTrue: [ Transcript clear; cr; show: '[TW] El estado es demasiado largo para publicarse' ]! !!Twitti methodsFor: 'accessing' stamp: 'bys 4/19/2016 13:52' prior: 35111733!publish: unString	(unString size > 144) 	ifFalse:[self tw add: (Twitt new: unString)]	ifTrue: [ Transcript clear; cr; show: '[TW] El estado es demasiado largo para publicarse' ]! !----SNAPSHOT----2016-04-19T13:53:14.223797-03:00 OO II 2016 - Practica 3 - Ejercicio 1.image priorSource: 1472186!----SNAPSHOT----2016-04-19T13:53:23.483797-03:00 default.image priorSource: 1557773!----SNAPSHOT----2016-04-19T13:54:05.393797-03:00 default.image priorSource: 1557889!----SNAPSHOT----2016-04-19T13:54:21.864797-03:00 Pharo4.0.image priorSource: 1557975!----SNAPSHOT----2016-04-19T13:54:31.233797-03:00 default.image priorSource: 1558061!----SNAPSHOT----2016-04-19T14:02:04.307797-03:00 default.image priorSource: 1558148!Object subclass: #Biblioteca	instanceVariableNames: 'socios exporter'	classVariableNames: ''	poolDictionaries: ''	category: 'BibliotecaTP3'!!Biblioteca methodsFor: 'socios' stamp: 'EmilianoPrez 4/7/2016 19:41'!agregarSocio: aSocio 	socios add: aSocio.! !!Biblioteca methodsFor: 'as yet unclassified' stamp: 'DiegoTowers 4/10/2016 16:17'!exportarSocios"Retorna la representacion JSON de la coleccion de socios."^ self exporter export:(self socios).! !!Biblioteca methodsFor: 'initialization' stamp: 'EmilianoPrez 4/7/2016 19:56'!initialize: anExporter	socios:= OrderedCollection new.	exporter:= anExporter.! !!Biblioteca methodsFor: 'initialization' stamp: 'EmilianoPrez 4/7/2016 19:44'!initialize	socios:= OrderedCollection new.	exporter:= VoorheesExporter new.! !!Biblioteca methodsFor: 'accessing' stamp: 'EmilianoPrez 4/7/2016 19:44'!socios: anObject	socios := anObject! !!Biblioteca methodsFor: 'accessing' stamp: 'EmilianoPrez 4/7/2016 19:44'!exporter	^ exporter! !!Biblioteca methodsFor: 'accessing' stamp: 'EmilianoPrez 4/7/2016 19:44'!exporter: anObject	exporter := anObject! !!Biblioteca methodsFor: 'accessing' stamp: 'EmilianoPrez 4/7/2016 19:44'!socios	^ socios! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Biblioteca class	instanceVariableNames: ''!!Biblioteca class methodsFor: 'as yet unclassified' stamp: 'EmilianoPrez 4/7/2016 19:55'!new: anExporter	^self new initialize: anExporter	! !Object subclass: #Socio	instanceVariableNames: 'nombre email legajo'	classVariableNames: ''	poolDictionaries: ''	category: 'BibliotecaTP3'!!Socio methodsFor: 'accessing' stamp: 'EmilianoPrez 4/7/2016 19:45'!email	^ email! !!Socio methodsFor: 'accessing' stamp: 'EmilianoPrez 4/7/2016 19:45'!nombre	^ nombre! !!Socio methodsFor: 'accessing' stamp: 'EmilianoPrez 4/7/2016 19:45'!nombre: anObject	nombre := anObject! !!Socio methodsFor: 'accessing' stamp: 'EmilianoPrez 4/7/2016 19:45'!email: anObject	email := anObject! !!Socio methodsFor: 'accessing' stamp: 'EmilianoPrez 4/7/2016 19:45'!legajo: anObject	legajo := anObject! !!Socio methodsFor: 'accessing' stamp: 'EmilianoPrez 4/7/2016 19:45'!legajo	^ legajo! !!Socio methodsFor: 'initialization' stamp: 'EmilianoPrez 4/7/2016 19:40'!nombre: aString email: aString2 legajo: aString3 	nombre:= aString.	email:= aString2.	legajo:= aString3.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Socio class	instanceVariableNames: ''!!Socio class methodsFor: 'creation' stamp: 'EmilianoPrez 4/7/2016 19:39'!nombre: aString email: aString2 legajo: aString3 	^self new nombre: aString email: aString2 legajo: aString3 ! !Object subclass: #VoorheesExporter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BibliotecaTP3'!!VoorheesExporter methodsFor: 'exporting' stamp: 'EmilianoPrez 4/7/2016 20:50'!export: socios 		| exportedString |		exportedString := '[', Character cr asString, 	(self exportSocio: socios first). 	socios allButFirst do: [ :socio | 		exportedString := exportedString, ',', Character cr asString, (self exportSocio: socio).			].		^exportedString,Character cr asString,']'.! !!VoorheesExporter methodsFor: 'exporting' stamp: 'EmilianoPrez 4/7/2016 20:37'!exportSocio: aSocio	^		'	{', Character cr asString,		'		"nombre" : "',aSocio nombre,'",',Character cr asString,		'		"email" : "',aSocio email,'",',Character cr asString,		'		"legajo" : "',aSocio legajo,'"',Character cr asString,		'	}'! !TestCase subclass: #BibliotecaTestCase	instanceVariableNames: 'miBiblioteca arya tyron'	classVariableNames: ''	poolDictionaries: ''	category: 'BibliotecaTP3'!!BibliotecaTestCase methodsFor: 'as yet unclassified' stamp: 'DiegoTowers 4/10/2016 16:18'!setUpmiBiblioteca:= Biblioteca new: VoorheesExporter new.arya:= Socio nombre:'Arya Stark' email:'needle@stark.com' legajo: '5234/5'.tyron:= Socio nombre:'Tyron Lannister' email:'tyron@thelannisters.com' legajo:'2345/2'.miBiblioteca agregarSocio: arya.miBiblioteca agregarSocio: tyron.! !!BibliotecaTestCase methodsFor: 'as yet unclassified' stamp: 'EmilianoPrez 4/7/2016 19:42'!testExportar| result |result:= '[	{		"nombre" : "Arya Stark",		"email" : "needle@stark.com",		"legajo" : "5234/5"	},	{		"nombre" : "Tyron Lannister",		"email" : "tyron@thelannisters.com",		"legajo" : "2345/2"	}]'.self assert: (miBiblioteca exportarSocios = result).! !----End fileIn----!'From Pharo4.0 of 18 March 2013 [Latest update: #40626] on 10 April 2016 at 4:23:11.848617 pm'!TestCase subclass: #DirectorioTest	instanceVariableNames: 'vacio conUnArchivo conVariosArchivos conSubdirectorios config grande backup2015'	classVariableNames: ''	poolDictionaries: ''	category: 'O2-FileSystem'!!DirectorioTest methodsFor: 'running' stamp: 'JulianGrigera 4/6/2016 12:09'!testListadoDeContenido	| listado listadoStream |	self assert: vacio listadoDeContenido = '- home'.	self assert: conUnArchivo listadoDeContenido = '- var (1 archivos)'.	self assert: conVariosArchivos listadoDeContenido = '- tmp (4 archivos)'.	listadoStream := WriteStream on: String new.	listadoStream << '- log (1 archivos)'; cr.	listadoStream << '-- mysql (4 archivos)'; cr.	listadoStream << '--- older (1 archivos)'; cr.	listadoStream << '-- postgres (3 archivos)'.	listado := listadoStream contents.	self assert: conSubdirectorios listadoDeContenido = listado! !!DirectorioTest methodsFor: 'running' stamp: 'JulianGrigera 4/6/2016 15:46'!setUp	| date |	date := '2015-01-01'.	"Directorio vacío"	vacio := Directorio llamado: 'home' creadoEl: date .	"Directorio con un solo archivo"	conUnArchivo := Directorio llamado: 'var' creadoEl: date.	config := Archivo llamado: 'config.bak' creadoEl: '2016-04-02' asDate kBytes: 128.	conUnArchivo agregar: config.	"Directorio con varios archivos, pero sin subdirectorios"	conVariosArchivos := Directorio llamado: 'tmp' creadoEl: date.	grande := Archivo llamado: 'grande.tmp' creadoEl: '2016-04-02' asDate kBytes: 2000000.	conVariosArchivos		agregar: (Archivo llamado: 'nada.tmp' creadoEl: '2015-05-01' asDate kBytes: 0);		agregar: (Archivo llamado: 'chico.tmp' creadoEl: '2013-06-03' asDate kBytes: 10);		agregar: grande;		agregar: (Archivo llamado: 'mediano.tmp' creadoEl: '1995-11-23' asDate kBytes: 10000).	"Directorio con subdirectorios, archivos, y archivos dentro de los subdirectorios"	conSubdirectorios := Directorio llamado: 'log' creadoEl: date.	backup2015 := Archivo llamado: '2015.zip' creadoEl: '2016-04-06' asDate kBytes: 240000000.	conSubdirectorios		agregar: (Archivo llamado: 'sys.log' creadoEl: '2016-03-03' asDate kBytes: 90000);		agregar:				((Directorio llamado: 'mysql' creadoEl: date)						agregar: (Archivo llamado: 'mysql01.log' creadoEl: '2015-12-03' asDate kBytes: 1200000);						agregar: (Archivo llamado: 'mysql02.log' creadoEl: '2014-03-03' asDate kBytes: 2000000);						agregar: (Archivo llamado: 'mysql03.log' creadoEl: '2013-03-21' asDate kBytes: 2000000);						agregar: (Archivo llamado: 'mysql04.log' creadoEl: '2014-07-15' asDate kBytes: 2000000);						agregar:								((Directorio llamado: 'older' creadoEl: date)										agregar: backup2015;										yourself);						yourself);		agregar:				((Directorio llamado: 'postgres' creadoEl: date)						agregar: (Archivo llamado: 'pg01.log' creadoEl: '2015-04-12' asDate kBytes: 1400000);						agregar: (Archivo llamado: 'pg02.log' creadoEl: '2016-03-08' asDate kBytes: 4000000);						agregar: (Archivo llamado: 'pg03.log' creadoEl: '2016-02-13' asDate kBytes: 4000000);						yourself)! !----End fileIn----!----SNAPSHOT----2016-04-19T14:04:25.835797-03:00 default.image priorSource: 1558234!----SNAPSHOT----2016-04-19T14:05:11.910797-03:00 OO II 2016 - Practica 3 - Ejercicio 2.image priorSource: 1565957!!ConfigurationOfNeoJSON commentStamp: '<historical>' prior: 0!I am ConfigurationOfNeoJSON, a Metacello configuration for NeoJSON.NeoJSON is a flexible and efficient reader and writer for JSON.!!ConfigurationOfNeoJSON commentStamp: '<historical>' prior: 35120655!I am ConfigurationOfNeoJSON, a Metacello configuration for NeoJSON.NeoJSON is a flexible and efficient reader and writer for JSON.!!ConfigurationOfNeoJSON class methodsFor: 'development support' stamp: 'SvenVanCaekenberghe 6/22/2012 16:48'!DevelopmentSupport"See the methods in the 'development support' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."	<apiDocumentation>! !!ConfigurationOfNeoJSON class methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/22/2012 16:48'!baseConfigurationClassIfAbsent: aBlock	^Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			self ensureMetacelloBaseConfiguration.			Smalltalk at: #MetacelloBaseConfiguration ifAbsent: aBlock ].! !!ConfigurationOfNeoJSON class methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 1/5/2016 09:38'!catalogContactInfo	^ 'Written and maintained by Sven Van Caekenberghe (http://stfx.eu) and the community. Discussions on the Pharo mailing lists.'! !!ConfigurationOfNeoJSON class methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 1/5/2016 09:39'!catalogDescription	^ 'JSON (JavaScript Object Notation) is a popular data-interchange format. NeoJSON is an elegant and efficient standalone Smalltalk framework to read and write JSON converting to or from Smalltalk objects.'! !!ConfigurationOfNeoJSON class methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 1/5/2016 09:39'!catalogKeywords	^ #(format input output json serialization encoding text javascript)! !!ConfigurationOfNeoJSON class methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/22/2012 16:48'!ensureMetacello	(self baseConfigurationClassIfAbsent: []) ensureMetacello! !!ConfigurationOfNeoJSON class methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/22/2012 16:48'!ensureMetacelloBaseConfiguration	Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			| repository version |			repository := MCHttpRepository location: 'http://seaside.gemstone.com/ss/metacello' user: '' password: ''.			repository				versionReaderForFileNamed: 'Metacello-Base-DaleHenrichs.2.mcz'				do: [ :reader | 					version := reader version.					version load.					version workingCopy repositoryGroup addRepository: repository ] ]! !!ConfigurationOfNeoJSON class methodsFor: 'metacello tool support' stamp: 'SvenVanCaekenberghe 6/22/2012 16:48'!isMetacelloConfig	"Answer true and the Metacello tools will operate on you"		^true! !!ConfigurationOfNeoJSON class methodsFor: 'loading' stamp: 'SvenVanCaekenberghe 6/22/2012 16:48'!load	"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."	"self load"	<apiDocumentation>	^(self project version: #stable) load! !!ConfigurationOfNeoJSON class methodsFor: 'loading' stamp: 'SvenVanCaekenberghe 6/22/2012 16:48'!loadBleedingEdge	"Load the latest versions of the mcz files defined for this project. It is not likely that the #bleedingEdge has been tested."	"self loadBleedingEdge"	<apiDocumentation>	^(self project version: #bleedingEdge) load! !!ConfigurationOfNeoJSON class methodsFor: 'loading' stamp: 'SvenVanCaekenberghe 6/22/2012 16:48'!loadDevelopment	"Load the #development version defined for this platform. The #development version will change over time and is not expected to be stable."	"self loadDevelopment"	<apiDocumentation>	^(self project version: #development) load! !!ConfigurationOfNeoJSON class methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/22/2012 16:48'!project	^self new project! !!ConfigurationOfNeoJSON class methodsFor: 'development support' stamp: 'SvenVanCaekenberghe 6/22/2012 16:48'!validate	"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). 	Errors identify specification issues that will result in unexpected behaviour when you load the configuration. 	Critical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.	Warnings identify specification issues that are technically correct, but are worth take a look at."	"self validate"	<apiDocumentation>	self ensureMetacello.	^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore! !!ConfigurationOfNeoJSON methodsFor: 'baselines' stamp: 'SvenVanCaekenberghe 6/22/2012 16:53'!baseline1: spec	<version: '1-baseline'>		spec for: #common do: [		spec 			blessing: #baseline;			repository: 'http://mc.stfx.eu/Neo';			package: 'Neo-JSON-Core';			package: 'Neo-JSON-Tests' with: [ spec requires: 'Neo-JSON-Core' ];			group: 'default' with: #('Neo-JSON-Core' 'Neo-JSON-Tests');			group: 'Core' with: #('Neo-JSON-Core');			group: 'Tests' with: #('Neo-JSON-Tests') ]! !!ConfigurationOfNeoJSON methodsFor: 'baselines' stamp: 'PaulDeBruicker 11/2/2014 20:39'!baseline2: spec	<version: '2-baseline'>	spec		for: #common		do: [ 			spec				blessing: #baseline;				repository: 'http://mc.stfx.eu/Neo';				package: 'Neo-JSON-Core';				package: 'Neo-JSON-Tests' with: [ spec requires: 'Neo-JSON-Core' ];				group: 'default' with: #('Neo-JSON-Core' 'Neo-JSON-Tests');				group: 'Core' with: #('Neo-JSON-Core');				group: 'Tests' with: #('Neo-JSON-Tests') ].	spec		for: #gemstone		do: [ 			spec				baseline: 'NeoJSON' with: [ spec repository: 'github://GsDevKit/NeoJSON:master/repository' ];				import: 'NeoJSON' ]! !!ConfigurationOfNeoJSON methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/22/2012 16:48'!project	^ project ifNil: [ | constructor |		"Bootstrap Metacello if it is not already loaded"		(self class baseConfigurationClassIfAbsent: []) ensureMetacello.		"Construct Metacello project"		constructor := (Smalltalk at: #MetacelloVersionConstructor) on: self.		project := constructor project.		project loadType: #linear. "change to #atomic if desired"		project ]! !!ConfigurationOfNeoJSON methodsFor: 'symbolic versions' stamp: 'SvenVanCaekenberghe 1/22/2016 12:59'!stable: spec	<symbolicVersion: #'stable'>		spec for: #common version: '12'.	spec for: #gemstone version: '12'.! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 3/29/2015 11:39'!version10: spec	<version: '10' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.29';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.26' ]! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 11/25/2015 09:34'!version11: spec	<version: '11' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.30';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.30' ]! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 1/22/2016 12:58'!version12: spec	<version: '12' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.31';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.31' ]! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 9/27/2012 20:29'!version1: spec	<version: '1' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.17';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.15' ]! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 12/18/2012 10:27'!version2: spec	<version: '2' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.19';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.16' ]! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 5/29/2013 15:54'!version3: spec	<version: '3' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.20';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.16' ]! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 8/30/2013 11:12'!version4: spec	<version: '4' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.23';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.18' ]! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 9/3/2013 12:22'!version5: spec	<version: '5' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.24';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.19' ]! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 12/27/2013 19:02'!version6: spec	<version: '6' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.24';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.20' ]! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 12/27/2013 21:44'!version7: spec	<version: '7' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.24';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.21' ]! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 1/21/2014 20:08'!version8: spec	<version: '8' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.24';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.22' ]! !!ConfigurationOfNeoJSON methodsFor: 'versions' stamp: 'SvenVanCaekenberghe 4/24/2014 13:29'!version9: spec	<version: '9' imports: #('1-baseline')>		spec for: #common do: [		spec			blessing: #release;			package: 'Neo-JSON-Core' with: 'Neo-JSON-Core-SvenVanCaekenberghe.27';			package: 'Neo-JSON-Tests' with: 'Neo-JSON-Tests-SvenVanCaekenberghe.24' ]! !"ConfigurationOfNeoJSON"!!NeoJSONObject commentStamp: 'SvenVanCaekenberghe 9/8/2014 13:34' prior: 0!I am NeoJSONObject.I am a Dictionary.I behave more like a JavaScript object. I return nil for missing keys. I allow any property to be read or set by using a normal accessor message.The following are equivalent:	self foo.	self at: #foo.As are the following	self foo: 1. 	self at: #foo put: 1.	I can optionally be used by NeoJSONReader as mapClass (see #mapClass:).For output, I act just like my superclass (it is thus not necessary to do any conversions).Example:	NeoJSONObject fromString: '{"foo":1,"bar":-2}'.	I use JSON as my printed representation.!!NeoJSONMappingNotFound commentStamp: '<historical>' prior: 0!I am NeoJSONMappingNotFound.I am a NotFound exception.I am signalled when no mapping is found for a schema.!!NeoJSONParseError commentStamp: '<historical>' prior: 0!I am NeoJSONParseError.I am an Error.I am signalled when JSON input is not valid while parsing.!!NeoJSONMapper commentStamp: '<historical>' prior: 0!I am NeoJSONMapper.I hold a mapping from schema identifiers to objects that known how to read or write instances from or to JSON.Schema identifiers are either Smalltalk classes or Symbols.I offer a builder interface to construct mappings. The standard object mapping represents a Smalltalk object as a map, mapping some or all instance variables, or a set of accessors (getter/setter methods). Furthermore, for each value an optional schema can be specified.Using a custom mapping, a reader and/or writer block can deal with special cases such as specific collection types with an optional schema for the elements, or a direct mapping of semi primitive types such as Date or DateAndTime.A mapping can be specified explicitely on a mapper, or can be resolved using the #neoJsonMapping: class method.Here are some examples:	mapper mapAllInstVarsFor: Point.	mapper for: TestObject do: [ :mapping |		mapping mapInstVars: #(id name).		(mapping mapInstVar: #timestamp to: 'created-at') valueSchema: DateAndTime.		(mapping mapInstVar: #points) valueSchema: #ArrayOfPoints.		(mapping mapInstVar: #bytes) valueSchema: ByteArray ].	mapper for: DateAndTime customDo: [ :mapping |		mapping decoder: [ :string | DateAndTime fromString: string ].		mapping encoder: [ :dateAndTime | dateAndTime printString ] ].	mapper for: #ArrayOfPoints customDo: [ :mapping |		mapping listOfElementSchema: Point ].  	mapper for: ByteArray customDo: [ :mapping |		mapping listOfType: ByteArray ]!!NeoJSONReader commentStamp: '<historical>' prior: 0!I am NeoJSONReader.I am a NeoJSONMapper.I parse a JSON representation from a textual stream into Smalltalk objects.Primitive types are automatically mapped to their Smalltalk counterpart: Numbers, Strings, Booleans and UndefinedObject.When parsing using #next, lists normally become Arrays and maps become Dictionaries.An alternative listClass or mapClass can be specified.When parsing using #nextAs: a schema can be specified. This schema defines a mapping to be used.Here are some examples:	NeoJSONReader fromString: ' [ 1,2,3 ] '.	NeoJSONReader fromString: ' [ 3.14159, true, false, null, "string" ] '.	NeoJSONReader fromString: ' { "x" : 1, "y" : 2 } '.		(NeoJSONReader on: ' { "x" : 1, "y" : 2 } ' readStream)		mapInstVarsFor: Point;		nextAs: Point.					(NeoJSONReader on: '[ { "x" : 1, "y" : 2 }, { "x" : 3, "y" : 4 } ]' readStream)		mapInstVarsFor: Point;		for: #ArrayOfPoints customDo: [ :mapping |			mapping listOfElementSchema: Point ];		nextAs: #ArrayOfPoints.!!NeoJSONWriter commentStamp: '<historical>' prior: 0!I am NeoJSONWriter.I am a NeoJSONMapper.I write a JSON representation of Smalltalk objects to a textual stream.Objects implementing #neoJsonOn: can be encoded.A number of primitive types, like Strings, Numbers, Booleans and UndefinedObject are treated specially.Collection are encoded as lists, except for Dictionaries that are encoded as maps.All other objects need a mapping to help in doing the encoding.Here are some examples:	NeoJSONWriter toString: #(1 2 3).	NeoJSONWriter toString: { Float pi. true. false. 'string' }.	NeoJSONWriter toStringPretty: (Dictionary new at: #x put: 1; at: #y put: 2; yourself).		String streamContents: [ :stream |		(NeoJSONWriter on: stream)			prettyPrint: true;			mapInstVarsFor: Point;			nextPut: (Array with: 1@3 with: -1@3) ].	!!NeoJSONMapping commentStamp: 'SvenVanCaekenberghe 3/23/2014 19:22' prior: 0!I am NeoJSONMapping, an abstract superclass for mapping definitions.!!NeoJSONCustomMapping commentStamp: '<historical>' prior: 0!I am NeoJSONCustomMapping.I read the next JSON value and turn it into a Smalltalk object using a converter block.!!NeoJSONObjectMapping commentStamp: '<historical>' prior: 0!I am NeoJSONObjectMapping.I describe how instances of a Smalltalk class are mapped to a JSON map.I do this using set of NeoJSONPropertyMappings.I know the Smalltalk class that I am a mapping for. This class is the schema identifier and is used to instanciate new objects.A mapping can be based on any combination of instance variables or accessors (getter/setter pairs). I offer a builder interface to constuct property mappings.!!NeoJSONPropertyMapping commentStamp: '<historical>' prior: 0!I am NeoJSONPropertyMapping.I describe how a property of a Smalltalk class maps to a JSON property.A property is either an instance variable or getter/setter pair.I hold a getter and setter block to do the actual work. The property name is used in JSON.Optionally, the schema for the value of my property can be specified. This is then used recursively.!!NeoJSONStreamingWriter commentStamp: '<historical>' prior: 0!I am NeoJSONStreamingWriter.I help in writing streamed maps and lists.This is an internal class used by NeoJSONWriter to deal with interleaving elements and separators as well as pretty printing.!!Dictionary methodsFor: '*neo-json-core' stamp: 'SvenVanCaekenberghe 6/3/2012 19:30'!neoJsonOn: neoJSONWriter	neoJSONWriter writeMap: self! !!NeoJSONObject commentStamp: 'SvenVanCaekenberghe 9/8/2014 13:34' prior: 35131551!I am NeoJSONObject.I am a Dictionary.I behave more like a JavaScript object. I return nil for missing keys. I allow any property to be read or set by using a normal accessor message.The following are equivalent:	self foo.	self at: #foo.As are the following	self foo: 1. 	self at: #foo put: 1.	I can optionally be used by NeoJSONReader as mapClass (see #mapClass:).For output, I act just like my superclass (it is thus not necessary to do any conversions).Example:	NeoJSONObject fromString: '{"foo":1,"bar":-2}'.	I use JSON as my printed representation.!!NeoJSONObject class methodsFor: 'convenience' stamp: 'SvenVanCaekenberghe 9/8/2014 13:33'!fromString: string	"Parse string as JSON, so that maps become instances of me"	^ (NeoJSONReader on: string readStream)			mapClass: NeoJSONObject;			propertyNamesAsSymbols: true;			next! !!NeoJSONObject methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 9/8/2014 11:43'!at: key	"I return nil for missing keys.	My superclass would signal a KeyNotFound."		^ self at: key ifAbsent: [ nil ]! !!NeoJSONObject methodsFor: 'reflective operations' stamp: 'SvenVanCaekenberghe 9/8/2014 12:32'!doesNotUnderstand: message	"Overwritten so that 'self foo' becomes 'self at: #foo'	and 'self foo: 1' becomes 'self at: #foo put: 1'"		| key |	key := message selector.	key isUnary		ifTrue: [ ^ self at: key ].	^ (key isKeyword and: [ key numArgs = 1 ])		ifTrue: [ self at: key allButLast asSymbol put: message arguments first ]		ifFalse: [ super doesNotUnderstand: message ]! !!NeoJSONObject methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 9/8/2014 11:46'!name	"Overwritten to make this accessor available as key"		^ self at: #name! !!NeoJSONObject methodsFor: 'printing' stamp: 'SvenVanCaekenberghe 9/8/2014 11:45'!printOn: stream	"I use my JSON representation when printing myself"		(NeoJSONWriter on: stream) nextPut: self! !!NeoJSONObject methodsFor: 'evaluating' stamp: 'SvenVanCaekenberghe 9/8/2014 11:46'!value	"Overwritten to make this accessor available as key"		^ self at: #value! !!Number methodsFor: '*neo-json-core' stamp: 'SvenVanCaekenberghe 6/2/2012 22:17'!neoJsonOn: neoJSONWriter	neoJSONWriter writeFloat: self asFloat! !!String methodsFor: '*neo-json-core' stamp: 'SvenVanCaekenberghe 6/2/2012 22:26'!neoJsonOn: neoJSONWriter	neoJSONWriter writeString: self! !!OrderedDictionary methodsFor: '*neo-json-core' stamp: 'SvenVanCaekenberghe 8/26/2015 12:03'!neoJsonOn: neoJSONWriter	neoJSONWriter writeMap: self! !!NeoJSONMappingNotFound commentStamp: '<historical>' prior: 35132191!I am NeoJSONMappingNotFound.I am a NotFound exception.I am signalled when no mapping is found for a schema.!!NeoJSONMappingNotFound methodsFor: 'printing' stamp: 'SvenVanCaekenberghe 6/12/2012 15:47'!standardMessageText	^ String streamContents: [ :stream |		stream << 'No mapping found for '.		stream print: self object.		stream << ' in '.		stream print: self collection class ]! !!SmallDictionary methodsFor: '*neo-json-core' stamp: 'SvenVanCaekenberghe 6/3/2012 19:30'!neoJsonOn: neoJSONWriter	neoJSONWriter writeMap: self! !!Boolean methodsFor: '*neo-json-core' stamp: 'SvenVanCaekenberghe 6/2/2012 22:14'!neoJsonOn: neoJSONWriter	neoJSONWriter writeBoolean: self! !!UndefinedObject methodsFor: '*neo-json-core' stamp: 'SvenVanCaekenberghe 6/2/2012 22:15'!neoJsonOn: neoJSONWriter	neoJSONWriter writeNull! !!Integer methodsFor: '*neo-json-core' stamp: 'SvenVanCaekenberghe 6/2/2012 22:17'!neoJsonOn: neoJSONWriter	neoJSONWriter writeInteger: self! !!NeoJSONParseError commentStamp: '<historical>' prior: 35132361!I am NeoJSONParseError.I am an Error.I am signalled when JSON input is not valid while parsing.!!NeoJSONMapper commentStamp: '<historical>' prior: 35132515!I am NeoJSONMapper.I hold a mapping from schema identifiers to objects that known how to read or write instances from or to JSON.Schema identifiers are either Smalltalk classes or Symbols.I offer a builder interface to construct mappings. The standard object mapping represents a Smalltalk object as a map, mapping some or all instance variables, or a set of accessors (getter/setter methods). Furthermore, for each value an optional schema can be specified.Using a custom mapping, a reader and/or writer block can deal with special cases such as specific collection types with an optional schema for the elements, or a direct mapping of semi primitive types such as Date or DateAndTime.A mapping can be specified explicitely on a mapper, or can be resolved using the #neoJsonMapping: class method.Here are some examples:	mapper mapAllInstVarsFor: Point.	mapper for: TestObject do: [ :mapping |		mapping mapInstVars: #(id name).		(mapping mapInstVar: #timestamp to: 'created-at') valueSchema: DateAndTime.		(mapping mapInstVar: #points) valueSchema: #ArrayOfPoints.		(mapping mapInstVar: #bytes) valueSchema: ByteArray ].	mapper for: DateAndTime customDo: [ :mapping |		mapping decoder: [ :string | DateAndTime fromString: string ].		mapping encoder: [ :dateAndTime | dateAndTime printString ] ].	mapper for: #ArrayOfPoints customDo: [ :mapping |		mapping listOfElementSchema: Point ].  	mapper for: ByteArray customDo: [ :mapping |		mapping listOfType: ByteArray ]!!NeoJSONMapper methodsFor: 'private' stamp: 'SvenVanCaekenberghe 3/22/2014 10:57'!customMappingFor: schemaName	^ self mappings		at: schemaName		ifAbsentPut: [ 			NeoJSONCustomMapping new				schemaName: schemaName;				yourself ]! !!NeoJSONMapper methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 3/22/2014 10:56'!for: schemaName customDo: block	"Execute the code in block to further customize the mapping for schemaName.	Create and add a new custom mapping for schemaName if necessary."		| mapping |	mapping := self customMappingFor: schemaName.	block value: mapping.	^ mapping! !!NeoJSONMapper methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 3/22/2014 10:57'!for: smalltalkClass do: block	"Execute the code in block to further customize the mapping for schemaName.	Create and add a new standard object mapping for schemaName if necessary."		| mapping |	mapping := self objectMappingFor: smalltalkClass.	block value: mapping.	^ mapping! !!NeoJSONMapper methodsFor: 'convencience' stamp: 'SvenVanCaekenberghe 3/22/2014 10:54'!mapAllInstVarsFor: smalltalkClass	"Map the instance variables of smalltalkClass and all its super classes"	| mapping |	mapping := self objectMappingFor: smalltalkClass.	mapping mapAllInstVars.	^ mapping! !!NeoJSONMapper methodsFor: 'convencience' stamp: 'SvenVanCaekenberghe 3/22/2014 10:54'!mapInstVarsFor: smalltalkClass	"Map the instance variables of smalltalkClass"	| mapping |	mapping := self objectMappingFor: smalltalkClass.	mapping mapInstVars.	^ mapping! !!NeoJSONMapper methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/12/2012 15:48'!mappingFor: schema	^ self 		mappingFor: schema 		ifAbsent: [ NeoJSONMappingNotFound signalFor: schema in: self ]! !!NeoJSONMapper methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:24'!mappingFor: schema ifAbsent: block	(self mappings includesKey: schema)		ifFalse: [ self resolveMappingFor: schema ].	^ self mappings		at: schema		ifAbsent: block! !!NeoJSONMapper methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/7/2012 14:55'!mappings	^ mappings		ifNil: [ mappings := Dictionary new ]! !!NeoJSONMapper methodsFor: 'private' stamp: 'SvenVanCaekenberghe 3/22/2014 10:54'!objectMappingFor: smalltalkClass	^ self mappings		at: smalltalkClass		ifAbsentPut: [ 			NeoJSONObjectMapping new				subjectClass: smalltalkClass;				yourself ]! !!NeoJSONMapper methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/9/2012 18:29'!resolveMappingFor: class	(class respondsTo: #neoJsonMapping:)		ifTrue: [ 			class perform: #neoJsonMapping: with: self ]! !!NeoJSONReader commentStamp: '<historical>' prior: 35134064!I am NeoJSONReader.I am a NeoJSONMapper.I parse a JSON representation from a textual stream into Smalltalk objects.Primitive types are automatically mapped to their Smalltalk counterpart: Numbers, Strings, Booleans and UndefinedObject.When parsing using #next, lists normally become Arrays and maps become Dictionaries.An alternative listClass or mapClass can be specified.When parsing using #nextAs: a schema can be specified. This schema defines a mapping to be used.Here are some examples:	NeoJSONReader fromString: ' [ 1,2,3 ] '.	NeoJSONReader fromString: ' [ 3.14159, true, false, null, "string" ] '.	NeoJSONReader fromString: ' { "x" : 1, "y" : 2 } '.		(NeoJSONReader on: ' { "x" : 1, "y" : 2 } ' readStream)		mapInstVarsFor: Point;		nextAs: Point.					(NeoJSONReader on: '[ { "x" : 1, "y" : 2 }, { "x" : 3, "y" : 4 } ]' readStream)		mapInstVarsFor: Point;		for: #ArrayOfPoints customDo: [ :mapping |			mapping listOfElementSchema: Point ];		nextAs: #ArrayOfPoints.!!NeoJSONReader class methodsFor: 'convenience' stamp: 'SvenVanCaekenberghe 6/9/2012 18:26'!fromString: string	^ (self on: string readStream) next! !!NeoJSONReader class methodsFor: 'convenience' stamp: 'SvenVanCaekenberghe 6/9/2012 18:30'!fromString: string as: schema	^ (self on: string readStream) nextAs: schema! !!NeoJSONReader class methodsFor: 'instance creation' stamp: 'SvenVanCaekenberghe 6/13/2012 16:10'!on: readStream	"Initialize on readStream, which should be a character stream that 	implements #next, #peek, #atEnd and (optionally) #close."	^ self new		on: readStream;		yourself! !!NeoJSONReader methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 3/6/2013 14:46'!atEnd	^ readStream atEnd! !!NeoJSONReader methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/2/2012 13:50'!close	readStream ifNotNil: [		readStream close.		readStream := nil ]! !!NeoJSONReader methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/2/2012 21:26'!consumeWhitespace	"Strip whitespaces from the input stream."	[ readStream atEnd not and: [ readStream peek isSeparator ] ]		whileTrue: [ 			readStream next ]! !!NeoJSONReader methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/12/2012 15:54'!error: text	NeoJSONParseError signal: text! !!NeoJSONReader methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/2/2012 14:01'!expectChar: character	"Expect character and consume input and optional whitespace at the end,	 throw an error otherwise."	(self matchChar: character)		ifFalse: [ self error: character asString, ' expected' ]! !!NeoJSONReader methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/13/2012 09:39'!initialize 	super initialize.	propertyNamesAsSymbols := false! !!NeoJSONReader methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/13/2012 09:37'!listClass	"Return the collection type to use for JSON lists"		^ listClass ifNil: [ Array ]! !!NeoJSONReader methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/13/2012 09:38'!listClass: collectionClass	listClass := collectionClass! !!NeoJSONReader methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/13/2012 09:37'!mapClass	"Return the collection type to use for JSON maps"		^ mapClass ifNil: [ Dictionary ]! !!NeoJSONReader methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/13/2012 09:38'!mapClass: collectionClass	mapClass := collectionClass! !!NeoJSONReader methodsFor: 'private' stamp: 'SvenVanCaekenberghe 12/3/2012 10:57'!match: string do: block	"Try to read and consume string and execute block if successful.	Else do nothing (but do not back up)"	(string allSatisfy: [ :each | readStream peekFor: each ])		ifTrue: [ 			self consumeWhitespace.			block value ]! !!NeoJSONReader methodsFor: 'private' stamp: 'SvenVanCaekenberghe 12/3/2012 10:51'!matchChar: character	"Tries to match character, consume input and 	answer true if successful and consumes whitespace at the end.	When character does not match, return false and leave stream untouched."	^ (readStream peekFor: character)		ifTrue: [ 			self consumeWhitespace.			true ]		ifFalse: [ false ]! !!NeoJSONReader methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/7/2012 16:56'!next	"Primary interface to parse a JSON value.	Return either primitives, a listClass or a mapClass instance."		^ self 		consumeWhitespace; 		parseValue! !!NeoJSONReader methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/7/2012 22:21'!nextAs: schema	"Secondary interface to parse JSON.	Return objects according to schema."		| mapping |	schema ifNil: [ ^ self next ].	self consumeWhitespace.	mapping := self mappingFor: schema.	^ mapping readFrom: self! !!NeoJSONReader methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/13/2012 16:10'!on: aReadStream	"Initialize on aReadStream, which should be a character stream that 	implements #next, #peek, #atEnd and (optionally) #close."		readStream := aReadStream! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/7/2012 16:59'!parseCharacter	| char |	(char := readStream next) = $\ 		ifFalse: [ ^ char ].	('/"\' includes: (char := readStream next))		ifTrue: [ ^ char ].	('bfnrt' includes: char)		ifTrue: [ ^ self unescapeChar: char ].	char = $u		ifTrue: [ ^ self parseCharacterHex ].	self error: 'invalid escape character \' , (String with: char)! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/2/2012 14:20'!parseCharacterHex	| value |	value := self parseCharacterHexDigit.	3 timesRepeat: [ 		value := (value << 4) + self parseCharacterHexDigit ].	^ Character codePoint: value! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/2/2012 14:21'!parseCharacterHexDigit	| digit |	readStream atEnd 		ifFalse: [ 			digit := readStream next asInteger.			(digit between: "$0" 48 and: "$9" 57)				ifTrue: [ ^ digit - 48 ].			(digit between: "$A" 65 and: "$F" 70)				ifTrue: [ ^ digit - 55 ].			(digit between: "$a" 97 and: "$f" 102)				ifTrue: [ ^ digit - 87 ] ].	self error: 'hex-digit expected'! !!NeoJSONReader methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/2/2012 14:16'!parseConstantDo: block	"Parse and consume either true|false|nil|null and execute block 	or else do nothing (but do not back up).	Hand written implementation to avoid the use of #position:"		(readStream peek = $t)		ifTrue: [			^ self match: 'true' do: [ block value: true ] ].	(readStream peek = $f)		ifTrue: [			^ self match: 'false' do: [ block value: false ] ].	(readStream peek = $n)		ifTrue: [			^ self match: 'null' do: [ block value: nil ] ]! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/7/2012 17:17'!parseList	^ self listClass 		streamContents: [ :stream |			self parseListElementsDo: [ :each |				stream nextPut: each ] ]		! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/7/2012 17:15'!parseListDo: block	self expectChar: $[.	(self matchChar: $]) 		ifTrue: [ ^ self ].	[ readStream atEnd ] 		whileFalse: [			block value.			(self matchChar: $]) 				ifTrue: [ ^ self ].			self expectChar: $, ].	self error: 'end of list expected'! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/7/2012 17:16'!parseListElementsDo: block	self parseListDo: [ 		block value: self parseValue ]! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/7/2012 17:23'!parseMap	| map |	map := self mapClass new.	self parseMapKeysAndValuesDo: [ :key :value |		map at: key put: value ].	^ map! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/7/2012 17:23'!parseMapDo: block	self expectChar: ${.	(self matchChar: $})		ifTrue: [ ^ self ].	[ readStream atEnd ] whileFalse: [		block value.		(self matchChar: $}) 			ifTrue: [ ^ self ].		self expectChar: $, ].	self error: 'end of map expected'! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/7/2012 17:22'!parseMapKeysAndValuesDo: block	self parseMapKeysDo: [ :key |		block value: key value: self parseValue ]! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/7/2012 17:23'!parseMapKeysDo: block	self parseMapDo: [ | key |		key := self parsePropertyName.		self expectChar: $:.		block value: key ]! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 12/3/2012 11:08'!parseNumber	| negated number |	negated := readStream peekFor: $-.	number := self parseNumberInteger.	(readStream peekFor: $.)		ifTrue: [ number := number + self parseNumberFraction ].	((readStream peekFor: $e) or: [ readStream peekFor: $E ])		ifTrue: [ number := number * self parseNumberExponent ].	negated		ifTrue: [ number := number negated ].	self consumeWhitespace.	^ number! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 12/3/2012 11:08'!parseNumberExponent	| number negated |	number := 0.	(negated := readStream peekFor: $-)		ifFalse: [ readStream peekFor: $+ ].	[ readStream atEnd not and: [ readStream peek isDigit ] ]		whileTrue: [ number := 10 * number + readStream next digitValue ].	negated		ifTrue: [ number := number negated ].	^ 10 raisedTo: number! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/2/2012 14:00'!parseNumberFraction	| number power |	number := 0.	power := 1.0.	[ readStream atEnd not and: [ readStream peek isDigit ] ] 		whileTrue: [			number := 10 * number + readStream next digitValue.			power := power * 10.0 ].	^ number / power! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/12/2012 16:15'!parseNumberInteger	| number |	number := nil.	[ readStream atEnd not and: [ readStream peek isDigit ] ] 		whileTrue: [ 			number := 10 * (number ifNil: [ 0 ]) + readStream next digitValue ].	number ifNil: [ self error: 'Integer digit expected' ].	^ number! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/13/2012 09:40'!parsePropertyName	| name |	name := self parseValue.	^ name isString		ifTrue: [ 			propertyNamesAsSymbols 				ifTrue: [ name asSymbol ]				ifFalse: [ name ] ]		ifFalse: [ 			self error: 'property name must be a string, not ', name asString ]! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/2/2012 13:58'!parseString	| result |	self expectChar: $".	result := self stringStreamContents: [ :stream |		[ readStream atEnd or: [ readStream peek = $"] ] 			whileFalse: [ 				stream nextPut: self parseCharacter ] ].	self expectChar: $".	^ result! !!NeoJSONReader methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/12/2012 15:56'!parseValue	| char |	readStream atEnd ifFalse: [ 		char := readStream peek.		char = ${			ifTrue: [ ^ self parseMap ].		char = $[			ifTrue: [ ^ self parseList ].		char = $"			ifTrue: [ ^ self parseString ].		(char = $- or: [ char isDigit ])			ifTrue: [ ^ self parseNumber ].		self parseConstantDo: [ :value | ^ value ] ].	self error: 'invalid input: ', char asString! !!NeoJSONReader methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/13/2012 09:39'!propertyNamesAsSymbols: boolean	propertyNamesAsSymbols := boolean! !!NeoJSONReader methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/7/2012 16:54'!stringStreamContents: block	"Like String streamContents: block	but reusing the underlying buffer for improved efficiency"		stringStream 		ifNil: [ 			stringStream := (String new: 32) writeStream ].	stringStream reset.	block value: stringStream.	^ stringStream contents! !!NeoJSONReader methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/7/2012 16:55'!unescapeChar: char	"Handle one of the named character escapes, b, f, n, r or t. Else fail."		char = $b		ifTrue: [ ^ Character backspace ].	char = $f		ifTrue: [ ^ Character newPage ].	char = $n		ifTrue: [ ^ Character lf ].	char = $r		ifTrue: [ ^ Character cr ].	char = $t		ifTrue: [ ^ Character tab ].	self error: 'Unknown escape char: ', (String with: char)! !!NeoJSONWriter commentStamp: '<historical>' prior: 35135115!I am NeoJSONWriter.I am a NeoJSONMapper.I write a JSON representation of Smalltalk objects to a textual stream.Objects implementing #neoJsonOn: can be encoded.A number of primitive types, like Strings, Numbers, Booleans and UndefinedObject are treated specially.Collection are encoded as lists, except for Dictionaries that are encoded as maps.All other objects need a mapping to help in doing the encoding.Here are some examples:	NeoJSONWriter toString: #(1 2 3).	NeoJSONWriter toString: { Float pi. true. false. 'string' }.	NeoJSONWriter toStringPretty: (Dictionary new at: #x put: 1; at: #y put: 2; yourself).		String streamContents: [ :stream |		(NeoJSONWriter on: stream)			prettyPrint: true;			mapInstVarsFor: Point;			nextPut: (Array with: 1@3 with: -1@3) ].	!!NeoJSONWriter class methodsFor: 'instance creation' stamp: 'SvenVanCaekenberghe 6/14/2012 09:54'!on: writeStream	"Initialize on writeStream, which should be a character stream that 	implements #nextPut:, #nextPutAll:, #space and (optionally) #close."	^ self new		on: writeStream;		yourself! !!NeoJSONWriter class methodsFor: 'convenience' stamp: 'SvenVanCaekenberghe 6/9/2012 18:27'!toString: object	^ String streamContents: [ :stream |			(self on: stream) nextPut: object ]! !!NeoJSONWriter class methodsFor: 'convenience' stamp: 'SvenVanCaekenberghe 6/9/2012 18:28'!toStringPretty: object	^ String streamContents: [ :stream |			(self on: stream)				prettyPrint: true; 				nextPut: object ]! !!NeoJSONWriter methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 9/3/2013 12:00'!asciiOnly: boolean	asciiOnly := boolean! !!NeoJSONWriter methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/2/2012 22:06'!close	writeStream ifNotNil: [		writeStream close.		writeStream := nil ]! !!NeoJSONWriter methodsFor: 'private' stamp: 'SvenVanCaekenberghe 9/3/2013 11:58'!doesCodePointNeedEscaping: code	code < 32 ifTrue: [ ^ true ].	( code = 34 or: [ code = 92 ]) ifTrue: [ ^ true ].	^ asciiOnly and: [ code > 126 ]	! !!NeoJSONWriter methodsFor: 'private' stamp: 'SvenVanCaekenberghe 9/3/2013 11:55'!encodeChar: char	| code |	code := char codePoint.	(self doesCodePointNeedEscaping: code)		ifTrue: [ self escapeChar: code ]		ifFalse: [ writeStream nextPut: char ]! !!NeoJSONWriter methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/3/2012 19:41'!encodeKey: key value: value	self nextPut: key.	self prettyPrintSpace.	writeStream nextPut: $:.	self prettyPrintSpace.	self nextPut: value! !!NeoJSONWriter methodsFor: 'private' stamp: 'SvenVanCaekenberghe 3/23/2014 21:53'!encodeKey: key value: value as: valueSchema	self nextPut: key.	self prettyPrintSpace.	writeStream nextPut: $:.	self prettyPrintSpace.	self nextPut: value as: valueSchema! !!NeoJSONWriter methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/2/2012 22:45'!escapeChar: code	code = 34		ifTrue: [ ^ writeStream nextPutAll: '\"' ].	code = 92		ifTrue: [ ^ writeStream nextPutAll: '\\' ].	code = 47		ifTrue: [ ^ writeStream nextPutAll: '\/' ].	code = 8		ifTrue: [ ^ writeStream nextPutAll: '\b' ].	code = 12		ifTrue: [ ^ writeStream nextPutAll: '\f' ].			code = 10		ifTrue: [ ^ writeStream nextPutAll: '\n' ].			code = 13		ifTrue: [ ^ writeStream nextPutAll: '\r' ].			code = 9		ifTrue: [ ^ writeStream nextPutAll: '\t' ].			writeStream nextPutAll: '\u'.	code printOn: writeStream base: 16 nDigits: 4! !!NeoJSONWriter methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/3/2012 19:31'!indentedDo: block	level := level + 1.	block value.	level := level - 1! !!NeoJSONWriter methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 5/28/2014 20:43'!initialize	super initialize.	self newLine: String cr.	self prettyPrint: false.	self asciiOnly: false.	self writeNil: false.	level := 0! !!NeoJSONWriter methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/3/2012 19:32'!listElementSeparator	writeStream nextPut: $,.	self newlineIndent! !!NeoJSONWriter methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/3/2012 19:32'!mapElementSeparator	writeStream nextPut: $,.	self newlineIndent! !!NeoJSONWriter methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 12/10/2012 16:27'!newLine: string	newLine := string! !!NeoJSONWriter methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 4/17/2014 11:58'!newline	"Write a newline on the stream that I wrap.	What gets written depends on the configuration, see #newLine:"		writeStream nextPutAll: newLine! !!NeoJSONWriter methodsFor: 'private' stamp: 'SvenVanCaekenberghe 4/17/2014 11:55'!newlineIndent	prettyPrint		ifTrue: [ 			self newline.			level timesRepeat: [ writeStream nextPut: Character tab ] ]! !!NeoJSONWriter methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/2/2012 22:11'!nextPut: anObject	anObject neoJsonOn: self! !!NeoJSONWriter methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/23/2014 21:57'!nextPut: anObject as: schema	"Secondary interface to write JSON.	Write objects according to schema."		| mapping |	schema ifNil: [ ^ self nextPut: anObject ].	mapping := self mappingFor: schema.	^ mapping writeObject: anObject on: self! !!NeoJSONWriter methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/14/2012 09:54'!on: aWriteStream	"Initialize on aWriteStream, which should be a character stream that 	implements #nextPut:, #nextPutAll:, #space and (optionally) #close."	writeStream := aWriteStream! !!NeoJSONWriter methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/2/2012 22:06'!prettyPrint: boolean	prettyPrint := boolean! !!NeoJSONWriter methodsFor: 'private' stamp: 'SvenVanCaekenberghe 12/10/2012 16:33'!prettyPrintSpace	prettyPrint		ifTrue: [ writeStream nextPut: Character space ]! !!NeoJSONWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/2/2012 22:18'!writeBoolean: boolean	boolean printOn: writeStream! !!NeoJSONWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/2/2012 22:19'!writeFloat: float	float printOn: writeStream! !!NeoJSONWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/2/2012 22:18'!writeInteger: integer	integer printOn: writeStream	! !!NeoJSONWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:20'!writeList: collection	self writeListStreamingDo: [ :jsonListWriter |		collection do: [ :each |			jsonListWriter writeElement: each ] ]! !!NeoJSONWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:19'!writeListStreamingDo: block	writeStream nextPut: $[.	self writeStreamingDo: block.	writeStream nextPut: $]! !!NeoJSONWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:04'!writeMap: keyValueCollection	self writeMapStreamingDo: [ :jsonMapWriter |		keyValueCollection keysAndValuesDo: [ :key :value |			jsonMapWriter writeKey: key value: value ] ]! !!NeoJSONWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:19'!writeMapStreamingDo: block	writeStream nextPut: ${.	self writeStreamingDo: block.	writeStream nextPut: $}! !!NeoJSONWriter methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 5/28/2014 20:44'!writeNil	^ writeNil! !!NeoJSONWriter methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 5/28/2014 20:43'!writeNil: boolean	writeNil := boolean! !!NeoJSONWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/2/2012 22:15'!writeNull	writeStream nextPutAll: 'null'! !!NeoJSONWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/7/2012 15:55'!writeObject: anObject	| mapping |	mapping := self mappingFor: anObject class.	mapping		writeObject: anObject		on: self! !!NeoJSONWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:19'!writeStreamingDo: block	| mapWriter |	mapWriter := NeoJSONStreamingWriter on: self.	self indentedDo: [		block value: mapWriter ].	mapWriter wasUsed		ifTrue: [ self newlineIndent ]		ifFalse: [ self prettyPrintSpace ]! !!NeoJSONWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/3/2012 19:42'!writeString: string	writeStream nextPut: $".	string do: [ :each |		self encodeChar: each ].	writeStream nextPut: $"! !!NeoJSONMapping commentStamp: 'SvenVanCaekenberghe 3/23/2014 19:22' prior: 35135982!I am NeoJSONMapping, an abstract superclass for mapping definitions.!!NeoJSONCustomMapping commentStamp: '<historical>' prior: 35136114!I am NeoJSONCustomMapping.I read the next JSON value and turn it into a Smalltalk object using a converter block.!!NeoJSONCustomMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/13/2012 11:14'!decoder: block	"Set a decoder block that accepts the next object representation read 	and converts it into the actual object to be returned."	self reader: [ :jsonReader | | representation |		representation := jsonReader next.		block value: representation ]! !!NeoJSONCustomMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/13/2012 11:14'!encoder: block	"Set a encoder block that accepts the next object to be written 	and converts it into the actual representation to be written."	self writer: [ :jsonWriter :anObject | | representation |		representation := block value: anObject.		jsonWriter nextPut: representation ]! !!NeoJSONCustomMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/23/2014 19:24'!identifier	^ schemaName ! !!NeoJSONCustomMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/13/2012 11:38'!listOfElementSchema: elementSchema	"Set the reader to a block that will create an instance of the	standard listClass while reading a list of elements of type elementSchema"	self reader: [ :jsonReader |		jsonReader listClass streamContents: [ :stream |			jsonReader parseListDo: [ | element |				element := jsonReader nextAs: elementSchema.				stream nextPut: element ] ] ]	"we do not set a writer, #neoJsonOn: should be sufficient"! !!NeoJSONCustomMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/13/2012 11:25'!listOfType: collectionClass	"Set the reader to a block that will create an instance of collectionClass 	using #streamContents: while reading a list of elements"	self reader: [ :jsonReader |		collectionClass streamContents: [ :stream |			jsonReader parseListDo: [ | element |				element := jsonReader next.				stream nextPut: element ] ] ]	"we do not set a writer, #neoJsonOn: should be sufficient"! !!NeoJSONCustomMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/13/2012 11:39'!listOfType: collectionClass andElementSchema: elementSchema	"Set the reader to a block that will create an instance of collectionClass 	using #streamContents: while reading a list of elements of type elementSchema"	self reader: [ :jsonReader |		collectionClass streamContents: [ :stream |			jsonReader parseListDo: [ | element |				element := jsonReader nextAs: elementSchema.				stream nextPut: element ] ] ]	"we do not set a writer, #neoJsonOn: should be sufficient"! !!NeoJSONCustomMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 8/30/2013 11:04'!mapWithValueSchema: valueSchema	"Set the reader to a block that will create an instance of the	standard mapClass while reading values of type valueSchema,	with standard keys"	self reader: [ :jsonReader | | map |		map := jsonReader mapClass new.		jsonReader parseMapKeysDo: [ :key | | value |				value := jsonReader nextAs: valueSchema.				map at: key put: value ].		map ]	"we do not set a writer, #neoJsonOn: should be sufficient"! !!NeoJSONCustomMapping methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 3/24/2014 10:34'!readFrom: jsonReader	^ reader 		ifNil: [ jsonReader next ]		ifNotNil: [ reader value: jsonReader ]! !!NeoJSONCustomMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/24/2014 10:36'!reader: block	"Set the reader to block, a 1 argument block that when given 	a jsonReader as argument reads the object that I represent.	When there is no reader block, the default #next will be used."		reader := block! !!NeoJSONCustomMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/8/2012 21:09'!schemaName: schema	schemaName := schema! !!NeoJSONCustomMapping methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 3/23/2014 22:10'!writeObject: anObject on: jsonWriter	writer 		ifNil: [ anObject neoJsonOn: jsonWriter ]		ifNotNil: [ writer value: jsonWriter value: anObject ]! !!NeoJSONCustomMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/23/2014 22:12'!writer: block	"Set the writer to block, a 2 argument block that when given: a jsonWriter 	and the object to write will write the object that I represent.	When there is no writer block, the default #neoJsonOn: will be used."		writer := block! !!NeoJSONMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/23/2014 19:22'!identifier	self subclassResponsibility ! !!NeoJSONMapping methodsFor: 'printing' stamp: 'SvenVanCaekenberghe 3/23/2014 19:24'!printOn: stream	super printOn: stream.	stream nextPut: $(; print: self identifier; nextPut: $)! !!NeoJSONMapping methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 3/23/2014 19:23'!readFrom: jsonReader	self subclassResponsibility ! !!NeoJSONMapping methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 3/23/2014 19:23'!writeObject: anObject on: jsonWriter	self subclassResponsibility ! !!NeoJSONObjectMapping commentStamp: '<historical>' prior: 35136292!I am NeoJSONObjectMapping.I describe how instances of a Smalltalk class are mapped to a JSON map.I do this using set of NeoJSONPropertyMappings.I know the Smalltalk class that I am a mapping for. This class is the schema identifier and is used to instanciate new objects.A mapping can be based on any combination of instance variables or accessors (getter/setter pairs). I offer a builder interface to constuct property mappings.!!NeoJSONObjectMapping methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 12/30/2015 11:44'!allowNil	allowNil := true! !!NeoJSONObjectMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/23/2014 19:25'!identifier	^ subjectClass ! !!NeoJSONObjectMapping methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 12/30/2015 11:44'!initialize	super initialize.	properties := Dictionary new.	allowNil := false! !!NeoJSONObjectMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/12/2012 13:13'!mapAccessor: accessor	^ self mapAccessor: accessor to: accessor ! !!NeoJSONObjectMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/12/2012 13:12'!mapAccessor: accessor mutator: mutator to: propertyName	^ self 		mapProperty: propertyName		getter: [ :object | object perform: accessor ]		setter: [ :object :value | object perform: mutator with: value ] ! !!NeoJSONObjectMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/12/2012 13:13'!mapAccessor: accessor to: propertyName	^ self 		mapProperty: propertyName		getter: [ :object | object perform: accessor ]		setter: [ :object :value | object perform: accessor asMutator with: value ] ! !!NeoJSONObjectMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/12/2012 13:14'!mapAccessors: accessors	accessors do: [ :each |		self mapAccessor: each ]! !!NeoJSONObjectMapping methodsFor: 'convenience' stamp: 'SvenVanCaekenberghe 6/6/2012 16:00'!mapAllInstVars	self mapInstVars: subjectClass allInstVarNames! !!NeoJSONObjectMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/9/2012 18:37'!mapInstVar: instVarName	^ self mapInstVar: instVarName to: instVarName ! !!NeoJSONObjectMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/9/2012 18:36'!mapInstVar: instVarName to: propertyName	| index |	index := subjectClass 		instVarIndexFor: instVarName 		ifAbsent: [ self error: 'Inst var not found: ', instVarName printString ].	^ self 		mapProperty: propertyName		getter: [ :object | object instVarAt: index ]		setter: [ :object :value | object instVarAt: index put: value ] ! !!NeoJSONObjectMapping methodsFor: 'convenience' stamp: 'SvenVanCaekenberghe 6/6/2012 15:59'!mapInstVars	self mapInstVars: subjectClass instVarNames! !!NeoJSONObjectMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/6/2012 16:00'!mapInstVars: instVarNames	instVarNames do: [ :each |		self mapInstVar: each ]! !!NeoJSONObjectMapping methodsFor: 'mapping' stamp: 'SvenVanCaekenberghe 6/9/2012 18:13'!mapProperty: propertyName getter: readBlock setter: writeBlock	| propertyMapping |	propertyMapping := NeoJSONPropertyMapping new.	propertyMapping 		propertyName: propertyName;		getter: readBlock;		setter: writeBlock.	properties at: propertyName put: propertyMapping.	^ propertyMapping ! !!NeoJSONObjectMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/7/2012 14:52'!propertyNamed: propertyName ifAbsent: block	^ properties at: propertyName ifAbsent: block! !!NeoJSONObjectMapping methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 12/30/2015 11:48'!readFrom: jsonReader	| anObject |	anObject := subjectClass new.	allowNil ifTrue: [ 		jsonReader parseConstantDo: [ :value | 			^ value ifNotNil: [ jsonReader error: 'Unexpected boolean constant' ] ] ].	jsonReader parseMapKeysDo: [ :key |		(self propertyNamed: key ifAbsent: [ nil ])			ifNil: [				"read, skip & ignore value"				jsonReader next ]			ifNotNil: [ :mapping |				mapping readObject: anObject from: jsonReader ] ].	^ anObject! !!NeoJSONObjectMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:32'!subjectClass: smalltalkClass	subjectClass := smalltalkClass! !!NeoJSONObjectMapping methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/6/2012 14:55'!writeObject: anObject on: jsonWriter	jsonWriter writeMapStreamingDo: [ :jsonMapWriter |		properties valuesDo: [ :each |			each writeObject: anObject on: jsonMapWriter ] ]! !!NeoJSONPropertyMapping commentStamp: '<historical>' prior: 35136795!I am NeoJSONPropertyMapping.I describe how a property of a Smalltalk class maps to a JSON property.A property is either an instance variable or getter/setter pair.I hold a getter and setter block to do the actual work. The property name is used in JSON.Optionally, the schema for the value of my property can be specified. This is then used recursively.!!NeoJSONPropertyMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:34'!getter: block	getter := block! !!NeoJSONPropertyMapping methodsFor: 'printing' stamp: 'SvenVanCaekenberghe 7/4/2013 19:07'!printOn: stream	super printOn: stream.	stream nextPut: $(; print: propertyName; nextPut: $)! !!NeoJSONPropertyMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:34'!propertyName: string	propertyName := string! !!NeoJSONPropertyMapping methodsFor: 'parsing' stamp: 'SvenVanCaekenberghe 6/8/2012 17:04'!readObject: anObject from: jsonReader	| value |	value := jsonReader nextAs: valueSchema.	setter value: anObject value: value! !!NeoJSONPropertyMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:34'!setter: block	setter := block! !!NeoJSONPropertyMapping methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/8/2012 17:01'!valueSchema: schemaName	valueSchema := schemaName! !!NeoJSONPropertyMapping methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 5/28/2014 20:46'!writeObject: anObject on: jsonMapWriter	| value |	value := getter value: anObject.	(value notNil or: [ jsonMapWriter writeNil ])		ifTrue: [ jsonMapWriter writeKey: propertyName value: value as: valueSchema ] ! !!NeoJSONStreamingWriter commentStamp: '<historical>' prior: 35137219!I am NeoJSONStreamingWriter.I help in writing streamed maps and lists.This is an internal class used by NeoJSONWriter to deal with interleaving elements and separators as well as pretty printing.!!NeoJSONStreamingWriter class methodsFor: 'instance creation' stamp: 'SvenVanCaekenberghe 6/6/2012 15:05'!on: jsonWriter	^ self new		on: jsonWriter;		yourself! !!NeoJSONStreamingWriter methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/6/2012 14:48'!initialize	super initialize.	first := true! !!NeoJSONStreamingWriter methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/6/2012 14:49'!on: aJSONWriter	jsonWriter := aJSONWriter! !!NeoJSONStreamingWriter methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:00'!wasUsed	^ first not! !!NeoJSONStreamingWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:15'!writeElement: value	first 		ifTrue: [ 			jsonWriter newlineIndent. 			first := false ]		ifFalse: [ 			jsonWriter listElementSeparator ].	jsonWriter nextPut: value ! !!NeoJSONStreamingWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 6/6/2012 15:01'!writeKey: key value: value	first 		ifTrue: [ 			jsonWriter newlineIndent. 			first := false ]		ifFalse: [ 			jsonWriter mapElementSeparator ].	jsonWriter encodeKey: key value: value ! !!NeoJSONStreamingWriter methodsFor: 'writing' stamp: 'SvenVanCaekenberghe 3/23/2014 21:53'!writeKey: key value: value as: valueSchema	first 		ifTrue: [ 			jsonWriter newlineIndent. 			first := false ]		ifFalse: [ 			jsonWriter mapElementSeparator ].	jsonWriter encodeKey: key value: value as: valueSchema! !!NeoJSONStreamingWriter methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 5/28/2014 20:45'!writeNil	^ jsonWriter writeNil! !!Object methodsFor: '*neo-json-core' stamp: 'SvenVanCaekenberghe 6/5/2012 22:29'!neoJsonOn: neoJSONWriter	neoJSONWriter writeObject: self! !!Collection methodsFor: '*neo-json-core' stamp: 'SvenVanCaekenberghe 6/3/2012 19:29'!neoJsonOn: neoJSONWriter	neoJSONWriter writeList: self! !"Neo-JSON-Core"!!NeoJSONBenchmark commentStamp: 'SvenVanCaekenberghe 6/5/2012 09:48' prior: 0!I am NeoJSONBenchmark.I hold 1000 objects of the form Dictionary('color'->'green' 'enabled'->false 'id'->1 'name'->'Name-1' 'value'->0.002 ) in an Array.I hold the JSON serialization of that as a String of the form '[{"value":0.002,"enabled":false,"name":"Name-1","color":"green","id":1}, ...| benchmark |benchmark := NeoJSONBenchmark new.[benchmark read] bench.| benchmark |benchmark := NeoJSONBenchmark new.[benchmark write] bench.| benchmark |benchmark := NeoJSONBenchmark new.[benchmark read] timeToRun.| benchmark |benchmark := NeoJSONBenchmark new.[benchmark write] timeToRun.!!NeoJSONMockStream commentStamp: '<historical>' prior: 0!I am NeoJSONMockStream.I wrap another stream to validate the limited API used.!!NeoJSONTestObject1 commentStamp: '<historical>' prior: 0!I am NeoJSONTestObject1.I repesent a domain model object.I have the following properties:- id <Integer>- name <String>- timestamp <DateAndTime>- points <Array of: Point>- bytes <ByteArray>My JSON representation is like this:- id <Number>- name <String>- created-at <ISO8601 String>- points <Array of: <Map x,y>- bytes <Array of: Number>!!NeoJSONTestObject2 commentStamp: 'SvenVanCaekenberghe 3/22/2014 09:36' prior: 0!I am NeoJSONTestObject2.Instance Variables	data:		<String>	height:		<Integer>	id:			<Integer>	width:		<Integer>Used for benchmarking and other tests.!!NeoJSONTestObject3 commentStamp: 'SvenVanCaekenberghe 3/22/2014 09:40' prior: 0!I am NeoJSONTestObject3, a subclass of NeoJSONTestObject2.Instance Variables	color:			<String>	transparent :	<Boolean>I am used for inheritance testing.!!NeoJSONBenchmarkTests commentStamp: 'SvenVanCaekenberghe 6/5/2012 10:05' prior: 0!I am NeoJSONBenchmarkTests.This test is obviously dependent on hardware, but the margin is quite high.!!NeoJSONObjectTests commentStamp: 'SvenVanCaekenberghe 9/8/2014 12:39' prior: 0!I am NeoJSONObjectTests, I hold unit tests for NeoJSONObject.!!NeoJSONReaderTests commentStamp: 'SvenVanCaekenberghe 6/2/2012 14:02' prior: 0!I am NeoJSONReaderTests, a test suite for NeoJSONReader.!!NeoJSONWriteReadTests commentStamp: 'SvenVanCaekenberghe 6/4/2012 15:34' prior: 0!I am NeoJSONWriteReadTests.!!NeoJSONWriteReadPrettyPrintedTests commentStamp: 'SvenVanCaekenberghe 6/5/2012 09:50' prior: 0!I am NeoJSONWriteReadPrettyPrintedTests.!!NeoJSONWriterTests commentStamp: 'SvenVanCaekenberghe 6/2/2012 22:20' prior: 0!I am NeoJSONWriterTests, a test suite for NeoJSONWriter.!!NeoJSONBenchmark commentStamp: 'SvenVanCaekenberghe 6/5/2012 09:48' prior: 35179347!I am NeoJSONBenchmark.I hold 1000 objects of the form Dictionary('color'->'green' 'enabled'->false 'id'->1 'name'->'Name-1' 'value'->0.002 ) in an Array.I hold the JSON serialization of that as a String of the form '[{"value":0.002,"enabled":false,"name":"Name-1","color":"green","id":1}, ...| benchmark |benchmark := NeoJSONBenchmark new.[benchmark read] bench.| benchmark |benchmark := NeoJSONBenchmark new.[benchmark write] bench.| benchmark |benchmark := NeoJSONBenchmark new.[benchmark read] timeToRun.| benchmark |benchmark := NeoJSONBenchmark new.[benchmark write] timeToRun.!!NeoJSONBenchmark methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/4/2012 18:49'!initialize	super initialize.	objects := Array new: 1000.	1 to: 1000 do: [ :each |		| map |		(map := Dictionary new)			at: 'id' put: each;			at: 'name' put: 'Name-', each asString;			at: 'enabled' put: (#( true false) at: (each \\ 2) + 1);			at: 'color' put: (#( 'red' 'green' 'blue' ) at: (each \\ 3) + 1);			at: 'value' put: each + each / 1000.0.		objects at: each put: map ].	json := String streamContents: [ :stream |		(NeoJSONWriter on: stream) nextPut: objects ]		! !!NeoJSONBenchmark methodsFor: 'public' stamp: 'SvenVanCaekenberghe 6/4/2012 17:02'!read	^ (NeoJSONReader on: json readStream) next! !!NeoJSONBenchmark methodsFor: 'public' stamp: 'SvenVanCaekenberghe 6/4/2012 17:26'!write	^ String streamContents: [ :stream |		(NeoJSONWriter on: stream) nextPut: objects ]! !!NeoJSONBenchmark methodsFor: 'public' stamp: 'SvenVanCaekenberghe 6/6/2012 15:07'!writePrettyPrintedRead	| output |	output := String streamContents: [ :stream |		(NeoJSONWriter on: stream) 			prettyPrint: true;			nextPut: objects ].	^ (NeoJSONReader on: output readStream) 		next! !!NeoJSONMockStream commentStamp: '<historical>' prior: 35180007!I am NeoJSONMockStream.I wrap another stream to validate the limited API used.!!NeoJSONMockStream class methodsFor: 'instance creation' stamp: 'SvenVanCaekenberghe 6/13/2012 16:25'!on: stream	^ self new		stream: stream;		yourself! !!NeoJSONMockStream methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/13/2012 16:23'!atEnd	^ stream atEnd! !!NeoJSONMockStream methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/13/2012 16:23'!close	^ stream close! !!NeoJSONMockStream methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/13/2012 16:22'!next	^ stream next! !!NeoJSONMockStream methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/13/2012 16:23'!nextPut: character	^ stream nextPut: character! !!NeoJSONMockStream methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/13/2012 16:23'!nextPutAll: string	^ stream nextPutAll: string! !!NeoJSONMockStream methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/13/2012 16:22'!peek	^ stream peek! !!NeoJSONMockStream methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 12/3/2012 10:53'!peekFor: char	^ stream peekFor: char! !!NeoJSONMockStream methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/13/2012 16:23'!space	^ stream space! !!NeoJSONMockStream methodsFor: 'initialize-release' stamp: 'SvenVanCaekenberghe 6/13/2012 16:22'!stream: anObject	stream := anObject! !!NeoJSONTestObject1 commentStamp: '<historical>' prior: 35180147!I am NeoJSONTestObject1.I repesent a domain model object.I have the following properties:- id <Integer>- name <String>- timestamp <DateAndTime>- points <Array of: Point>- bytes <ByteArray>My JSON representation is like this:- id <Number>- name <String>- created-at <ISO8601 String>- points <Array of: <Map x,y>- bytes <Array of: Number>!!NeoJSONTestObject1 class methodsFor: 'instance creation' stamp: 'SvenVanCaekenberghe 6/9/2012 18:06'!example1	^ self new		id: 123;		name: 'Example1';		timestamp: (DateAndTime year: 2012 month: 06 day: 08 hour: 14 minute: 30 second: 15 offset: 1 hour);		points: { 1@2. 3@4 };		bytes: #[ 2 4 6 8 ];		yourself! !!NeoJSONTestObject1 class methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/12/2012 12:34'!neoJsonMapping: mapper	mapper for: self do: [ :mapping |		mapping mapInstVars: #(id name).		(mapping mapInstVar: #timestamp to: 'created-at') valueSchema: DateAndTime.		(mapping mapInstVar: #points) valueSchema: #ArrayOfPoints.		(mapping mapInstVar: #bytes) valueSchema: ByteArray ].	mapper for: DateAndTime customDo: [ :mapping |		mapping decoder: [ :string | DateAndTime fromString: string ].		mapping encoder: [ :dateAndTime | dateAndTime printString ] ].	mapper for: #ArrayOfPoints customDo: [ :mapping |		mapping listOfElementSchema: Point ].  	mapper mapAllInstVarsFor: Point.	mapper for: ByteArray customDo: [ :mapping |		mapping listOfType: ByteArray ]! !!NeoJSONTestObject1 methodsFor: 'comparing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:45'!= anObject	self == anObject		ifTrue: [ ^ true ].	self class = anObject class		ifFalse: [ ^ false ].	^ id = anObject id		and: [			name = anObject name				and: [					timestamp = anObject timestamp						and: [							points = anObject points								and: [ bytes = anObject bytes ] ] ] ]! !!NeoJSONTestObject1 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:03'!bytes	^ bytes! !!NeoJSONTestObject1 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:04'!bytes: byteArray	bytes := byteArray! !!NeoJSONTestObject1 methodsFor: 'comparing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:46'!hash	^ id hash bitXor: (name hash bitXor: (timestamp hash bitXor: (points hash bitXor: bytes hash)))! !!NeoJSONTestObject1 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:02'!id	^ id! !!NeoJSONTestObject1 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:03'!id: integer	id := integer! !!NeoJSONTestObject1 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:02'!name	^ name! !!NeoJSONTestObject1 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:03'!name: string	name := string! !!NeoJSONTestObject1 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:03'!points	^ points! !!NeoJSONTestObject1 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:04'!points: arrayOfPoints	points := arrayOfPoints ! !!NeoJSONTestObject1 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:03'!timestamp	^ timestamp! !!NeoJSONTestObject1 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:03'!timestamp: dateAndTime 	timestamp := dateAndTime ! !!NeoJSONTestObject2 commentStamp: 'SvenVanCaekenberghe 3/22/2014 09:36' prior: 35180585!I am NeoJSONTestObject2.Instance Variables	data:		<String>	height:		<Integer>	id:			<Integer>	width:		<Integer>Used for benchmarking and other tests.!!NeoJSONTestObject2 class methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:53'!benchmark10k	"self benchmark10k"		self benchmark: 10000! !!NeoJSONTestObject2 class methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:54'!benchmark10kAsDictionary	"self benchmark10kAsDictionary"		self benchmarkAsDictionary: 10000! !!NeoJSONTestObject2 class methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:54'!benchmark200k	"self benchmark200k"		self benchmark: 200000! !!NeoJSONTestObject2 class methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:52'!benchmark: count	"self benchmark: 1000"		| collection json size |	collection := Array new: count withAll: self example1.	size := 2 + (count * (NeoJSONWriter toString: self example1) size) + count - 1.	Transcript 		cr;		<< ('Serializing {1} objects took ms ' format: { count });		show: [ json := String new: size streamContents: [ :stream |								(NeoJSONWriter on: stream) nextPut: collection ] ] timeToRun.	Transcript 		cr;		<< ('Deserializing {1} objects took ms ' format: { count });		show: [ NeoJSONReader fromString: json ] timeToRun.! !!NeoJSONTestObject2 class methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:53'!benchmarkAsDictionary: count	"self benchmarkAsDictionary: 1000"		| collection json size |	collection := Array new: count withAll: self example1 asDictionary.	size := 2 + (count * (NeoJSONWriter toString: self example1 asDictionary) size) + count - 1.	Transcript 		cr;		<< ('Serializing {1} objects took ms ' format: { count });		show: [ json := String new: size streamContents: [ :stream |								(NeoJSONWriter on: stream) nextPut: collection ] ] timeToRun.	Transcript 		cr;		<< ('Deserializing {1} objects took ms ' format: { count });		show: [ NeoJSONReader fromString: json ] timeToRun.! !!NeoJSONTestObject2 class methodsFor: 'instance creation' stamp: 'SvenVanCaekenberghe 6/10/2012 20:04'!example1	^ self new		id: 13;		width: 250;		height: 110;		data: (String new: 512 withAll: $a);		yourself! !!NeoJSONTestObject2 class methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/22/2014 10:50'!neoJsonMapping: mapper	"For inheritance mapping to work, the schema/classname must be self,	but the instance variables have to be enumerated manually per class"	mapper for: self do: [ :mapping |		mapping mapInstVars: #(id width height data) ] ! !!NeoJSONTestObject2 methodsFor: 'comparing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:22'!= anObject	self == anObject		ifTrue: [ ^ true ].	self class = anObject class		ifFalse: [ ^ false ].	^ id = anObject id		and: [			height = anObject height				and: [					width = anObject width						and: [							data = anObject data ] ] ]! !!NeoJSONTestObject2 methodsFor: 'converting' stamp: 'SvenVanCaekenberghe 6/10/2012 20:47'!asDictionary	^ Dictionary new		at: #id put: id;		at: #height put: height;		at: #width put: width;		at: #data put: data;		yourself! !!NeoJSONTestObject2 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:04'!data	^ data! !!NeoJSONTestObject2 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:04'!data: anObject	data := anObject! !!NeoJSONTestObject2 methodsFor: 'comparing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:22'!hash	^ id hash bitXor: (width hash bitXor: (height hash bitXor: data hash))! !!NeoJSONTestObject2 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:04'!height	^ height! !!NeoJSONTestObject2 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:04'!height: anObject	height := anObject! !!NeoJSONTestObject2 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:04'!id	^ id! !!NeoJSONTestObject2 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:04'!id: anObject	id := anObject! !!NeoJSONTestObject2 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:04'!width	^ width! !!NeoJSONTestObject2 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:04'!width: anObject	width := anObject! !!NeoJSONTestObject3 commentStamp: 'SvenVanCaekenberghe 3/22/2014 09:40' prior: 35180826!I am NeoJSONTestObject3, a subclass of NeoJSONTestObject2.Instance Variables	color:			<String>	transparent :	<Boolean>I am used for inheritance testing.!!NeoJSONTestObject3 class methodsFor: 'instance creation' stamp: 'SvenVanCaekenberghe 3/22/2014 09:43'!example1	^ super example1		data: (String new: 8 withAll: $a);		color: 'red';		transparent: true;		yourself! !!NeoJSONTestObject3 class methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/22/2014 10:50'!neoJsonMapping: mapper	"For inheritance mapping to work, the schema/classname must be self,	but the instance variables have to be enumerated manually per class"		super neoJsonMapping: mapper.	mapper for: self do: [ :mapping |		mapping mapInstVars: #(color transparent) ]! !!NeoJSONTestObject3 methodsFor: 'comparing' stamp: 'SvenVanCaekenberghe 3/22/2014 09:45'!= anObject	^ super = anObject 		and: [ color = anObject color			and: [ transparent = anObject transparent ] ]! !!NeoJSONTestObject3 methodsFor: 'converting' stamp: 'SvenVanCaekenberghe 3/22/2014 09:46'!asDictionary	^ super asDictionary		at: #color put: color;		at: #transparent put: transparent;		yourself! !!NeoJSONTestObject3 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/22/2014 09:43'!color	^ color! !!NeoJSONTestObject3 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/22/2014 09:43'!color: anObject	color := anObject! !!NeoJSONTestObject3 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/22/2014 09:43'!transparent	^ transparent! !!NeoJSONTestObject3 methodsFor: 'accessing' stamp: 'SvenVanCaekenberghe 3/22/2014 09:43'!transparent: anObject	transparent := anObject! !!NeoJSONBenchmarkTests commentStamp: 'SvenVanCaekenberghe 6/5/2012 10:05' prior: 35181071!I am NeoJSONBenchmarkTests.This test is obviously dependent on hardware, but the margin is quite high.!!NeoJSONBenchmarkTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/10/2012 20:20'!testObject2	| json |	json := NeoJSONWriter toString: NeoJSONTestObject2 new.	self 		assert: (NeoJSONReader fromString: json as: NeoJSONTestObject2)		equals: NeoJSONTestObject2 new! !!NeoJSONBenchmarkTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 1/15/2014 19:29'!testPrettyPrinted	| benchmark |	benchmark := NeoJSONBenchmark new.	self		assert: benchmark writePrettyPrintedRead		equals: benchmark read! !!NeoJSONBenchmarkTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 1/15/2014 19:30'!testRead	| benchmark |	benchmark := NeoJSONBenchmark new.	benchmark read! !!NeoJSONBenchmarkTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 1/15/2014 19:30'!testWrite	| benchmark |	benchmark := NeoJSONBenchmark new.	benchmark write! !!NeoJSONObjectTests commentStamp: 'SvenVanCaekenberghe 9/8/2014 12:39' prior: 35181258!I am NeoJSONObjectTests, I hold unit tests for NeoJSONObject.!!NeoJSONObjectTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 9/8/2014 12:39'!testCRUD	| object |	object := NeoJSONObject new.	self assert: object isEmpty.	self assert: object foo equals: nil.	object foo: 123.	self assert: object foo equals: 123.	self assert: object printString equals: '{"foo":123}'.	object name: 'test'.	object value: Float pi.	self assert: object name equals: 'test'.	self assert: (object value closeTo: Float pi).	self assert: object keys asSet equals: #(foo name value) asSet.	object removeKey: #foo.	self assert: object foo equals: nil.	object removeAll.	self assert: object isEmpty! !!NeoJSONObjectTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 11/25/2015 09:19'!testJSON	| data  json object |	data := { #foo->1. #bar->2. #str->'Str!!'. #bool->true. #flt->1.5 } as: NeoJSONObject.	json := NeoJSONWriter toString: data .	object := NeoJSONObject fromString: json.	self assert: object class equals: NeoJSONObject.	self assert: object equals: data.	json := (NeoJSONWriter toString: object).	self assert: (NeoJSONObject fromString: json) equals: object! !!NeoJSONReaderTests commentStamp: 'SvenVanCaekenberghe 6/2/2012 14:02' prior: 35181403!I am NeoJSONReaderTests, a test suite for NeoJSONReader.!!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 12/30/2015 12:29'!testAllowNil	self 		should: [ 			(NeoJSONReader on: 'null' readStream)				mapInstVarsFor: Point;				nextAs: Point ] 		raise: NeoJSONParseError.	self		assert: ((NeoJSONReader on: 'null' readStream)						mapInstVarsFor: Point;						for: Point do: [ :mapping | mapping allowNil ];						nextAs: Point)		equals: nil.	self		assert: ((NeoJSONReader on: '[ { "x" : 1, "y" : 2 }, null, { "x" : 3, "y" : -1 } ]' readStream)						mapInstVarsFor: Point;						for: Point do: [ :mapping | mapping allowNil ];						for: #ArrayOfPoints customDo: [ :mapping | mapping listOfElementSchema: Point ];						nextAs: #ArrayOfPoints)		equals: { 1 @ 2. nil. 3 @ -1 }.! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 12:32'!testArrayOfPoints	| reader |	reader := [ :string | 		(NeoJSONReader on: string readStream) 			for: Point do: [ :mapping |				mapping mapInstVars: #(x y) ];			for: #ArrayOfPoints customDo: [ :mapping |				mapping listOfElementSchema: Point ];			nextAs: #ArrayOfPoints ].	self assert: (reader value: '[ { "x":1, "y":2 }, { "x":-1, "y":-2 } ]') equals: { 1@2. -1@ -2 }. 	self assert: (reader value: '[ ]') equals: #().	self assert: (reader value: '[ { } ]') equals: { Point new }! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 13:18'!testAssociation	| reader |	reader := [ :string | 		(NeoJSONReader on: string readStream) 			for: Association do: [ :mapping |				mapping mapAccessors: #(key value) ]; 			nextAs: Association ].	self assert: (reader value: '{"key":"foo","value":42}') equals: 'foo' -> 42. 	self assert: (reader value: '{}') equals: Association new! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/13/2012 14:44'!testBooleans	self assert: (NeoJSONReader on: 'true' readStream) next equals: true.	self assert: (NeoJSONReader on: 'false' readStream) next equals: false.	self should: [ (NeoJSONReader on: 'tru' readStream) next ] raise: NeoJSONParseError.	self should: [ (NeoJSONReader on: 'falsE' readStream) next ] raise: NeoJSONParseError.! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 12:32'!testByteArray	| reader |	reader := [ :string | 		(NeoJSONReader on: string readStream) 			for: ByteArray customDo: [ :mapping |				mapping listOfType: ByteArray ];			nextAs: ByteArray ].	self assert: (reader value: '[ 1, 2, 3 ]') equals: #[1 2 3].	self assert: (reader value: '[ ]') equals: ByteArray new! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 12:02'!testDate	| reader |	reader := [ :input | 		(NeoJSONReader on: input readStream) 			for: Date customDo: [ :mapping |				mapping decoder: [ :string | Date fromString: string ] ];			nextAs: Date ].	self assert: (reader value: ' "2012-06-08" ') equals: (Date newDay: 8 month: 6 year: 2012)! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 12:02'!testDateAndTime 	| reader |	reader := [ :input | 		(NeoJSONReader on: input readStream) 			for: DateAndTime customDo: [ :mapping |				mapping decoder: [ :string | DateAndTime fromString: string ] ];			nextAs: DateAndTime ].	self 		assert: (reader value: ' "2012-02-14T16:40:18+01:00" ') 		equals: (DateAndTime year: 2012 month: 2 day: 14 hour: 16 minute: 40 second: 18 offset: 1 hour)! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/2/2012 21:49'!testFloats	| reader |	reader := [ :string |		(NeoJSONReader on: string readStream) next ].	self assert: ((reader value: '123.0') closeTo: 123.0).	self assert: ((reader value: '-123.0') closeTo: -123.0).	self assert: ((reader value: '123.0e0') closeTo: 123.0).	self assert: ((reader value: '123e6') closeTo: 123e6).	self assert: ((reader value: '123e+6') closeTo: 123e6).	self assert: ((reader value: '123e-6') closeTo: 123e-6).	self assert: ((reader value: '123E6') closeTo: 123e6).	self assert: ((reader value: '123E+6') closeTo: 123e6).	self assert: ((reader value: '123E-6') closeTo: 123e-6).	self assert: ((reader value: '-123e6') closeTo: -123e6).	self assert: ((reader value: '-123e-6') closeTo: -123e-6).	self assert: ((reader value: '-123E6') closeTo: -123e6).	self assert: ((reader value: '-123E-6') closeTo: -123e-6).	self assert: ((reader value: '3.14159') closeTo: Float pi).	self assert: ((reader value: '0.123e6') closeTo: 0.123e6).	self assert: ((reader value: '0.123e-6') closeTo: 0.123e-6).	self assert: ((reader value: '-0.123E6') closeTo: -0.123e6).	self assert: ((reader value: '-0.123E-6') closeTo: -0.123e-6).! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 16:08'!testIntegers	| reader |	reader := [ :string |		(NeoJSONReader on: string readStream) next ].	self assert: (reader value: '123') equals: 123.	self assert: (reader value: '00123') equals: 123.	self assert: (reader value: '-123') equals: -123.	self assert: (reader value: '-0123') equals: -123.	self assert: (reader value: '0') equals: 0.	self assert: (reader value: '-0') equals: 0.	self assert: (reader value: '00') equals: 0.	self assert: (reader value: ' 123	') equals: 123.	self should: [ reader value: '+1' ] raise: NeoJSONParseError.	self should: [ reader value: ' - ' ] raise: NeoJSONParseError.! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 16:16'!testLists	| reader |	reader := [ :string |		(NeoJSONReader on: string readStream) next ].	self assert: (reader value: '[1,2,3]') equals: #(1 2 3).	self assert: (reader value: '[]') equals: #().	self assert: (reader value: ' [ 1 , 2 , 3 ] ') equals: #(1 2 3).	self assert: (reader value: ' [ ] ') equals: #().	self should: [ reader value: '[1,]' ] raise: NeoJSONParseError. 	self should: [ reader value: '[' ] raise: NeoJSONParseError.	self should: [ reader value: ']' ] raise: NeoJSONParseError.	self should: [ reader value: '[}' ] raise: NeoJSONParseError! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 16:16'!testMaps	| reader |	reader := [ :string |		(NeoJSONReader on: string readStream) next ].	self assert: (reader value: '{"x":1,"y":2}') equals: (Dictionary newFromPairs: #( 'x' 1 'y' 2)).	self assert: (reader value: '{}') equals: Dictionary new.	self assert: (reader value: ' { "x" : 1 , "y" : 2 } ' ) equals: (Dictionary newFromPairs: #( 'x' 1 'y' 2)).	self assert: (reader value: ' { } ') equals: Dictionary new.	self should: [ reader value: '{"foo":}' ] raise: NeoJSONParseError. 	self should: [ reader value: '{"foo":9,}' ] raise: NeoJSONParseError. 	self should: [ reader value: '{9:true,}' ] raise: NeoJSONParseError. 	self should: [ reader value: '{' ] raise: NeoJSONParseError.	self should: [ reader value: '}' ] raise: NeoJSONParseError.	self should: [ reader value: '{]' ] raise: NeoJSONParseError! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 3/24/2014 11:58'!testNextStringAsHex	| string |	string := (NeoJSONReader on: '"466F6F2062617221"' readStream)		for: #StringAsHex			customDo: [ :mapping | 					mapping						encoder: [ :x | x asByteArray hex asUppercase ];						decoder: [ :x | (ByteArray readHexFrom: x) asString ] ];		nextAs: #StringAsHex.	self assert: string equals: 'Foo bar!!'! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/13/2012 14:29'!testNull	self assert: (NeoJSONReader on: 'null' readStream) next equals: nil.	self assert: (NeoJSONReader on: '	null ' readStream) next equals: nil.	self should: [ (NeoJSONReader on: '	nil ' readStream) next ] raise: NeoJSONParseError.! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/13/2012 10:18'!testOrderedCollection	| json list |	json := '[ 1, 2, 3 ]'.	list := (NeoJSONReader on: json readStream) 		listClass: OrderedCollection;		next.	self 		assert: list 		equals: (OrderedCollection with: 1 with: 2 with: 3).	self 		assert: list class 		equals: OrderedCollection! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 12:33'!testOrderedCollectionOfPoints	| reader |	reader := [ :string | 		(NeoJSONReader on: string readStream) 			for: Point do: [ :mapping |				mapping mapInstVars: #(x y) ];			for: #OrderedCollectionOfPoints customDo: [ :mapping |				mapping listOfType: OrderedCollection andElementSchema: Point ];			nextAs: #OrderedCollectionOfPoints ].	self assert: (reader value: '[ { "x":1, "y":2 }, { "x":-1, "y":-2 } ]') equals: { 1@2. -1@ -2 } asOrderedCollection. 	self assert: (reader value: '[ ]') equals: OrderedCollection new.	self assert: (reader value: '[ { } ]') equals: (OrderedCollection with: Point new)! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 16:01'!testParseErrors	self should: [ NeoJSONReader fromString: 'zero' ] raise: NeoJSONParseError.	self should: [ NeoJSONReader fromString: '#' ] raise: NeoJSONParseError.	self should: [ NeoJSONReader fromString: '@' ] raise: NeoJSONParseError.! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 15:58'!testPoint	| reader |	reader := [ :string | 		(NeoJSONReader on: string readStream) nextAs: Point ].	self should: [ reader value: '{"x":1,"y":2}' ] raise: NeoJSONMappingNotFound! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/8/2012 14:04'!testPoint1	| reader |	reader := [ :string | 		(NeoJSONReader on: string readStream) 			for: Point do: [ :mapping |				mapping mapProperty: 'x' getter: [ :point | point x ] setter: [ :point :value | point setX: value setY: point y ].				mapping mapProperty: 'y' getter: [ :point | point y ] setter: [ :point :value | point setX: point x setY: value ]. ];			nextAs: Point ].	self assert: (reader value: '{"x":1,"y":2}') equals: 1@2. 	self assert: (reader value: '{}') equals: Point new! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/7/2012 15:23'!testPoint2	| reader |	reader := [ :string | 		(NeoJSONReader on: string readStream) 			mapAllInstVarsFor: Point;			nextAs: Point ].	self assert: (reader value: '{"x":1,"y":2}') equals: 1@2. 	self assert: (reader value: '{}') equals: Point new! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/8/2012 14:04'!testPoint3	| reader |	reader := [ :string | 		(NeoJSONReader on: string readStream) 			for: Point do: [ :mapping |				mapping mapInstVars: #(x y) ];			nextAs: Point ].	self assert: (reader value: '{"x":1,"y":2}') equals: 1@2. 	self assert: (reader value: '{}') equals: Point new! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 3/24/2014 10:43'!testPointUsingAsString	| point |	point := (NeoJSONReader on: '{"x":"1","y":"2"}' readStream)		for: Point			do: [ :mapping | 					(mapping 						mapProperty: #x 						getter: [ :object | object x ] 						setter: [ :object :value | object setX: value setY: object y ])						valueSchema: #AsString.					(mapping						mapProperty: #y						getter: [ :object | object y ]						setter: [ :object :value | object setX: object x setY: value ]) 						valueSchema: #AsString ];		for: #AsString			customDo: [ :mapping | 					mapping						encoder: [ :x | x asString ];						decoder: [ :x | x asNumber ] ];		nextAs: Point.	self assert: point equals: 1 @ 2! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/13/2012 10:00'!testPropertyNamesAsSymbols	| json map |	json := '{ "x" : true, "y" : false, "key-1" : 1 }'.	map := (NeoJSONReader on: json readStream) 		propertyNamesAsSymbols: true; 		next.	self 		assert: map 		equals: (Dictionary new at: #x put: true; at: #y put: false; at: #'key-1' put: 1; yourself).	self assert: (map keys allSatisfy: [ :each | each isSymbol ])! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 7/4/2013 18:38'!testSmallDictionary	| json map smallDictionaryClass |	json := '{ "x" : true, "y" : false, "key-1" : 1 }'.	smallDictionaryClass := Smalltalk at: #SmallDictionary ifAbsent: [ Dictionary ].	map := (NeoJSONReader on: json readStream) 		mapClass: smallDictionaryClass;		next.	self 		assert: map 		equals: (smallDictionaryClass new at: #x put: true; at: #y put: false; at: #'key-1' put: 1; yourself).	self 		assert: map class 		equals: smallDictionaryClass! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 16:04'!testStrings	| reader |	reader := [ :string |		(NeoJSONReader on: string readStream) next ].	self assert: (reader value: '"foo"') equals: 'foo'.	self assert: (reader value: '""') equals: ''.	self assert: (reader value: '"Foo BAR"') equals: 'Foo BAR'.	self assert: (reader value: '"\u00E9l\u00E8ve en Fran\u00E7ais"') equals: 'élève en Français'.	self 		assert: (reader value: '"\"\\\/\t\r\n\f\b"') 		equals: (String withAll: { 					$". $\. $/. Character tab. Character cr. Character lf.  Character newPage. Character backspace }).	self should: [ reader value: '"open' ] raise: NeoJSONParseError.	self should: [ reader value: '"\uAA"' ] raise: NeoJSONParseError.	self should: [ reader value: '"\uZZ"' ] raise: NeoJSONParseError.	self should: [ reader value: '"\x"' ] raise: NeoJSONParseError.	self should: [ reader value: ' " ' ] raise: NeoJSONParseError.! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 12:02'!testSymbol	| reader |	reader := [ :input | 		(NeoJSONReader on: input readStream) 			for: Symbol customDo: [ :mapping |				mapping decoder: [ :string | string asSymbol ] ];			nextAs: Symbol ].	self assert: (reader value: ' "foo" ') equals: #foo.	self assert: (reader value: ' "FOO-1" ') equals: #'FOO-1'! !!NeoJSONReaderTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 12:02'!testTime	| reader |	reader := [ :input | 		(NeoJSONReader on: input readStream) 			for: Time customDo: [ :mapping |				mapping decoder: [ :string | Time fromString: string ] ];			nextAs: Time ].	self assert: (reader value: ' "14:30:08" ') equals: (Time hour: 14 minute: 30 second: 8)! !!NeoJSONWriteReadTests commentStamp: 'SvenVanCaekenberghe 6/4/2012 15:34' prior: 35181545!I am NeoJSONWriteReadTests.!!NeoJSONWriteReadMockStreamTests methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/13/2012 16:28'!writeRead: object	| json |	json := String streamContents: [ :stream |		(NeoJSONWriter on: (NeoJSONMockStream on: stream))			prettyPrint: true;			nextPut: object ].	^ (NeoJSONReader on: (NeoJSONMockStream on: json readStream)) next ! !!NeoJSONWriteReadPrettyPrintedTests commentStamp: 'SvenVanCaekenberghe 6/5/2012 09:50' prior: 35181671!I am NeoJSONWriteReadPrettyPrintedTests.!!NeoJSONWriteReadPrettyPrintedTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 8/30/2013 11:05'!testDictionaryOfObject2	| data json reader |	data := Dictionary new.	data 		at: #one put: NeoJSONTestObject2 example1;		at: #two put: NeoJSONTestObject2 example1.	json := NeoJSONWriter toStringPretty: data.	reader := NeoJSONReader on: json readStream.	reader for: #DictionaryOfObject2 customDo: [ :mapping |		mapping mapWithValueSchema: NeoJSONTestObject2 ].  	self 		assert: (reader nextAs: #DictionaryOfObject2)		equals: data! !!NeoJSONWriteReadPrettyPrintedTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:49'!testObject1	| json |	json := NeoJSONWriter toStringPretty: NeoJSONTestObject1 example1.	self 		assert: (NeoJSONReader fromString: json as: NeoJSONTestObject1)		equals: NeoJSONTestObject1 example1! !!NeoJSONWriteReadPrettyPrintedTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 8/30/2013 11:05'!testObject2	| json |	json := NeoJSONWriter toStringPretty: NeoJSONTestObject2 example1.	self 		assert: (NeoJSONReader fromString: json as: NeoJSONTestObject2)		equals: NeoJSONTestObject2 example1! !!NeoJSONWriteReadPrettyPrintedTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 3/22/2014 10:59'!testObject3	| json |	json := NeoJSONWriter toStringPretty: NeoJSONTestObject3 example1.	self 		assert: (NeoJSONReader fromString: json as: NeoJSONTestObject3)		equals: NeoJSONTestObject3 example1! !!NeoJSONWriteReadPrettyPrintedTests methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/4/2012 15:45'!writeRead: object	| json |	json := String streamContents: [ :stream |		(NeoJSONWriter on: stream) 			prettyPrint: true;			nextPut: object ].	^ (NeoJSONReader on: json readStream) next ! !!NeoJSONWriteReadTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 8/30/2013 11:03'!testDictionaryOfObject2	| data json reader |	data := Dictionary new.	data 		at: #one put: NeoJSONTestObject2 example1;		at: #two put: NeoJSONTestObject2 example1.	json := NeoJSONWriter toString: data.	reader := NeoJSONReader on: json readStream.	reader for: #DictionaryOfObject2 customDo: [ :mapping |		mapping mapWithValueSchema: NeoJSONTestObject2 ].  	self 		assert: (reader nextAs: #DictionaryOfObject2)		equals: data! !!NeoJSONWriteReadTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/4/2012 15:51'!testFloats	| objects |	objects := { Float pi . 1.0 . -1.0 . 0.0 . 1.5e6 . -1.5e6 . 1.5e-6 . -1.5e-6 }.	(self writeRead: objects) 		with: objects 		do: [ :first :second | self assert: (first closeTo: second) ]! !!NeoJSONWriteReadTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/4/2012 15:46'!testIntegers	| objects |	objects := { 1. -1. 0. 123467890. -1234567890 }.	self 		assert: (self writeRead: objects)		equals: objects! !!NeoJSONWriteReadTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/4/2012 15:51'!testLists	| objects |	objects := { #(1 2 3). #(). #( 'foo' 'bar') }.	self 		assert: (self writeRead: objects)		equals: objects! !!NeoJSONWriteReadTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/4/2012 15:53'!testMaps	| objects |	objects := { 		Dictionary new.		Dictionary with: 'x' -> 1.		Dictionary newFromPairs: #( 'foo' true 'bar' false 'zero' 0 'null' nil 'string' 'Hello World!!' ) }.	self 		assert: (self writeRead: objects)		equals: objects! !!NeoJSONWriteReadTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/9/2012 18:48'!testObject1	| json |	json := NeoJSONWriter toString: NeoJSONTestObject1 example1.	self 		assert: (NeoJSONReader fromString: json as: NeoJSONTestObject1)		equals: NeoJSONTestObject1 example1! !!NeoJSONWriteReadTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 8/30/2013 10:12'!testObject2	| json |	json := NeoJSONWriter toString: NeoJSONTestObject2 example1.	self 		assert: (NeoJSONReader fromString: json as: NeoJSONTestObject2)		equals: NeoJSONTestObject2 example1! !!NeoJSONWriteReadTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 3/22/2014 10:14'!testObject3	| json |	json := NeoJSONWriter toString: NeoJSONTestObject3 example1.	self 		assert: (NeoJSONReader fromString: json as: NeoJSONTestObject3)		equals: NeoJSONTestObject3 example1! !!NeoJSONWriteReadTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/4/2012 15:46'!testSpecials	| objects |	objects := { true. false. nil }.	self 		assert: (self writeRead: objects)		equals: objects! !!NeoJSONWriteReadTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/10/2012 21:15'!testStrings	| objects |	objects := { 'foo'. 'Foo BAR'. ''. '	\\'''. 'élève en Français' }.	self 		assert: (self writeRead: objects)		equals: objects! !!NeoJSONWriteReadTests methodsFor: 'private' stamp: 'SvenVanCaekenberghe 6/4/2012 15:36'!writeRead: object	| json |	json := String streamContents: [ :stream |		(NeoJSONWriter on: stream) nextPut: object ].	^ (NeoJSONReader on: json readStream) next ! !!NeoJSONWriterTests commentStamp: 'SvenVanCaekenberghe 6/2/2012 22:20' prior: 35181794!I am NeoJSONWriterTests, a test suite for NeoJSONWriter.!!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 9/3/2013 12:06'!testAsciiOnlyStrings	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) 				asciiOnly: true;				nextPut: object ] ].	self assert: (writer value: 'élève français') equals: '"\u00E9l\u00E8ve fran\u00E7ais"'.	self assert: (writer value: 'foo') equals: '"foo"'.	self assert: (writer value: 'Foo BAR') equals: '"Foo BAR"'.	self assert: (writer value: '') equals: '""'.	self		assert: (writer value: (String withAll: { 					$". $\. $/. Character tab. Character cr. Character lf.  Character newPage. Character backspace }))		equals: '"\"\\/\t\r\n\f\b"'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 13:19'!testAssociation	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) 				for: Association do: [ :mapping |					mapping mapAccessors: #(key value) ]; 				nextPut: object ] ].	self assert: (writer value: 'foo' -> 42) equals: '{"key":"foo","value":42}'.	self assert: (writer value: Association new) equals: '{}'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/3/2012 19:56'!testBooleans	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) nextPut: object ] ].	self assert: (writer value: true) equals: 'true'.	self assert: (writer value: false) equals: 'false'.! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/8/2012 21:54'!testByteArray	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) nextPut: object ] ].	self assert: (writer value: #[1 2 3]) equals: '[1,2,3]'.	self assert: (writer value: #[]) equals: '[]'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 12:02'!testDate	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) 				for: Date customDo: [ :mapping |					mapping encoder: [ :date | date yyyymmdd ] ];				nextPut: object ] ].	self assert: (writer value: (Date newDay: 8 month: 6 year: 2012)) equals: '"2012-06-08"'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 12:02'!testDateAndTime 	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) 				for: DateAndTime customDo: [ :mapping |					mapping encoder: [ :dateAndTime | dateAndTime printString ] ];				nextPut: object ] ].	self 		assert: (writer value: (DateAndTime year: 2012 month: 2 day: 14 hour: 16 minute: 40 second: 18 offset: 1 hour)) 		equals: '"2012-02-14T16:40:18+01:00"'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/2/2012 22:24'!testFloats	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) nextPut: object ] ].	self assert: (writer value: 123.0) equals: '123.0'.	self assert: (writer value: -123.0) equals: '-123.0'.	self assert: (writer value: 0.0) equals: '0.0'.! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/2/2012 22:24'!testIntegers	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) nextPut: object ] ].	self assert: (writer value: 123) equals: '123'.	self assert: (writer value: -123) equals: '-123'.	self assert: (writer value: 0) equals: '0'.! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/3/2012 19:39'!testLists	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) nextPut: object ] ].	self assert: (writer value: #(1 2 3)) equals: '[1,2,3]'.	self assert: (writer value: #()) equals: '[]'.! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/3/2012 19:40'!testMaps	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) nextPut: object ] ].	self assert: (writer value: (Dictionary newFromPairs: #( 'x' 1 'y' 2))) equals: '{"x":1,"y":2}'.	self assert: (writer value: Dictionary new) equals: '{}'.! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 3/24/2014 11:57'!testNextPutStringAsHex	| output |	output := String		streamContents: [ :out | 			(NeoJSONWriter on: out)				for: #StringAsHex					customDo: [ :mapping | 							mapping								encoder: [ :x | x asByteArray hex asUppercase ];								decoder: [ :x | (ByteArray readHexFrom: x) asString ] ];				nextPut: 'Foo bar!!' as: #StringAsHex ].	self assert: output equals: '"466F6F2062617221"'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/2/2012 22:23'!testNull	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) nextPut: object ] ].	self assert: (writer value: nil) equals: 'null'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 15:58'!testPoint	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) nextPut: object ] ].	self should: [ writer value: 1@2 ] raise: NeoJSONMappingNotFound! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/8/2012 14:04'!testPoint1	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) 				for: Point do: [ :mapping |					mapping mapProperty: 'x' getter: [ :point | point x ] setter: [ :point :value | point x: value ].					mapping mapProperty: 'y' getter: [ :point | point y ] setter: [ :point :value | point y: value ]. ];				nextPut: object ] ].	self assert: (writer value: 1@2) equals: '{"x":1,"y":2}'.	self assert: (writer value: Point new) equals: '{}'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/6/2012 17:29'!testPoint2	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) 				mapAllInstVarsFor: Point;				nextPut: object ] ].	self assert: (writer value: 1@2) equals: '{"x":1,"y":2}'.	self assert: (writer value: Point new) equals: '{}'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/8/2012 14:04'!testPoint3	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) 				for: Point do: [ :mapping |					mapping mapInstVars: #(x y) ];				nextPut: object ] ].	self assert: (writer value: 1@2) equals: '{"x":1,"y":2}'.	self assert: (writer value: Point new) equals: '{}'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 3/24/2014 10:41'!testPointUsingAsString	| output |	output := String		streamContents: [ :out | 			(NeoJSONWriter on: out)				for: Point					do: [ :mapping | 							(mapping 								mapProperty: #x 								getter: [ :object | object x ] 								setter: [ :object :value | object setX: value setY: object y ])								valueSchema: #AsString.							(mapping								mapProperty: #y								getter: [ :object | object y ]								setter: [ :object :value | object setX: object x setY: value ]) 								valueSchema: #AsString ];				for: #AsString					customDo: [ :mapping | 							mapping								encoder: [ :x | x asString ];								decoder: [ :x | x asNumber ] ];				nextPut: 1 @ 2 ].	self assert: output equals: '{"x":"1","y":"2"}'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 5/28/2014 20:49'!testPointWriteNil	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) 				writeNil: true;				mapAllInstVarsFor: Point;				nextPut: object ] ].	self assert: (writer value: 1@2) equals: '{"x":1,"y":2}'.	self assert: (writer value: Point new) equals: '{"x":null,"y":null}'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/10/2012 21:15'!testStrings	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) nextPut: object ] ].	self assert: (writer value: 'foo') equals: '"foo"'.	self assert: (writer value: 'Foo BAR') equals: '"Foo BAR"'.	self assert: (writer value: '') equals: '""'.	self		assert: (writer value: (String withAll: { 					$". $\. $/. Character tab. Character cr. Character lf.  Character newPage. Character backspace }))		equals: '"\"\\/\t\r\n\f\b"'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/8/2012 21:56'!testSymbol	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) nextPut: object ] ].	self assert: (writer value: #foo) equals: '"foo"'.	self assert: (writer value: #'FOO-1') equals: '"FOO-1"'! !!NeoJSONWriterTests methodsFor: 'testing' stamp: 'SvenVanCaekenberghe 6/12/2012 12:02'!testTime	| writer |	writer := [ :object | 		String streamContents: [ :stream |			(NeoJSONWriter on: stream) 				for: Time customDo: [ :mapping |					mapping encoder: [ :time | time print24 ] ];				nextPut: object ] ].	self assert: (writer value: (Time hour: 14 minute: 30 second: 8)) equals: '"14:30:08"'! !"Neo-JSON-Tests"!----SNAPSHOT----2016-04-19T14:47:18.985797-03:00 OO II 2016 - Practica 3 - Ejercicio 2.image priorSource: 1566043!----SNAPSHOT----2016-04-19T14:48:36.266797-03:00 OO II 2016 - Practica 3 - Ejercicio 2.image priorSource: 1671715!----SNAPSHOT----2016-04-19T14:49:32.371797-03:00 OO II 2016 - Practica 3 - Ejercicio 2.image priorSource: 1671831!----SNAPSHOT----2016-04-19T14:49:50.354797-03:00 OO II 2016 - Practica 3 - Ejercicio 2.image priorSource: 1671947!----SNAPSHOT----2016-04-19T14:50:04.025797-03:00 OO II 2016 - Practica 3 - Ejercicio 2.image priorSource: 1672063!!VoorheesExporter methodsFor: 'exporting' stamp: 'bys 4/19/2016 16:18' prior: 35115642!export: socios 		self subclassResponsibility ! !VoorheesExporter subclass: #VoorheesExporterAdapter	instanceVariableNames: 'jSONadaptado'	classVariableNames: ''	category: 'BibliotecaTP3'!!VoorheesExporterAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 18:26'!jSONadaptado	^ jSONadaptado! !!VoorheesExporterAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 18:26'!jSONadaptado: anObject	jSONadaptado := anObject! !!VoorheesExporterAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 18:33'!export: socios! !!VoorheesExporterAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 18:33' prior: 35227332!export: socios	^'algo' ! !(Smalltalk globals at: #VoorheesExporterAdapter) rename: #JSONAdapter!!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:01'!exportSocio: unSocio	 ! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:02' prior: 35227612!exportSocio: unSocio	 ^Dictionary new with! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:04' prior: 35227722!exportSocio: unSocio	 ^(Dictionary new 	at: 'Nombre' put: unSocio nombre;	at: 'Email' put: unSocio email;	at: 'Legajo' put: unSocio legajo; yourself)! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:08' prior: 35227445!export: socios	|col|	col:= OrderedCollection new.	socios do: [ :s1 |		col add: (self exportSocio: s1)		 ].	^ (self jSONadaptado toStringPretty: col)! !!BibliotecaTestCase methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 20:09' prior: 35116528!setUpmiBiblioteca:= Biblioteca new: JSONAdapter new.arya:= Socio nombre:'Arya Stark' email:'needle@stark.com' legajo: '5234/5'.tyron:= Socio nombre:'Tyron Lannister' email:'tyron@thelannisters.com' legajo:'2345/2'.miBiblioteca agregarSocio: arya.miBiblioteca agregarSocio: tyron.! !!BibliotecaTestCase methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 20:10' prior: 35228350!setUpmiBiblioteca:= Biblioteca new: (JSONAdapter new).arya:= Socio nombre:'Arya Stark' email:'needle@stark.com' legajo: '5234/5'.tyron:= Socio nombre:'Tyron Lannister' email:'tyron@thelannisters.com' legajo:'2345/2'.miBiblioteca agregarSocio: arya.miBiblioteca agregarSocio: tyron.! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:11'!initialize	jSONadaptado:= NeoJSONWriter new.! !!VoorheesExporter methodsFor: 'exporting' stamp: 'bys 4/19/2016 20:12' prior: 35116028!exportSocio: aSocio	^self subclassResponsibility ! !!VoorheesExporter methodsFor: 'exporting' stamp: 'bys 4/19/2016 20:12' prior: 35226816!export: socios 		^self subclassResponsibility ! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:14' prior: 35228092!export: socios	|col|	col:= OrderedCollection new.	socios do: [ :s1 |		col add: (self exportSocio: s1)		 ].	^ (self jSONadaptado new toStringPretty: col)! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:16' prior: 35229511!export: socios	|col|	col:= OrderedCollection new.	socios do: [ :s1 |		col add: (self exportSocio: s1)		 ].	^(self jSONadaptado new toStringPretty: col)! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:16' prior: 35229756!export: socios	|col|	col:= OrderedCollection new.	socios do: [ :s1 |		col add: (self exportSocio: s1)		 ].	^(NeoJSONWriter new toStringPretty: col)! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:16' prior: 35230000!export: socios	|col|	col:= OrderedCollection new.	socios do: [ :s1 |		col add: (self exportSocio: s1)		 ].	^(self jSONadaptado new toStringPretty: col)! !JSONAdapter removeSelector: #initialize!!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:17' prior: 35230240!export: socios	|col|	col:= OrderedCollection new.	socios do: [ :s1 |		col add: (self exportSocio: s1)		 ].	^(self jSONadaptado toStringPretty: col)! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:18' prior: 35230526!export: socios	|col|	col:= OrderedCollection new.	socios do: [ :s1 |		col add: (self exportSocio: s1)		 ].	^(NeoJSONWriter toStringPretty: col)! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:21' prior: 35227852!exportSocio: unSocio	 ^(Dictionary new at: 'Nombre' put: unSocio nombre;	at: 'Email' put: unSocio email;	at: 'Legajo' put: unSocio legajo; yourself)! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:21' prior: 35231002!exportSocio: unSocio	 ^(Dictionary new at: 'nombre' put: unSocio nombre;	at: 'email' put: unSocio email;	at: 'legajo' put: unSocio legajo; yourself)! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:22' prior: 35230766!export: socios	|col|	col:= OrderedCollection new.	socios do: [ :s1 |		col add: (self exportSocio: s1)		 ].	^(self jSONadaptado toStringPretty: col)! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:24'!initialize	jSONadaptado:= NeoJSONWriter new.! !JSONAdapter removeSelector: #initialize!!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:26' prior: 35231478!export: socios	|col|	col:= OrderedCollection new.	socios do: [ :s1 |		col add: (self exportSocio: s1)		 ].	^(self jSONadaptado: (NeoJSONWriter toStringPretty: col))! !!JSONAdapter methodsFor: 'accessing' stamp: 'bys 4/19/2016 20:31' prior: 35231876!export: socios	|col|	col:= OrderedCollection new.	socios do: [ :s1 |		col add: (self exportSocio: s1)		 ].	^(NeoJSONWriter toStringPretty: col)! !----SNAPSHOT----2016-04-19T20:38:05.284797-03:00 OO II 2016 - Practica 3 - Ejercicio 2.image priorSource: 1672179!----SNAPSHOT----2016-04-19T20:38:25.962797-03:00 default.image priorSource: 1677853!----SNAPSHOT----2016-04-19T20:55:55.025797-03:00 default.image priorSource: 1677969!----SNAPSHOT----2016-04-19T21:53:58.149797-03:00 OO II 2016 - Practica 3 - Ejercicio 3.image priorSource: 1678055!----SNAPSHOT----2016-04-19T21:56:13.813797-03:00 OO II 2016 - Practica 3 - Ejercicio 3.image priorSource: 1678141!----SNAPSHOT----2016-04-19T21:56:28.687797-03:00 default.image priorSource: 1678257!----SNAPSHOT----2016-04-19T21:56:35.878797-03:00 OO II 2016 - Practica 3 - Ejercicio 3.image priorSource: 1678373!----SNAPSHOT----2016-04-19T21:56:57.212797-03:00 OO II 2016 - Practica 3 - Ejercicio 3.image priorSource: 1678459!Object subclass: #Topografia	instanceVariableNames: ''	classVariableNames: ''	category: 'OO II 2016 - Practica 3-Ejercicio 3'!!Topografia methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 22:59'!igualDeAgua: otraTopografia	^self proporcionAgua = otraTopografia proporcionAgua! !!Topografia methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 23:00'!igualDeTierra: otraTopografia	^self proporcionTierra = otraTopografia proporcionTierra! !!Topografia methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 23:01'!proporcionTierra	^1 - self proporcionAgua! !!Topografia methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 23:01'!proporcionAgua	^self subclassResponsibility ! !!Topografia methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 23:02'!= otraTopografia	^self subclassResponsibility ! !!Topografia methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 23:02'!igualMixta: otraTopografia	^false! !!TopografiaDeTierra methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 23:05'!= otraTopografia	^otraTopografia igualDeTierra: self! !!TopografiaDeTierra methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 23:05'!proporcionAgua	^0! !!TopografiaDeAgua methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 23:06'!= otraTopografia	^otraTopografia igualDeAgua: self! !!TopografiaDeAgua methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 23:07'!proporcionAgua	^1! !!TopografiaMixta methodsFor: 'accessing' stamp: 'bys 4/19/2016 23:07'!porciones	^ porciones! !!TopografiaMixta methodsFor: 'accessing' stamp: 'bys 4/19/2016 23:07'!porciones: anObject	porciones := anObject! !!TopografiaMixta methodsFor: 'accessing' stamp: 'bys 4/19/2016 23:08'!igualDeAgua: otraTopografia	^false! !!TopografiaMixta methodsFor: 'accessing' stamp: 'bys 4/19/2016 23:08'!igualDeTierra: otraTopografia	^false! !!TopografiaMixta methodsFor: 'accessing' stamp: 'bys 4/19/2016 23:09'!= otraTopografia	^otraTopografia igualMixta: self! !!TopografiaMixta methodsFor: 'accessing' stamp: 'bys 4/19/2016 23:13'!igualMixta: otraTopografia	^porciones allSatisfy: [ :porcion | 		porcion = (otraTopografia porciones at: (porciones indexOf: porcion))				]! !!TopografiaMixta methodsFor: 'accessing' stamp: 'bys 4/19/2016 23:15'!proporcionAgua	^(porciones inject: 0 into: [:total :porcion | 		total + porcion proporcionAgua]) / 4! !!TopografiaMixta methodsFor: 'accessing' stamp: 'bys 4/19/2016 23:17'!validarProporciones	^ (self proporcionAgua < 1) & (self proporcionTierra < 1)! !!TopografiaMixta class methodsFor: 'as yet unclassified' stamp: 'bys 4/19/2016 23:21'!p1: porcion1 p2: porcion2 p3: porcion3 p4: porcion4	|aux|. aux:= self new porciones: (Array with: porcion1														with: porcion2														with: porcion3														with: porcion4).	^ aux validarProporciones 		ifTrue: [ ^aux yourself ]		ifFalse: [ Transcript show: 'No se pudo construir correctamente porque fallo una de las porciones' ]	! !----SNAPSHOT----2016-04-20T01:16:15.616797-03:00 OO II 2016 - Practica 3 - Ejercicio 3.image priorSource: 1678575!----STARTUP----2016-04-23T11:01:20.807054-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Practica 3\Ejercicio 3\OO II 2016 - Practica 3 - Ejercicio 3.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----SNAPSHOT----2016-04-23T11:01:35.221054-03:00 default.image priorSource: 1681682!----SNAPSHOT----2016-04-23T11:01:40.689054-03:00 default.image priorSource: 1721136!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 11:03'!mejoresPeliculas! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 11:04'!usuariosMasActivos! !Object subclass: #User	instanceVariableNames: 'nombre apellido fechaNac ocupacion cPostal amigos peliculas ratings'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!Object subclass: #Pelicula	instanceVariableNames: 'idmovie nombre estreno generos ratings'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!Object subclass: #User	instanceVariableNames: 'userid nombre apellido fechaNac ocupacion cPostal amigos peliculas ratings'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!Object subclass: #User	instanceVariableNames: 'userid nombre apellido fechaNac ocupacion cPostal amigos peliculas'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!User methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 12:29'!calificarPelicula! !----SNAPSHOT----2016-04-23T12:32:34.056054-03:00 hito 1.image priorSource: 1721222!----SNAPSHOT----2016-04-23T12:33:05.238054-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 1722320!----SNAPSHOT----2016-04-23T12:33:20.039054-03:00 hito 1.image priorSource: 1722405!!User methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 12:33'!peliMejorCalificada! !!Pelicula methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 12:35'!rating! !!Pelicula methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 12:36' prior: 35277200!rating	^self ratings inject:0 into: [ :suma :r1 |  suma + r1  ]! !!Pelicula methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 12:37' prior: 35277300!rating	^self ratings inject:0 into: [ :suma :r1 |  suma + r1 rating ]! !!Pelicula methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 12:37' prior: 35277458!rating	^(self ratings inject:0 into: [ :suma :r1 |  suma + r1 rating ]) / self ratings size! !Object subclass: #Rating	instanceVariableNames: 'iduser rating'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 12:40'!iduser	^ iduser! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 12:40'!iduser: anObject	iduser := anObject! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 12:40'!rating	^ rating! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 12:40'!rating: anObject	rating := anObject! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 12:50' prior: 35278182!rating: unPuntaje	(unPuntaje >= 1) & (unPuntaje <= 5)	ifTrue: [rating := unPuntaje]	! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 13:24' prior: 35278300!rating: unPuntaje	(unPuntaje >= 1) & (unPuntaje <= 5)	ifTrue: [rating := unPuntaje]	ifFalse: [  ]	! !Object subclass: #Moovies	instanceVariableNames: 'users peliculas'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 16:09'!initialize	users:= OrderedCollection new.	movies:= OrderedCollection new.! !Object subclass: #Moovies	instanceVariableNames: 'users movies'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!Moovies methodsFor: 'accessing' stamp: 'bys 4/23/2016 16:09'!users	^ users! !!Moovies methodsFor: 'accessing' stamp: 'bys 4/23/2016 16:09'!users: anObject	users := anObject! !!Moovies methodsFor: 'accessing' stamp: 'bys 4/23/2016 16:09'!movies	^ movies! !!Moovies methodsFor: 'accessing' stamp: 'bys 4/23/2016 16:09'!movies: anObject	movies := anObject! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 16:32' prior: 35275814!mejoresPeliculas	^self movies asSortedCollection: [  ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 16:34' prior: 35279459!mejoresPeliculas	^self movies asSortedCollection: [ :m1 :m2 | m1 rating > m2 rating ]! !----SNAPSHOT----2016-04-23T18:08:13.254054-03:00 hito 1.image priorSource: 1722515!!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:15'!darPuntaje: unPuntaje	(unPuntaje >= 1) & (unPuntaje <= 5)	ifTrue: [rating := unPuntaje]	ifFalse: [  ]	! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:15' prior: 35278469!rating: unPuntaje	rating:= unPuntaje! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:17' prior: 35279844!darPuntaje: unPuntaje	(unPuntaje >= 1) & (unPuntaje <= 5)	ifTrue: [self rating: unPuntaje]	ifFalse: [  ]	! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:21' prior: 35280151!darPuntaje: unPuntaje	(unPuntaje >= 1) & (unPuntaje <= 5)	ifTrue: [self rating: unPuntaje]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]	! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:24'!puntaje: unPuntaje	(unPuntaje >= 1) & (unPuntaje <= 5)	ifTrue: [self rating: unPuntaje]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]	! !Rating removeSelector: #darPuntaje:!!Pelicula methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 18:25'!darPuntaje: unValor! !!Pelicula methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 18:26'!darPuntaje: unValor id: unID	(unValor >= 1) & (unValor <= 5)	ifTrue: [self rating: unValor]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]! !!Pelicula methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 18:28'!nuevoRating: unValor id: unID	^Rating new: unValor id:unID! !!Pelicula methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 18:28' prior: 35281292!nuevoRating: unValor id: unID	^(Rating new: unValor id:unID)! !!Rating class methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 18:30'!new: unValor id: unID	^self new	rating: unValor;	id: unID.! !!Rating class methodsFor: 'constructor' stamp: 'bys 4/23/2016 18:32' prior: 35281588!new: unValor id: unID	^self new	puntaje: unValor;	id: unID.! !----SNAPSHOT----2016-04-23T18:32:15.589054-03:00 hito 1.image priorSource: 1725264!----SNAPSHOT----2016-04-23T18:33:28.140054-03:00 hito 1.image priorSource: 1727372!!Rating class methodsFor: 'constructor' stamp: 'bys 4/23/2016 18:33' prior: 35281739!new: unValor id: unID	^self new	puntaje: unValor;	iduser: unID.! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:35'!checkPuntaje: unPuntaje	^(unPuntaje >= 1) & (unPuntaje <= 5)	! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:36' prior: 35280607!puntaje: unPuntaje	(self checkPuntaje: unPuntaje)	ifTrue: [self rating: unPuntaje]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]	! !!Pelicula methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 18:41' prior: 35281016!darPuntaje: unValor id: unID	(unValor >= 1) & (unValor <= 5)	ifTrue: [(self nuevoRating: unValor id: unID)]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:41'!idmovie	^ idmovie! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:41'!idmovie: anObject	idmovie := anObject! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:41'!nombre	^ nombre! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:41'!nombre: anObject	nombre := anObject! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:41'!estreno	^ estreno! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:41'!estreno: anObject	estreno := anObject! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:41'!generos	^ generos! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:41'!generos: anObject	generos := anObject! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:41'!ratings	^ ratings! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:41'!ratings: anObject	ratings := anObject! !!Pelicula methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 18:42' prior: 35282623!darPuntaje: unValor id: unID	(unValor >= 1) & (unValor <= 5)	ifTrue: [self ratings add: (self nuevoRating: unValor id: unID)]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]! !!Pelicula methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 18:42' prior: 35283887!darPuntaje: unValor id: unID	(unValor >= 1) & (unValor <= 5)	ifTrue: [self ratings add: (Rating new: unValor id: unID)]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]! !Pelicula removeSelector: #nuevoRating:id:!Pelicula removeSelector: #darPuntaje:!Rating removeSelector: #checkPuntaje:!Rating removeSelector: #puntaje:!!Rating class methodsFor: 'constructor' stamp: 'bys 4/23/2016 18:43' prior: 35282061!new: unValor id: unID	^self new	rating: unValor;	iduser: unID.! !!Rating methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:43' prior: 35280032!rating: unValor	rating:= unValor! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!userid	^ userid! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!userid: anObject	userid := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!nombre	^ nombre! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!nombre: anObject	nombre := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!apellido	^ apellido! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!apellido: anObject	apellido := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!fechaNac	^ fechaNac! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!fechaNac: anObject	fechaNac := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!ocupacion	^ ocupacion! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!ocupacion: anObject	ocupacion := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!cPostal	^ cPostal! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!cPostal: anObject	cPostal := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!amigos	^ amigos! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!amigos: anObject	amigos := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!peliculas	^ peliculas! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:44'!peliculas: anObject	peliculas := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:45'!initialize	amigos:= OrderedCollection new.	peliculas:= OrderedCollection new! !----SNAPSHOT----2016-04-23T18:46:18.568054-03:00 hito 1.image priorSource: 1727457!----SNAPSHOT----2016-04-23T18:50:10.304054-03:00 hito 1.image priorSource: 1732065!----SNAPSHOT----2016-04-23T18:50:26.806054-03:00 hito 1.image priorSource: 1732150!----SNAPSHOT----2016-04-23T18:50:29.409054-03:00 hito 1.image priorSource: 1732235!!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:53'!= otraPeli	(otraPeli idmovie = self idmovie) ! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:53' prior: 35286902!= otraPeli	^(otraPeli idmovie = self idmovie) ! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:53' prior: 35287032!= otraPeli	^(otraPeli idmovie = self idmovie)! !Object subclass: #Pelicula	instanceVariableNames: 'movieid nombre estreno generos ratings'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!Pelicula removeSelector: #idmovie!Pelicula removeSelector: #idmovie:!!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:56'!movieid	^ movieid! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:56'!movieid: anObject	movieid := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:57'!= otroUser	^(otroUser userid = self userid)! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 18:57' prior: 35287163!= otraPeli	^(otraPeli movieid = self movieid)! !----SNAPSHOT----2016-04-23T18:57:44.516054-03:00 hito 1.image priorSource: 1732320!----SNAPSHOT----2016-04-23T18:57:57.911054-03:00 hito 1.image priorSource: 1733446!!User class methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:01'!nombre: unNombre apellido: unApellido fechaNac: unaFecha ocupacion: unaOcupacion cPostal: unCodigo	^self new	nombre: unNombre;	apellido: unApellido;	fechaNac: unaFecha;	ocupacion: unaOcupacion;	cPostal: unCodigo.! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 19:02'!initialize	ratings:= OrderedCollection new! !!Pelicula class methodsFor: 'constructor' stamp: 'bys 4/23/2016 19:04'!id: unID nombre: unNombre estreno: unaFecha	^self new	movieid: unID;	nombre: unNombre;	estreno: unaFecha! !!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 19:05' prior: 35288411!initialize	generos:= OrderedCollection new.	ratings:= OrderedCollection new! !----SNAPSHOT----2016-04-23T19:05:49.691054-03:00 hito 1.image priorSource: 1733531!!Pelicula methodsFor: 'accessing' stamp: 'bys 4/23/2016 19:07'!agregarGenero: unGenero	self generos add: unGenero! !----SNAPSHOT----2016-04-23T19:14:46.884054-03:00 hito 1.image priorSource: 1734370!!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 19:17'!vioPelicula: unaPelicula	^(self peliculas includes: unaPelicula)	! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:22'!buscarPeliculas: unaPelicula	^(self peliculas detect: [ :p1 | p1 movieid = unaPelicula movieid ]	 ifNone: [ Transcript clear; show: 'Esa pelicula no existe'. ^nil ]	)! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:23'!buscarPelicula: unaPelicula	^(self peliculas detect: [ :p1 | p1 movieid = unaPelicula movieid ]	 ifNone: [ Transcript clear; show: 'Esa pelicula no existe'. ^nil ]	)! !User removeSelector: #buscarPeliculas:!!User methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:26'!calificarPelicula: unaPelicula rate: unValor	(self buscarPelicula: unaPelicula)darPuntaje: unValor id:  self userid! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:27' prior: 35289819!calificarPelicula: unaPelicula rate: unValor	(self buscarPelicula: unaPelicula)darPuntaje: unValor id:  self userid! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:27' prior: 35290025!calificarPelicula: unaPelicula rate: unValor	(self buscarPelicula: unaPelicula)darPuntaje: unValor id: self userid! !----SNAPSHOT----2016-04-23T19:27:45.675054-03:00 hito 1.image priorSource: 1734574!TestCase subclass: #TestMoovies	instanceVariableNames: 'movie user rating'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:29'!setUp	! !TestCase subclass: #TestMoovies	instanceVariableNames: 'moovies movie user rating'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:29' prior: 35290659!setUp	moovies:= Moovies new.	! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:31'!existePelicula: unaPeli	^(self peliculas includes: unaPeli)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:32'!agregarPelicula: unaPeli	^(self existePelicula: unaPeli)	ifFalse: [ self movies add: unaPeli ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:34' prior: 35291163!agregarPelicula: unaPeli	(self existePelicula: unaPeli)	ifFalse: [ self movies add: unaPeli ]	ifTrue: [ Transcript cr; show: 'Esa pelicula ya existe, no puedes agregarla.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:35' prior: 35291352!agregarPelicula: unaPeli	(self existePelicula: unaPeli)	ifFalse: [ self movies add: unaPeli.		Transcript cr; show: 'La pelicula fue añadida correctamente.'		 ]	ifTrue: [ Transcript cr; show: 'Esa pelicula ya existe, no puedes agregarla.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:37'!eliminarPelicula: unaPeli	(self existePelicula: unaPeli)	ifTrue: [ self movies remove: unaPeli 		ifAbsent: [ Transcript cr; show: 'La pelicula se eliminó correctamente.' ]		]			! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:54' prior: 35290918!setUp	moovies:= Moovies new.	user 	! !TestCase subclass: #TestMoovies	instanceVariableNames: 'moovies movie1 movie2 user rating'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!(Smalltalk globals at: #Pelicula) rename: #Movie!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 19:58' prior: 35292224!setUp	moovies:= Moovies new.	movie1:= Movie id: 1 nombre: 'El regreso de la wea' estreno: 2015.	movie2:= Movie id: 2 nombre: 'Tsunami boliviano' estreno: 2014.	! !!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 20:02'!edad	^Date today year - (self fechaNac)year ! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 20:03' prior: 35292573!setUp	moovies:= Moovies new.	user:= User nombre: 'Pepe' apellido: 'Argento' fechaNac: (Date newDay: 23 month: 2 year: 1994) ocupacion: 'hago changas' cPostal: 1900.	movie1:= Movie id: 1 nombre: 'El regreso de la wea' estreno: 2015.	movie2:= Movie id: 2 nombre: 'Tsunami boliviano' estreno: 2014.	! !----SNAPSHOT----2016-04-23T20:04:36.621054-03:00 hito 1.image priorSource: 1735917!!User methodsFor: 'accessing' stamp: 'bys 4/23/2016 20:08'!agregarPelicula: unaPeli	(self vioPelicula: unaPeli)	ifFalse: [ self peliculas add: unaPeli.		Transcript cr; show: 'La pelicula fue añadida correctamente.'		 ]	ifTrue: [ Transcript cr; show: 'Esa pelicula ya la vio, no puedes agregarla.' ]! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 20:15'!testCalificarPelicula	user peliculas add: movie1.			! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 20:47' prior: 35293719!testCalificarPelicula	user peliculas add: movie1.				! !User removeSelector: #calificarPelicula!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/23/2016 20:50' prior: 35293872!testCalificarPelicula	user peliculas add: movie1.	user calificarPelicula: movie1 rate: 5.	self assert: ((user buscarPelicula: movie1)rating = 5)			! !!User methodsFor: 'accessing' stamp: 'bys 4/24/2016 00:52'!peliculasVistas	^self peliculas size! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/24/2016 00:58' prior: 35275907!usuariosMasActivos	^(self users asSortedCollection: [ :u1 :u2 | u1 peliculasVistas > u2 peliculasVistas ])! !----SNAPSHOT----2016-04-24T01:54:15.664054-03:00 hito 1.image priorSource: 1738815!----SNAPSHOT----2016-04-24T02:12:44.305054-03:00 hito 1.image priorSource: 1740094!----STARTUP----2016-04-29T19:50:44.446098-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!Object subclass: #Movie	instanceVariableNames: 'movieid name release genre ratings'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!Movie removeSelector: #estreno!Movie removeSelector: #generos:!Movie removeSelector: #estreno:!Movie removeSelector: #generos!Movie removeSelector: #nombre!Movie removeSelector: #nombre:!!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 19:52'!name1	^ name! !!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 19:52'!name: anObject	name := anObject! !!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 19:52'!release1	^ release! !!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 19:52'!release: anObject	release := anObject! !!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 19:52'!genre	^ genre! !!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 19:52'!genre: anObject	genre := anObject! !!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 19:52'!name	^ name! !Movie removeSelector: #name1!!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 19:53'!release	^ release! !Movie removeSelector: #release1!!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 19:53' prior: 35288952!agregarGenero: unGenero	self genre add: unGenero! !!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 19:54' prior: 35288722!initialize	genre:= OrderedCollection new.	ratings:= OrderedCollection new! !!Movie class methodsFor: 'constructor' stamp: 'bys 4/29/2016 19:54' prior: 35288530!id: unID nombre: unNombre estreno: unaFecha	^self new	movieid: unID;	name: unNombre;	release: unaFecha! !Object subclass: #User	instanceVariableNames: 'userid fname lname bornDate occupation zipCode friends movies'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!User removeSelector: #amigos!User removeSelector: #amigos:!User removeSelector: #apellido!User removeSelector: #apellido:!----SNAPSHOT----2016-04-29T21:15:42.792098-03:00 hito 1.image priorSource: 1740179!!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:15' prior: 35292801!edad	^Date today year - (self bornDate)year ! !User removeSelector: #fechaNac!User removeSelector: #fechaNac:!!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:17' prior: 35286416!initialize	friends:= OrderedCollection new.	movies:= OrderedCollection new! !User removeSelector: #nombre:!User removeSelector: #nombre!User removeSelector: #ocupacion:!User removeSelector: #ocupacion!User removeSelector: #cPostal:!User removeSelector: #cPostal!User removeSelector: #peliculas:!User removeSelector: #peliculas!!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!fname	^ fname! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!fname: anObject	fname := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!lname	^ lname! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!lname: anObject	lname := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!bornDate	^ bornDate! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!bornDate: anObject	bornDate := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!occupation	^ occupation! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!occupation: anObject	occupation := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!zipCode	^ zipCode! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!zipCode: anObject	zipCode := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!friends	^ friends! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!friends: anObject	friends := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!movies	^ movies! !!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:31'!movies: anObject	movies := anObject! !Object subclass: #Movie	instanceVariableNames: 'movieid title release genre ratings'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:32'!title	^ title! !!Movie methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:32'!title: anObject	title := anObject! !Movie removeSelector: #name!Movie removeSelector: #name:!!Movie class methodsFor: 'constructor' stamp: 'bys 4/29/2016 21:33' prior: 35335482!id: unID nombre: unNombre estreno: unaFecha	^self new	movieid: unID;	title: unNombre;	release: unaFecha! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 21:33' prior: 35294069!testCalificarPelicula	user movies add: movie1.	user calificarPelicula: movie1 rate: 5.	self assert: ((user buscarPelicula: movie1)rating = 5)			! !!User class methodsFor: 'constructor' stamp: 'bys 4/29/2016 21:34' prior: 35288125!nombre: unNombre apellido: unApellido fechaNac: unaFecha ocupacion: unaOcupacion cPostal: unCodigo	^self new	fname: unNombre;	lname: unApellido;	bornDate: unaFecha;	occupation: unaOcupacion;	zipCode: unCodigo.! !----SNAPSHOT----2016-04-29T21:40:12.425098-03:00 hito 1.image priorSource: 1781471!!User methodsFor: 'accessing' stamp: 'bys 4/29/2016 21:42' prior: 35293393!agregarPelicula: unaPeli	(self vioPelicula: unaPeli)	ifFalse: [ self movies add: unaPeli.		Transcript cr; show: 'La pelicula fue añadida correctamente.'		 ]	ifTrue: [ Transcript cr; show: 'Esa pelicula ya la vio, no puedes agregarla.' ]! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 21:42' prior: 35289536!buscarPelicula: unaPelicula	^(self movies detect: [ :p1 | p1 movieid = unaPelicula movieid ]	 ifNone: [ Transcript clear; show: 'Esa pelicula no existe'. ^nil ]	)! !----SNAPSHOT----2016-04-29T21:42:51.778098-03:00 hito 1.image priorSource: 1784596!----SNAPSHOT----2016-04-29T21:59:44.725098-03:00 hito 1.image priorSource: 1785258!!Movie class methodsFor: 'constructor' stamp: 'bys 4/29/2016 22:01'!id: unID title: unNombre release: unaFecha	^self new	movieid: unID;	title: unNombre;	release: unaFecha! !Movie class removeSelector: #id:nombre:estreno:!!User class methodsFor: 'constructor' stamp: 'bys 4/29/2016 22:02'!fname: unNombre lname: unApellido bDate: unaFecha ocuppation: unaOcupacion zipCode: unCodigo	^self new	fname: unNombre;	lname: unApellido;	bornDate: unaFecha;	occupation: unaOcupacion;	zipCode: unCodigo.! !User class removeSelector: #nombre:apellido:fechaNac:ocupacion:cPostal:!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 22:03' prior: 35292943!setUp	moovies:= Moovies new.	user:= User fname: 'Pepe' lname: 'Argento' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'hago changas' zipCode: 1900.	movie1:= Movie id: 1 nombre: 'El regreso de la wea' estreno: 2015.	movie2:= Movie id: 2 nombre: 'Tsunami boliviano' estreno: 2014.	! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 22:03' prior: 35340538!setUp	moovies:= Moovies new.	user:= User fname: 'Pepe' lname: 'Argento' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'hago changas' zipCode: 1900.	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	! !----SNAPSHOT----2016-04-29T22:03:56.326098-03:00 hito 1.image priorSource: 1785343!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 22:08' prior: 35291621!agregarPelicula: unaPeli"Agrega una pelicula nueva a la lista de peliculas"	(self existePelicula: unaPeli)	ifFalse: [ self movies add: unaPeli.		Transcript cr; show: 'La pelicula fue añadida correctamente.'		 ]	ifTrue: [ Transcript cr; show: 'Esa pelicula ya existe, no puedes agregarla.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 22:08' prior: 35291943!eliminarPelicula: unaPeli"Elimina una pelicula existente de la lista de peliculas"	(self existePelicula: unaPeli)	ifTrue: [ self movies remove: unaPeli 		ifAbsent: [ Transcript cr; show: 'La pelicula se eliminó correctamente.' ]		]			! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 22:09' prior: 35291026!existePelicula: unaPeli"Devuelve una pelicula determinada en caso de existir en la lista de peliculas."	^(self peliculas includes: unaPeli)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 22:09' prior: 35279607!mejoresPeliculas	^(self movies asSortedCollection: [ :m1 :m2 | m1 rating > m2 rating ])first: 10.! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 22:11' prior: 35342360!mejoresPeliculas"Devuelve una coleccion con las 10 peliculas mejores calificadas."	^(self movies asSortedCollection: [ :m1 :m2 | m1 rating > m2 rating ])first: 10.! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 22:11' prior: 35294416!usuariosMasActivos	^(self users asSortedCollection: [ :u1 :u2 | u1 peliculasVistas > u2 peliculasVistas ])first: 10! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 22:11' prior: 35342810!usuariosMasActivos"Devuelve una coleccion con los 10 usuarios mas activos del sistema"	^(self users asSortedCollection: [ :u1 :u2 | u1 peliculasVistas > u2 peliculasVistas ])first: 10! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/29/2016 22:11' prior: 35343019!usuariosMasActivos"Devuelve una coleccion con los 10 usuarios mas activos del sistema."	^(self users asSortedCollection: [ :u1 :u2 | u1 peliculasVistas > u2 peliculasVistas ])first: 10! !----SNAPSHOT----2016-04-29T22:11:47.827098-03:00 hito 1.image priorSource: 1786794!----SNAPSHOT----2016-04-30T00:15:36.278098-03:00 hito 1.image priorSource: 1789054!----SNAPSHOT----2016-04-30T03:18:57.073098-03:00 hito 1.image priorSource: 1789139!----STARTUP----2016-04-30T12:55:44.915967-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 12:59'!addMovie: unaPeli	(self vioPelicula: unaPeli)	ifFalse: [ self movies add: unaPeli.		Transcript cr; show: 'La pelicula fue añadida correctamente.'		 ]	ifTrue: [ Transcript cr; show: 'Esa pelicula ya la vio, no puedes agregarla.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 12:59'!addMovie: unaPeli"Agrega una pelicula nueva a la lista de peliculas"	(self existePelicula: unaPeli)	ifFalse: [ self movies add: unaPeli.		Transcript cr; show: 'La pelicula fue añadida correctamente.'		 ]	ifTrue: [ Transcript cr; show: 'Esa pelicula ya existe, no puedes agregarla.' ]! !User removeSelector: #agregarPelicula:!Moovies removeSelector: #agregarPelicula:!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:00'!deleteMovie: unaPeli"Elimina una pelicula existente de la lista de peliculas"	(self existePelicula: unaPeli)	ifTrue: [ self movies remove: unaPeli 		ifAbsent: [ Transcript cr; show: 'La pelicula se eliminó correctamente.' ]		]			! !Moovies removeSelector: #eliminarPelicula:!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:01'!existsMovie: unaPeli"Devuelve una pelicula determinada en caso de existir en la lista de peliculas."	^(self peliculas includes: unaPeli)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:01' prior: 35383408!addMovie: unaPeli"Agrega una pelicula nueva a la lista de peliculas"	(self existsMovie: unaPeli)	ifFalse: [ self movies add: unaPeli.		Transcript cr; show: 'La pelicula fue añadida correctamente.'		 ]	ifTrue: [ Transcript cr; show: 'Esa pelicula ya existe, no puedes agregarla.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:01' prior: 35383860!deleteMovie: unaPeli"Elimina una pelicula existente de la lista de peliculas"	(self existsMovie: unaPeli)	ifTrue: [ self movies remove: unaPeli 		ifAbsent: [ Transcript cr; show: 'La pelicula se eliminó correctamente.' ]		]			! !Moovies removeSelector: #existePelicula:!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:02'!bestMovies"Devuelve una coleccion con las 10 peliculas mejores calificadas."	^(self movies asSortedCollection: [ :m1 :m2 | m1 rating > m2 rating ])first: 10.! !Moovies removeSelector: #mejoresPeliculas!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:03'!activeUsers"Devuelve una coleccion con los 10 usuarios mas activos del sistema."	^(self users asSortedCollection: [ :u1 :u2 | u1 peliculasVistas > u2 peliculasVistas ])first: 10! !Moovies removeSelector: #usuariosMasActivos!!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 13:05'!addGenre: unGenero	self genre add: unGenero! !Movie removeSelector: #agregarGenero:!!Movie methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:05'!rate: unValor id: unID	(unValor >= 1) & (unValor <= 5)	ifTrue: [self ratings add: (Rating new: unValor id: unID)]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:05' prior: 35290231!calificarPelicula: unaPelicula rate: unValor	(self buscarPelicula: unaPelicula)rate: unValor id: self userid! !Movie removeSelector: #darPuntaje:id:!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:06' prior: 35384219!existsMovie: unaPeli"Devuelve true si una pelicula determinada existe en la lista de peliculas y false en caso contrario."	^(self peliculas includes: unaPeli)! !!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 13:07' prior: 35385754!addGenre: unGenero"Agrega un genero a la lista de generos de la pelicula."	self genre add: unGenero! !!Movie methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:07' prior: 35385913!rate: unValor id: unID"Califica una pelicula con un valor entre 1 y 5 inclusive."	(unValor >= 1) & (unValor <= 5)	ifTrue: [self ratings add: (Rating new: unValor id: unID)]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]! !----SNAPSHOT----2016-04-30T13:08:49.850967-03:00 hito 1.image priorSource: 1789224!Object subclass: #Rating	instanceVariableNames: 'iduser timestamp rating'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!Rating methodsFor: 'accessing' stamp: 'bys 4/30/2016 13:09'!timestamp	^ timestamp! !!Rating methodsFor: 'accessing' stamp: 'bys 4/30/2016 13:09'!timestamp: anObject	timestamp := anObject! !!Rating class methodsFor: 'constructor' stamp: 'bys 4/30/2016 13:10' prior: 35284688!new: unValor id: unID	^self new	rating: unValor;	timestamp: (DateAndTime today);	iduser: unID.! !!Rating class methodsFor: 'constructor' stamp: 'bys 4/30/2016 13:12'!new: unValor tstamp: unTiempo id: unID	^self new	rating: unValor;	timestamp: unTiempo;	iduser: unID.! !Rating class removeSelector: #new:tstamp:id:!!Rating class methodsFor: 'constructor' stamp: 'bys 4/30/2016 13:13'!new: unValor tstamp: unTiempo id: unID	^self new	rating: unValor;	timestamp: unTiempo;	iduser: unID.! !Rating class removeSelector: #new:id:!!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:15' prior: 35386223!calificarPelicula: unaPelicula rate: unValor	(self buscarPelicula: unaPelicula)rate: unValor tstamp: (DateAndTime today)asTimeStamp id: self userid! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:15' prior: 35388326!calificarPelicula: unaPelicula rate: unValor	(self buscarPelicula: unaPelicula)rate: unValor tstamp: (DateAndTime today)asTimeStamp id: (self userid)! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:16' prior: 35388564!calificarPelicula: unaPelicula rate: unValor	(self buscarPelicula: unaPelicula)rate: unValor tstamp: (DateAndTime today)asUnixTime id: (self userid)! !----SNAPSHOT----2016-04-30T13:35:02.710967-03:00 hito 1.image priorSource: 1832749!!Movie methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:36' prior: 35386898!rate: unValor id: unID"Califica una pelicula con un valor entre 1 y 5 inclusive."	(unValor >= 1) & (unValor <= 5)	ifTrue: [self ratings add: (Rating new: unValor tstamp: (DateAndTime today)asUnixTime id: unID)]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 13:37' prior: 35388804!calificarPelicula: unaPelicula rate: unValor	(self buscarPelicula: unaPelicula)rate: unValor id: (self userid)! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 14:26'!findMovie: unaPelicula	^(self movies detect: [ :p1 | p1 movieid = unaPelicula movieid ]	 ifNone: [ Transcript clear; show: 'Esa pelicula no existe'. ^nil ]	)! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 14:26' prior: 35338572!testCalificarPelicula	user movies add: movie1.	user calificarPelicula: movie1 rate: 5.	self assert: ((user findMovie: movie1)rating = 5)			! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 14:26' prior: 35389537!calificarPelicula: unaPelicula rate: unValor	(self findMovie: unaPelicula)rate: unValor id: (self userid)! !User removeSelector: #buscarPelicula:!!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 14:26'!rateMovie: unaPelicula value: unValor	(self findMovie: unaPelicula)rate: unValor id: (self userid)! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 14:26' prior: 35389979!testCalificarPelicula	user movies add: movie1.	user rateMovie: movie1 value: 5.	self assert: ((user findMovie: movie1)rating = 5)			! !User removeSelector: #calificarPelicula:rate:!!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:27'!age	^Date today year - (self bornDate)year ! !User removeSelector: #edad!User removeSelector: #peliMejorCalificada!User removeSelector: #peliculasVistas!!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:28'!sawMovie: unaPelicula	^(self peliculas includes: unaPelicula)	! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:28' prior: 35383096!addMovie: unaPeli	(self sawMovie: unaPeli)	ifFalse: [ self movies add: unaPeli.		Transcript cr; show: 'La pelicula fue añadida correctamente.'		 ]	ifTrue: [ Transcript cr; show: 'Esa pelicula ya la vio, no puedes agregarla.' ]! !User removeSelector: #vioPelicula:!----SNAPSHOT----2016-04-30T14:28:25.178967-03:00 hito 1.image priorSource: 1834524!!Rating methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:29' prior: 35277916!iduser	^ userid! !!Rating methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:29' prior: 35277998!iduser: anObject	userid := anObject! !!Rating methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:29' prior: 35391681!iduser	^ userid! !!Rating methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:29' prior: 35391779!iduser: anObject	userid := anObject! !!Rating methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:29'!userid	^ userid! !Rating removeSelector: #iduser!!Rating methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:29'!userid: anObject	userid := anObject! !!Rating class methodsFor: 'constructor' stamp: 'bys 4/30/2016 14:29' prior: 35388092!new: unValor tstamp: unTiempo id: unID	^self new	rating: unValor;	timestamp: unTiempo;	userid: unID.! !Rating removeSelector: #iduser:!!Rating commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	rating:		<Object>	timestamp:		<Object>	userid:		<Object>    Implementation Points!!User commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	bornDate:		<Object>	fname:		<Object>	friends:		<Object>	lname:		<Object>	movies:		<Object>	occupation:		<Object>	userid:		<Object>	zipCode:		<Object>    Implementation Points!!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:45'!deleteGenre: unGenero"Agrega un genero a la lista de generos de la pelicula."	self genre remove: unGenero ifAbsent: [ 		Transcript cr; show: 'Ese genero no existe.'		 ]! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:46' prior: 35391245!addMovie: unaPeli"Agrega una pelicula a la lista de peliculas vistas por el usuario."	(self sawMovie: unaPeli)	ifFalse: [ self movies add: unaPeli.		Transcript cr; show: 'La pelicula fue añadida correctamente.'		 ]	ifTrue: [ Transcript cr; show: 'Esa pelicula ya la vio, no puedes agregarla.' ]! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 14:46' prior: 35390880!age"Retorna la edad del usuario"	^Date today year - (self bornDate)year ! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 15:00' prior: 35389722!findMovie: unaPelicula"Retorna una pelicula determinada si es que existe en la lista de peliculas."	^(self movies detect: [ :p1 | p1 movieid = unaPelicula movieid ]	 ifNone: [ Transcript clear; show: 'Esa pelicula no existe'. ^nil ]	)! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 15:01' prior: 35390434!rateMovie: unaPelicula value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	(self findMovie: unaPelicula)rate: unValor id: (self userid)! !!Moovies commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	movies:		<Object>	users:		<Object>    Implementation Points!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 16:53'!areFriends: anUser and: otherUser"Devuelve true o false dependiendo si son o no amigos ambos usuarios."	! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 16:55'!findMovie: unaPelicula"Retorna una pelicula determinada si es que existe en la lista de peliculas."	^(self movies detect: [ :p1 | p1 movieid = unaPelicula movieid ]	 ifNone: [ Transcript clear; show: 'Esa pelicula no existe'. ^nil ]	)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 16:57'!findUser: unUser"Retorna un usuario determinado si es que existe en la lista de usuarios."	^(self users detect: [ :u1 | u1 userid = unUser userid ]	 ifNone: [ Transcript clear; show: 'Ese usuario no existe'. ^nil ]	)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 16:59' prior: 35396515!areFriends: anUser and: otherUser"Devuelve true o false dependiendo si son o no amigos ambos usuarios."	(self findUser: anUser)! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 17:04'!isFriend: anUser	(self friends includes: anUser)! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 17:04' prior: 35397519!isFriend: anUser	^(self friends includes: anUser)! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 17:06'!addFriend: anUser	(self isFriend: anUser)	ifFalse: [ self friends add: anUser ]! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 17:08' prior: 35397762!addFriend: anUser	(self isFriend: anUser)	ifFalse: [ self friends add: (anUser friends add: self)]! !----SNAPSHOT----2016-04-30T17:12:30.574967-03:00 hito 1.image priorSource: 1837085!----SNAPSHOT----2016-04-30T17:15:09.141967-03:00 hito 1.image priorSource: 1843594!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:15'!testAddFriend	user movies add: movie1.	user rateMovie: movie1 value: 5.	self assert: ((user findMovie: movie1)rating = 5)			! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:15' prior: 35398274!testAddFriend	user1 movies add: movie1.	user1 rateMovie: movie1 value: 5.	self assert: ((user1 findMovie: movie1)rating = 5)			! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:15' prior: 35340930!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'hago changas' zipCode: 1900.	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:15' prior: 35390630!testCalificarPelicula	user1 movies add: movie1.	user1 rateMovie: movie1 value: 5.	self assert: ((user1 findMovie: movie1)rating = 5)			! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:15' prior: 35398501!testAddFriend	user1 movies add: movie1.	user1 rateMovie: movie1 value: 5.	self assert: ((user1 findMovie: movie1)rating = 5)			! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:15' prior: 35398731!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'hago changas' zipCode: 1900.	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:15' prior: 35399122!testCalificarPelicula	user1 movies add: movie1.	user1 rateMovie: movie1 value: 5.	self assert: ((user1 findMovie: movie1)rating = 5)			! !TestCase subclass: #TestMoovies	instanceVariableNames: 'moovies movie1 movie2 rating user1 user2'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:17' prior: 35399590!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'hago changas' zipCode: 1900.	user2:= User fname: 'Moni' lname: 'Argenti' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'se la rask' zipCode: 1900.	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:18' prior: 35399360!testAddFriend	user1 addFriend: user2.	self assert: (user1 isFriend: user2).	self assert: (user2 isFriend: user1).			! !----SNAPSHOT----2016-04-30T17:18:20.370967-03:00 hito 1.image priorSource: 1843679!!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 17:20' prior: 35397923!addFriend: anUser	(self isFriend: anUser)	ifFalse: [ self friends add: (anUser friends add: self)]	ifTrue: [ Transcript cr; show: 'No podes agregarlo porque ya son amigos.' ]! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 17:22' prior: 35401197!addFriend: anUser	(self isFriend: anUser)	ifFalse: [ self friends add: (anUser friends add: self).		Transcript cr; show: self fname; show: ' y '; show: anUser fname; show: ' ahora son amigos.' 		]	ifTrue: [ Transcript cr; show: 'No podes agregarlo porque ya son amigos.' ]! !----SNAPSHOT----2016-04-30T17:23:36.377967-03:00 hito 1.image priorSource: 1846603!----SNAPSHOT----2016-04-30T17:24:20.824967-03:00 hito 1.image priorSource: 1847302!!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 17:25'!removeFriend: anUser	(self isFriend: anUser)	ifTrue: [ self friends remove: (anUser friends remove: self).		Transcript cr; show: self fname; show: ' y '; show: anUser fname; show: ' ya no son amigos.' 		]	ifFalse: [ Transcript cr; show: 'No podes borrarlo porque no son ameos.' ]! !----SNAPSHOT----2016-04-30T17:26:08.085967-03:00 hito 1.image priorSource: 1847387!!User class methodsFor: 'constructor' stamp: 'bys 4/30/2016 17:27'!fname: unNombre lname: unApellido bDate: unaFecha ocuppation: unaOcupacion zipCode: unCodigo id: anID	^self new	fname: unNombre;	lname: unApellido;	bornDate: unaFecha;	occupation: unaOcupacion;	userid: anID;	zipCode: unCodigo.! !User class removeSelector: #fname:lname:bDate:ocuppation:zipCode:!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:29' prior: 35400389!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'hago changas' zipCode: 1900 id: 1.	user2:= User fname: 'Moni' lname: 'Argenti' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'se la rask' zipCode: 1900 id: 2.	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 17:40' prior: 35401454!addFriend: anUser	(self isFriend: anUser)	ifFalse: [ anUser friends add: self .		self friends add: (anUser).		Transcript cr; show: self fname; show: ' y '; show: anUser fname; show: ' ahora son amigos.' 		]	ifTrue: [ Transcript cr; show: 'No podes agregarlo porque ya son amigos.' ]! !----SNAPSHOT----2016-04-30T17:40:28.084967-03:00 hito 1.image priorSource: 1847820!----SNAPSHOT----2016-04-30T17:40:38.651967-03:00 hito 1.image priorSource: 1849179!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:41'!existsUser: anUser"Devuelve true si una pelicula determinada existe en la lista de peliculas y false en caso contrario."	^(self users includes: anUser)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:41' prior: 35403855!existsUser: anUser"Devuelve true si un usuario determinado existe en la lista de usuarios y false en caso contrario."	^(self users includes: anUser)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:43'!addUser: anUser"Agrega un usuario nuevo a la lista de usuarios"	(self existsUser: anUser)	ifFalse: [ self users add: anUser.		Transcript cr; show: 'El usuario fue añadido correctamente.'		 ]	ifTrue: [ Transcript cr; show: 'Ese usuario ya existe, no puedes agregarlo.' ]! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 17:44'!deleteFriend: anUser	(self isFriend: anUser)	ifTrue: [ self friends remove: (anUser friends remove: self).		Transcript cr; show: self fname; show: ' y '; show: anUser fname; show: ' ya no son amigos.' 		]	ifFalse: [ Transcript cr; show: 'No podes borrarlo porque no son ameos.' ]! !User removeSelector: #removeFriend:!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:46' prior: 35397326!areFriends: anUser and: otherUser"Devuelve true o false dependiendo si son o no amigos ambos usuarios."	(self existsUser: anUser)	ifTrue: [ ^(anUser isFriend: otherUser) ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:48'!friendsOf: anUser"Devuelve una coleccion de amigos de un usuario determinado."	(self existsUser: anUser)	ifTrue: [ ^(anUser friends) ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:48' prior: 35405334!friendsOf: anUser"Devuelve una coleccion de amigos de un usuario determinado."	(self existsUser: anUser)	ifTrue: [ ^(anUser friends) ]	ifFalse: [ Transcript clear; cr; show: 'Ese usuario no existe.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:49' prior: 35405564!friendsOf: anUser"Devuelve una coleccion de amigos de un usuario determinado."	(self existsUser: anUser)	ifTrue: [ ^(anUser friends) ]	ifFalse: [ Transcript clear; cr; show: 'Ese usuario no existe.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:50'!ratingOf: aMovie"Devuelve una coleccion de amigos de un usuario determinado."	(self existsMovie: aMovie)	ifTrue: [ ^(aMovie rating) ]	ifFalse: [ Transcript clear; cr; show: 'Esa pelicula no existe.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 17:51' prior: 35406142!ratingOf: aMovie"Devuelve el puntaje promedio de una pelicula determinada."	(self existsMovie: aMovie)	ifTrue: [ ^(aMovie rating) ]	ifFalse: [ Transcript clear; cr; show: 'Esa pelicula no existe.' ]! !----SNAPSHOT----2016-04-30T17:51:22.169967-03:00 hito 1.image priorSource: 1849264!!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 18:04'!favouriteGenre	"Retorna el genero favorito del usuario."	self movies ! !!Movie commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	genre:		<Object>	movieid:		<Object>	ratings:		<Object>	release:		<Object>	title:		<Object>    Implementation Points!----SNAPSHOT----2016-04-30T18:08:02.365967-03:00 hito 1.image priorSource: 1852212!TestCase subclass: #TestMoovies	instanceVariableNames: 'moovies movie1 movie2 rating user1 user2 user3'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 18:09' prior: 35402804!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'hago changas' zipCode: 1900 id: 1.	user2:= User fname: 'Moni' lname: 'Argenti' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'se la rask' zipCode: 1900 id: 2.	user2:= User fname: 'Coki' lname: 'Argenti' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'manopla' zipCode: 1900 id: 3.	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 18:11'!testRemoveFriend	user1 friends add: user2.	self assert: (user1 isFriend: user2).	user1 deleteFriend: user2.	self deny: (user2 isFriend: user1).			! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 18:12' prior: 35404668!deleteFriend: anUser	(self isFriend: anUser)	ifTrue: [ anUser friends remove: self.		self friends remove: anUser.		Transcript cr; show: self fname; show: ' y '; show: anUser fname; show: ' ya no son amigos.' 		]	ifFalse: [ Transcript cr; show: 'No podes borrarlo porque no son ameos.' ]! !----SNAPSHOT----2016-04-30T18:17:39.909967-03:00 hito 1.image priorSource: 1853310!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 18:18' prior: 35408747!testRemoveFriend	user1 friends add: user2.	user2 friends add: user1.	self assert: (user1 isFriend: user2).	user1 deleteFriend: user2.	self deny: (user2 isFriend: user1).			! !----SNAPSHOT----2016-04-30T18:18:48.228967-03:00 hito 1.image priorSource: 1854843!----SNAPSHOT----2016-04-30T18:26:07.320967-03:00 hito 1.image priorSource: 1855205!----SNAPSHOT----2016-04-30T18:30:36.332967-03:00 hito 1.image priorSource: 1855290!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 18:31' prior: 35408097!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'hago changas' zipCode: 1900 id: 1.	user2:= User fname: 'Moni' lname: 'Argenti' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'se la rask' zipCode: 1900 id: 2.	user3:= User fname: 'Coki' lname: 'Argenti' bDate: (Date newDay: 23 month: 2 year: 1994) ocuppation: 'manopla' zipCode: 1900 id: 3.	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	! !----SNAPSHOT----2016-04-30T18:31:19.448967-03:00 hito 1.image priorSource: 1855375!!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 19:02' prior: 35395448!rateMovie: unaPelicula value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	(self sawMovie: unaPelicula)	ifTrue: [(self findMovie: unaPelicula)rate: unValor id: (self userid)]	ifFalse: [ Transcript clear; show: 'No se puede calificar una pelicula que no se agrego como vista.' ]! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 19:03' prior: 35391101!sawMovie: unaPelicula	^(self movies includes: unaPelicula)	! !----SNAPSHOT----2016-04-30T19:03:42.492967-03:00 hito 1.image priorSource: 1856126!Object subclass: #Movie	instanceVariableNames: 'movieid title release genres ratings'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 19:04'!genres	^ genres! !Movie removeSelector: #genres!!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 19:05'!genres	^ genre! !!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 19:05' prior: 35394323!deleteGenre: unGenero"Agrega un genero a la lista de generos de la pelicula."	self genres remove: unGenero ifAbsent: [ 		Transcript cr; show: 'Ese genero no existe.'		 ]! !!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 19:05' prior: 35386706!addGenre: unGenero"Agrega un genero a la lista de generos de la pelicula."	self genres add: unGenero! !Movie removeSelector: #genre!!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 19:05'!genres: anObject	genre := anObject! !Movie removeSelector: #genre:!----SNAPSHOT----2016-04-30T19:05:26.479967-03:00 hito 1.image priorSource: 1856755!----SNAPSHOT----2016-04-30T19:41:48.097967-03:00 hito 1.image priorSource: 1857791!----SNAPSHOT----2016-04-30T19:44:23.944967-03:00 hito 1.image priorSource: 1857876!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:10'!loadUsersFrom: aPath	|file next aux|	file:= aPath asFileReference readStream.	(file atEnd) whileTrue: [ 		next:= file nextLine.		aux:= (next findTokens: '|').		self addUser: (User fname: (aux at: 6)		 lname: (aux at:7)		 age: (aux at: 2)		 ocuppation: (aux at: 4)		 zipCode: (aux at:5)		 id: (aux at:1))		 ]! !Object subclass: #User	instanceVariableNames: 'userid fname lname age gender occupation zipCode friends movies'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!User removeSelector: #age!!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 20:11'!age	^ age! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 20:11'!age: anObject	age := anObject! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 20:11'!gender	^ gender! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 20:11'!gender: anObject	gender := anObject! !!User class methodsFor: 'constructor' stamp: 'bys 4/30/2016 20:12'!fname: unNombre lname: unApellido age: unaFecha gender: aGender ocuppation: unaOcupacion zipCode: unCodigo id: anID	^self new	fname: unNombre;	lname: unApellido;	gender: aGender;	age: unaFecha;	occupation: unaOcupacion;	userid: anID;	zipCode: unCodigo.! !User class removeSelector: #fname:lname:bDate:ocuppation:zipCode:id:!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:12' prior: 35409986!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' age: 12 ocuppation: 'hago changas' zipCode: 1900 id: 1.	user2:= User fname: 'Moni' lname: 'Argenti' age: 15 ocuppation: 'se la rask' zipCode: 1900 id: 2.	user3:= User fname: 'Coki' lname: 'Argenti' age: 18 ocuppation: 'manopla' zipCode: 1900 id: 3.	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:13' prior: 35413931!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' age: 12 gender: 'H' ocuppation: 'hago changas' zipCode: 1900 id: 1.	user2:= User fname: 'Moni' lname: 'Argenti' age: 15 gender: 'M' ocuppation: 'se la rask' zipCode: 1900 id: 2.	user3:= User fname: 'Coki' lname: 'Argenti' age: 18 gender: 'H' ocuppation: 'manopla' zipCode: 1900 id: 3.	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:14' prior: 35412552!loadUsersFrom: aPath	|file next aux|	file:= aPath asFileReference readStream.	(file atEnd) whileTrue: [ 		next:= file nextLine.		aux:= (next findTokens: '|').		self addUser: (User fname: (aux at: 6)		 lname: (aux at:7)		 age: (aux at: 2)		 gender: (aux at:3)		 ocuppation: (aux at: 4)		 zipCode: (aux at:5)		 id: (aux at:1))		 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:15' prior: 35415073!loadUsersFrom: aPath	|file next aux|	file:= aPath asFileReference readStream.	(file atEnd) whileTrue: [ 		next:= file nextLine.		aux:= (next findTokens: '|').		self addUser: (User fname: (aux at: 6)		 lname: (aux at:7)		 age: (aux at: 2)asInteger 		 gender: (aux at:3)		 ocuppation: (aux at: 4)		 zipCode: (aux at:5)asInteger		 id: (aux at:1)asInteger)		 ]! !----SNAPSHOT----2016-04-30T20:16:58.184967-03:00 hito 1.image priorSource: 1857961!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:17' prior: 35415507!loadUsersFrom: aPath	|file next aux|	file:= aPath asFileReference readStream.	(file atEnd) whileFalse: [ 		next:= file nextLine.		aux:= (next findTokens: '|').		self addUser: (User fname: (aux at: 6)		 lname: (aux at:7)		 age: (aux at: 2)asInteger 		 gender: (aux at:3)		 ocuppation: (aux at: 4)		 zipCode: (aux at:5)asInteger		 id: (aux at:1)asInteger)		 ]! !----SNAPSHOT----2016-04-30T20:17:15.292967-03:00 hito 1.image priorSource: 1861447!----SNAPSHOT----2016-04-30T20:19:14.409967-03:00 hito 1.image priorSource: 1861995!----SNAPSHOT----2016-04-30T20:21:18.260967-03:00 hito 1.image priorSource: 1862080!----SNAPSHOT----2016-04-30T20:21:55.114967-03:00 hito 1.image priorSource: 1862165!----SNAPSHOT----2016-04-30T20:24:35.355967-03:00 hito 1.image priorSource: 1862250!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:29' prior: 35416054!loadUsersFrom: aPath	|file next aux|	file:= aPath asFileReference readStream.	(file atEnd) 	ifFalse: [ 		next:= file nextLine.		aux:= (next findTokens: '|').		self addUser: (User fname: (aux at: 6)		 lname: (aux at:7)		 age: (aux at: 2)asInteger 		 gender: (aux at:3)		 ocuppation: (aux at: 4)		 zipCode: (aux at:5)asInteger		 id: (aux at:1)asInteger)		 ]! !----SNAPSHOT----2016-04-30T20:29:53.666967-03:00 hito 1.image priorSource: 1862335!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:32' prior: 35416942!loadUsersFrom: aPath	|file next aux|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= file nextLine.		aux:= (next findTokens: '|').		self addUser: (User fname: (aux at: 6)		 lname: (aux at:7)		 age: (aux at: 2)asInteger 		 gender: (aux at:3)		 ocuppation: (aux at: 4)		 zipCode: (aux at:5)asInteger		 id: (aux at:1)asInteger)		 ]! !----SNAPSHOT----2016-04-30T20:32:20.983967-03:00 hito 1.image priorSource: 1862882!----SNAPSHOT----2016-04-30T20:32:58.716967-03:00 hito 1.image priorSource: 1863431!----SNAPSHOT----2016-04-30T20:33:38.286967-03:00 hito 1.image priorSource: 1863516!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:34' prior: 35417489!loadUsersFrom: aPath	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		self addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 gender: (next at:3)		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 id: (next at:1)asInteger)		 ]! !----SNAPSHOT----2016-04-30T20:34:59.578967-03:00 hito 1.image priorSource: 1863601!----SNAPSHOT----2016-04-30T20:35:07.649967-03:00 hito 1.image priorSource: 1864138!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:37'!loadFSsFrom: aPath	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		self addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 gender: (next at:3)		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 id: (next at:1)asInteger)		 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:37' prior: 35397013!findUser: unID"Retorna un usuario determinado si es que existe en la lista de usuarios."	^(self users detect: [ :u1 | u1 userid = unID ]	 ifNone: [ Transcript clear; show: 'Ese usuario no existe'. ^nil ]	)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 20:40' prior: 35418814!loadFSsFrom: aPath	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		(self findUser: (next at:1)asInteger)addFriend: (self findUser: (next at:2)asInteger)		 ]! !----SNAPSHOT----2016-04-30T20:41:23.978967-03:00 hito 1.image priorSource: 1864223!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:04'!loadRatingsFrom: aPath	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.						 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:05' prior: 35418208!loadUsersFrom: aPath"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		self addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 gender: (next at:3)		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 id: (next at:1)asInteger)		 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:07' prior: 35419566!loadFSsFrom: aPath"Carga relaciones de amistad desde un archivo externo que debe cumplir con el siguiente formato:										userid|friendid"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		(self findUser: (next at:1)asInteger)addFriend: (self findUser: (next at:2)asInteger)		 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:08' prior: 35419965!loadRatingsFrom: aPath"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.						 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:18' prior: 35421269!loadRatingsFrom: aPath"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(self findUser: (next at:1)asInteger) 		 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:19'!loadMoviesFrom: aPath"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(self findUser: (next at:1)asInteger) 		 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:19' prior: 35422145!loadMoviesFrom: aPath"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(self findUser: (next at:1)asInteger) 		 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:22' prior: 35422847!loadMoviesFrom: aPath"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				self addMovie: 		(Movie id: (next at:1)asInteger 		 title: (next at:2)		 release: (next at:3)asInteger)		 ]! !!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 21:32'!addGenres: aGenres"Agrega generos desde una coleccion a la lista de generos de la pelicula."	((aGenres at:1) = 1) ifTrue: [ self genres add: 'unknown' ].	((aGenres at:2) = 1) ifTrue: [ self genres add: 'Action' ].	((aGenres at:3) = 1) ifTrue: [ self genres add: 'Adventure' ].	((aGenres at:4) = 1) ifTrue: [ self genres add: 'Animation' ].	((aGenres at:5) = 1) ifTrue: [ self genres add: 'Childrens' ].	((aGenres at:6) = 1) ifTrue: [ self genres add: 'Comedy' ].	((aGenres at:7) = 1) ifTrue: [ self genres add: 'Crime' ].	((aGenres at:8) = 1) ifTrue: [ self genres add: 'Documentary' ].	((aGenres at:9) = 1) ifTrue: [ self genres add: 'Drama' ].	((aGenres at:10) = 1) ifTrue: [ self genres add: 'Fantasy' ].	((aGenres at:11) = 1) ifTrue: [ self genres add: 'Film­Noir' ].	((aGenres at:12) = 1) ifTrue: [ self genres add: 'Horror' ].	((aGenres at:13) = 1) ifTrue: [ self genres add: 'Musical' ].	((aGenres at:14) = 1) ifTrue: [ self genres add: 'Mystery' ].	((aGenres at:15) = 1) ifTrue: [ self genres add: 'Romance' ].	((aGenres at:16) = 1) ifTrue: [ self genres add: 'Sci­Fi' ].	((aGenres at:17) = 1) ifTrue: [ self genres add: 'Thriller' ].	((aGenres at:18) = 1) ifTrue: [ self genres add: 'War' ].	((aGenres at:19) = 1) ifTrue: [ self genres add: 'Western' ].! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:36' prior: 35423500!loadMoviesFrom: aPath"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				self addMovie: 		((Movie id: (next at:1)asInteger 		 title: (next at:2)		 release: (next at:3)asInteger)addGenres: (next last: 10))		 ]! !----SNAPSHOT----2016-04-30T21:37:35.763967-03:00 hito 1.image priorSource: 1865374!----SNAPSHOT----2016-04-30T21:38:10.643967-03:00 hito 1.image priorSource: 1871795!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:41' prior: 35425569!loadMoviesFrom: aPath"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				self addMovie: 		((Movie id: (next at:1)asInteger 		 title: (next at:2)		 release: (next at:3)asInteger)addGenres: (next last: 19))		 ]! !----SNAPSHOT----2016-04-30T21:41:19.129967-03:00 hito 1.image priorSource: 1871880!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:41' prior: 35386465!existsMovie: unaPeli"Devuelve true si una pelicula determinada existe en la lista de peliculas y false en caso contrario."	^(self movies includes: unaPeli)! !----SNAPSHOT----2016-04-30T21:41:47.467967-03:00 hito 1.image priorSource: 1872713!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:44' prior: 35426487!loadMoviesFrom: aPath"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next m|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				m:=	(Movie id: (next at:1)asInteger 		 title: (next at:2)		 release: (next at:3)asDateAndTime).		m addGenres: (next last: 19).		self addMovie: m.		 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:45' prior: 35427655!loadMoviesFrom: aPath"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next m|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				m:=	(Movie id: (next at:1)asInteger 		 title: (next at:2)		 release: (next at:3)).		m addGenres: (next last: 19).		self addMovie: m.		 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:46' prior: 35428420!loadMoviesFrom: aPath"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next m|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				m:=	(Movie id: (next at:1)asInteger 		 title: (next at:2)		 release: (next at:3)asDate).		m addGenres: (next last: 19).		self addMovie: m.		 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:47' prior: 35429172!loadMoviesFrom: aPath"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next m|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				m:=	(Movie id: (next at:1)asInteger 		 title: (next at:2)		 release: (next at:3)).		m addGenres: (next last: 19).		self addMovie: m.		 ]! !!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 21:49' prior: 35335318!initialize	genres:= OrderedCollection new.	ratings:= OrderedCollection new! !!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 21:53' prior: 35424192!addGenres: aGenres"Agrega generos desde una coleccion a la lista de generos de la pelicula."	((aGenres at:1)asInteger = 1) ifTrue: [ self addGenre: 'unknown' ].	((aGenres at:2)asInteger = 1) ifTrue: [ self addGenre: 'Action' ].	((aGenres at:3)asInteger = 1) ifTrue: [ self addGenre: 'Adventure' ].	((aGenres at:4)asInteger = 1) ifTrue: [ self addGenre: 'Animation' ].	((aGenres at:5)asInteger = 1) ifTrue: [ self addGenre: 'Childrens' ].	((aGenres at:6)asInteger = 1) ifTrue: [ self addGenre: 'Comedy' ].	((aGenres at:7)asInteger = 1) ifTrue: [ self addGenre: 'Crime' ].	((aGenres at:8)asInteger = 1) ifTrue: [ self addGenre: 'Documentary' ].	((aGenres at:9)asInteger = 1) ifTrue: [ self addGenre: 'Drama' ].	((aGenres at:10)asInteger = 1) ifTrue: [ self addGenre: 'Fantasy' ].	((aGenres at:11)asInteger = 1) ifTrue: [ self addGenre: 'Film­Noir' ].	((aGenres at:12)asInteger = 1) ifTrue: [ self addGenre: 'Horror' ].	((aGenres at:13)asInteger = 1) ifTrue: [ self addGenre: 'Musical' ].	((aGenres at:14)asInteger = 1) ifTrue: [ self addGenre: 'Mystery' ].	((aGenres at:15)asInteger = 1) ifTrue: [ self addGenre: 'Romance' ].	((aGenres at:16)asInteger = 1) ifTrue: [ self addGenre: 'Sci­Fi' ].	((aGenres at:17)asInteger = 1) ifTrue: [ self addGenre: 'Thriller' ].	((aGenres at:18)asInteger = 1) ifTrue: [ self addGenre: 'War' ].	((aGenres at:19)asInteger = 1) ifTrue: [ self addGenre: 'Western' ].! !----SNAPSHOT----2016-04-30T21:53:15.716967-03:00 hito 1.image priorSource: 1873048!!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 21:54' prior: 35430827!addGenres: aGenres"Agrega generos desde una coleccion a la lista de generos de la pelicula."	((aGenres at:1) = '1') ifTrue: [ self addGenre: 'unknown' ].	((aGenres at:2) = '1') ifTrue: [ self addGenre: 'Action' ].	((aGenres at:3) = '1') ifTrue: [ self addGenre: 'Adventure' ].	((aGenres at:4) = '1') ifTrue: [ self addGenre: 'Animation' ].	((aGenres at:5) = '1') ifTrue: [ self addGenre: 'Childrens' ].	((aGenres at:6) = '1') ifTrue: [ self addGenre: 'Comedy' ].	((aGenres at:7) = '1') ifTrue: [ self addGenre: 'Crime' ].	((aGenres at:8) = '1') ifTrue: [ self addGenre: 'Documentary' ].	((aGenres at:9) = '1') ifTrue: [ self addGenre: 'Drama' ].	((aGenres at:10) = '1') ifTrue: [ self addGenre: 'Fantasy' ].	((aGenres at:11) = '1') ifTrue: [ self addGenre: 'Film­Noir' ].	((aGenres at:12) = '1') ifTrue: [ self addGenre: 'Horror' ].	((aGenres at:13) = '1') ifTrue: [ self addGenre: 'Musical' ].	((aGenres at:14) = '1') ifTrue: [ self addGenre: 'Mystery' ].	((aGenres at:15) = '1') ifTrue: [ self addGenre: 'Romance' ].	((aGenres at:16) = '1') ifTrue: [ self addGenre: 'Sci­Fi' ].	((aGenres at:17) = '1') ifTrue: [ self addGenre: 'Thriller' ].	((aGenres at:18) = '1') ifTrue: [ self addGenre: 'War' ].	((aGenres at:19) = '1') ifTrue: [ self addGenre: 'Western' ].! !----SNAPSHOT----2016-04-30T21:54:56.067967-03:00 hito 1.image priorSource: 1877815!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:57' prior: 35429930!loadMoviesFrom: aPath"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next m|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				m:=	(Movie id: (next at:1)asInteger 		 title: (next at:2)		 release: (next at:3)).		m addGenres: (next last: 19).		self addMovie: m.		 ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 21:58' prior: 35433872!loadMoviesFrom: aPath"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next m|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				m:=	(Movie id: (next at:1)asInteger title: (next at:2) release: (next at:3)).		m addGenres: (next last: 19).		self addMovie: m.		 ]! !!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 22:09' prior: 35432410!addGenres: aGenres"Agrega generos desde una coleccion a la lista de generos de la pelicula."	((aGenres at:1)asInteger = 1) ifTrue: [ self addGenre: 'unknown' ].	((aGenres at:2)asInteger = 1) ifTrue: [ self addGenre: 'Action' ].	((aGenres at:3)asInteger = 1) ifTrue: [ self addGenre: 'Adventure' ].	((aGenres at:4)asInteger = 1) ifTrue: [ self addGenre: 'Animation' ].	((aGenres at:5)asInteger = 1) ifTrue: [ self addGenre: 'Childrens' ].	((aGenres at:6)asInteger = 1) ifTrue: [ self addGenre: 'Comedy' ].	((aGenres at:7)asInteger = 1) ifTrue: [ self addGenre: 'Crime' ].	((aGenres at:8)asInteger = 1) ifTrue: [ self addGenre: 'Documentary' ].	((aGenres at:9)asInteger = 1) ifTrue: [ self addGenre: 'Drama' ].	((aGenres at:10)asInteger = 1) ifTrue: [ self addGenre: 'Fantasy' ].	((aGenres at:11)asInteger = 1) ifTrue: [ self addGenre: 'Film­Noir' ].	((aGenres at:12)asInteger = 1) ifTrue: [ self addGenre: 'Horror' ].	((aGenres at:13)asInteger = 1) ifTrue: [ self addGenre: 'Musical' ].	((aGenres at:14)asInteger = 1) ifTrue: [ self addGenre: 'Mystery' ].	((aGenres at:15)asInteger = 1) ifTrue: [ self addGenre: 'Romance' ].	((aGenres at:16)asInteger = 1) ifTrue: [ self addGenre: 'Sci­Fi' ].	((aGenres at:17)asInteger = 1) ifTrue: [ self addGenre: 'Thriller' ].	((aGenres at:18)asInteger = 1) ifTrue: [ self addGenre: 'War' ].	((aGenres at:19)asInteger = 1) ifTrue: [ self addGenre: 'Western' ].! !----SNAPSHOT----2016-04-30T22:09:22.009967-03:00 hito 1.image priorSource: 1879265!!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 22:11' prior: 35435357!addGenres: aGenres"Agrega generos desde una coleccion a la lista de generos de la pelicula."	((aGenres at:1)asInteger = 1) ifTrue: [ self addGenre: 'unknown' ].	((aGenres at:2)asInteger = 1) ifTrue: [ self addGenre: 'Action' ].	((aGenres at:3)asInteger = 1) ifTrue: [ self addGenre: 'Adventure' ].	(((aGenres at:4)asInteger) = 1) ifTrue: [ self addGenre: 'Animation' ].	((aGenres at:5)asInteger = 1) ifTrue: [ self addGenre: 'Childrens' ].	((aGenres at:6)asInteger = 1) ifTrue: [ self addGenre: 'Comedy' ].	((aGenres at:7)asInteger = 1) ifTrue: [ self addGenre: 'Crime' ].	((aGenres at:8)asInteger = 1) ifTrue: [ self addGenre: 'Documentary' ].	((aGenres at:9)asInteger = 1) ifTrue: [ self addGenre: 'Drama' ].	((aGenres at:10)asInteger = 1) ifTrue: [ self addGenre: 'Fantasy' ].	((aGenres at:11)asInteger = 1) ifTrue: [ self addGenre: 'Film­Noir' ].	((aGenres at:12)asInteger = 1) ifTrue: [ self addGenre: 'Horror' ].	((aGenres at:13)asInteger = 1) ifTrue: [ self addGenre: 'Musical' ].	((aGenres at:14)asInteger = 1) ifTrue: [ self addGenre: 'Mystery' ].	((aGenres at:15)asInteger = 1) ifTrue: [ self addGenre: 'Romance' ].	((aGenres at:16)asInteger = 1) ifTrue: [ self addGenre: 'Sci­Fi' ].	((aGenres at:17)asInteger = 1) ifTrue: [ self addGenre: 'Thriller' ].	((aGenres at:18)asInteger = 1) ifTrue: [ self addGenre: 'War' ].	((aGenres at:19)asInteger = 1) ifTrue: [ self addGenre: 'Western' ].! !!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 22:16' prior: 35411605!genres	^ genres! !!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 22:16' prior: 35412153!genres: anObject	genres := anObject! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:18' prior: 35434624!loadMoviesFrom: aPath"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next |	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				self addMovie: ((Movie id: (next at:1)asInteger title: (next at:2) release: (next at:3))addGenres: (next last: 19)).		 ]! !!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 22:20' prior: 35436940!addGenres: aGenres"Agrega generos desde una coleccion a la lista de generos de la pelicula."	((aGenres at:1) = '1') ifTrue: [ self addGenre: 'unknown' ].	((aGenres at:2) = '1') ifTrue: [ self addGenre: 'Action' ].	((aGenres at:3) = '1') ifTrue: [ self addGenre: 'Adventure' ].	((aGenres at:4) = '1') ifTrue: [ self addGenre: 'Animation' ].	((aGenres at:5) = '1') ifTrue: [ self addGenre: 'Childrens' ].	((aGenres at:6) = 1) ifTrue: [ self addGenre: 'Comedy' ].	((aGenres at:7) = 1) ifTrue: [ self addGenre: 'Crime' ].	((aGenres at:8) = 1) ifTrue: [ self addGenre: 'Documentary' ].	((aGenres at:9) = 1) ifTrue: [ self addGenre: 'Drama' ].	((aGenres at:10) = 1) ifTrue: [ self addGenre: 'Fantasy' ].	((aGenres at:11) = 1) ifTrue: [ self addGenre: 'Film­Noir' ].	((aGenres at:12) = 1) ifTrue: [ self addGenre: 'Horror' ].	((aGenres at:13) = 1) ifTrue: [ self addGenre: 'Musical' ].	((aGenres at:14) = 1) ifTrue: [ self addGenre: 'Mystery' ].	((aGenres at:15) = 1) ifTrue: [ self addGenre: 'Romance' ].	((aGenres at:16) = 1) ifTrue: [ self addGenre: 'Sci­Fi' ].	((aGenres at:17) = 1) ifTrue: [ self addGenre: 'Thriller' ].	((aGenres at:18) = 1) ifTrue: [ self addGenre: 'War' ].	((aGenres at:19) = 1) ifTrue: [ self addGenre: 'Western' ].! !!Movie methodsFor: 'accessing' stamp: 'bys 4/30/2016 22:21' prior: 35439385!addGenres: aGenres"Agrega generos desde una coleccion a la lista de generos de la pelicula."	((aGenres at:1)asInteger = 1) ifTrue: [ self addGenre: 'unknown' ].	((aGenres at:2)asInteger = 1) ifTrue: [ self addGenre: 'Action' ].	((aGenres at:3)asInteger = 1) ifTrue: [ self addGenre: 'Adventure' ].	((aGenres at:4)asInteger = 1) ifTrue: [ self addGenre: 'Animation' ].	((aGenres at:5)asInteger = 1) ifTrue: [ self addGenre: 'Childrens' ].	((aGenres at:6)asInteger = 1) ifTrue: [ self addGenre: 'Comedy' ].	((aGenres at:7)asInteger = 1) ifTrue: [ self addGenre: 'Crime' ].	((aGenres at:8)asInteger = 1) ifTrue: [ self addGenre: 'Documentary' ].	((aGenres at:9)asInteger = 1) ifTrue: [ self addGenre: 'Drama' ].	((aGenres at:10)asInteger = 1) ifTrue: [ self addGenre: 'Fantasy' ].	((aGenres at:11)asInteger = 1) ifTrue: [ self addGenre: 'Film­Noir' ].	((aGenres at:12)asInteger = 1) ifTrue: [ self addGenre: 'Horror' ].	((aGenres at:13)asInteger = 1) ifTrue: [ self addGenre: 'Musical' ].	((aGenres at:14)asInteger = 1) ifTrue: [ self addGenre: 'Mystery' ].	((aGenres at:15)asInteger = 1) ifTrue: [ self addGenre: 'Romance' ].	((aGenres at:16)asInteger = 1) ifTrue: [ self addGenre: 'Sci­Fi' ].	((aGenres at:17)asInteger = 1) ifTrue: [ self addGenre: 'Thriller' ].	((aGenres at:18)asInteger = 1) ifTrue: [ self addGenre: 'War' ].	((aGenres at:19)asInteger = 1) ifTrue: [ self addGenre: 'Western' ].! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:25' prior: 35410730!rateMovie: unID value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	(self sawMovie: unID)	ifTrue: [(self findMovie: unID)rate: unValor id: (self userid)]	ifFalse: [ Transcript clear; show: 'No se puede calificar una pelicula que no se agrego como vista.' ]! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 22:26' prior: 35411123!sawMovie: unID	^(self movies includes: (Movie id: unID title: '' release: ''))	! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:26' prior: 35399981!testCalificarPelicula	user1 movies add: movie1.	user1 rateMovie: (movie1 movieid) value: 5.	self assert: ((user1 findMovie: movie1 movieid)rating = 5)			! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:27' prior: 35395120!findMovie: unID"Retorna una pelicula determinada si es que existe en la lista de peliculas."	^(self movies detect: [ :p1 | p1 movieid = unID ]	 ifNone: [ Transcript clear; show: 'Esa pelicula no existe'. ^nil ]	)! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:30' prior: 35442229!rateMovie: unID value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	(self sawMovie: unID)	ifFalse: [ (self moovies findMovie: unID)				]	ifTrue: [ Transcript clear; show: 'El usuario ya califico esta pelicula.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:31' prior: 35421696!loadRatingsFrom: aPath"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(self findUser: (next at:1)asInteger)		 ]! !!Movie methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:32' prior: 35389129!rate: unRate id: unID"Califica una pelicula con un valor entre 1 y 5 inclusive."	(unRate rating >= 1) & (unRate rating <= 5)	ifTrue: [self ratings add: unRate]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]! !!Movie methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:32'!rate: unRate"Califica una pelicula con un valor entre 1 y 5 inclusive."	(unRate rating >= 1) & (unRate rating <= 5)	ifTrue: [self ratings add: unRate]	ifFalse: [ Transcript clear; show: 'Puntaje incorrecto. Intente otra vez con un valor de 1 al 5.'; cr ]! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:33' prior: 35443334!rateMovie: unID value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	(self sawMovie: unID)	ifFalse: [ (self moovies findMovie: unID)rate: (Rating new: unValor tstamp: (DateAndTime today)asUnixTime id: self userid)				]	ifTrue: [ Transcript clear; show: 'El usuario ya califico esta pelicula.' ]! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:33' prior: 35442779!testCalificarPelicula	user1 rateMovie: (movie1 movieid) value: 5.	self assert: ((user1 findMovie: movie1 movieid)rating = 5)			! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:33' prior: 35445256!testCalificarPelicula	user1 rateMovie: (movie1 movieid) value: 5.	self assert: ((user1 findMovie: (movie1 movieid))rating = 5)			! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:34' prior: 35445485!testCalificarPelicula	user1 rateMovie: (movie1 movieid) value: 5.	self assert: ((user1 findMovie: (movie1 movieid))rating = 5)! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:34' prior: 35414486!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' age: 12 gender: 'H' ocuppation: 'hago changas' zipCode: 1900 id: 1.	user2:= User fname: 'Moni' lname: 'Argenti' age: 15 gender: 'M' ocuppation: 'se la rask' zipCode: 1900 id: 2.	user3:= User fname: 'Coki' lname: 'Argenti' age: 18 gender: 'H' ocuppation: 'manopla' zipCode: 1900 id: 3.	user1 moovies: moovies .	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	! !Object subclass: #User	instanceVariableNames: 'moovies userid fname lname age gender occupation zipCode friends movies'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 22:35'!moovies	^ moovies! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 22:35'!moovies: anObject	moovies := anObject! !User removeSelector: #bornDate!User removeSelector: #bornDate:!----SNAPSHOT----2016-04-30T22:35:27.310967-03:00 hito 1.image priorSource: 1882345!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:35' prior: 35445716!testCalificarPelicula	user1 rateMovie: (movie1 movieid) value: 5.	self assert: ((moovies findMovie: (movie1 movieid))rating = 5)! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:36' prior: 35445941!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' age: 12 gender: 'H' ocuppation: 'hago changas' zipCode: 1900 id: 1.	user2:= User fname: 'Moni' lname: 'Argenti' age: 15 gender: 'M' ocuppation: 'se la rask' zipCode: 1900 id: 2.	user3:= User fname: 'Coki' lname: 'Argenti' age: 18 gender: 'H' ocuppation: 'manopla' zipCode: 1900 id: 3.	user1 moovies: moovies .	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	moovies movies add: movie1.		! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:37' prior: 35396698!findMovie: unID"Retorna una pelicula determinada si es que existe en la lista de peliculas."	^(self movies detect: [ :p1 | p1 movieid = unID]	 ifNone: [ Transcript clear; show: 'Esa pelicula no existe'. ^nil ]	)! !----SNAPSHOT----2016-04-30T22:37:37.428967-03:00 hito 1.image priorSource: 1892475!!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:39' prior: 35444829!rateMovie: unID value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	|movie|	(self sawMovie: unID)	ifFalse: [ movie:= self moovies findMovie: unID.		movie rate: (Rating new: unValor tstamp: (DateAndTime today)asUnixTime id: self userid).		self addMovie: movie.			]	ifTrue: [ Transcript clear; show: 'El usuario ya califico esta pelicula.' ]! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:40' prior: 35447086!testCalificarPelicula	user1 rateMovie: (movie1 movieid) value: 5.	self assert: ((user1 findMovie: (movie1 movieid))rating = 5)! !----SNAPSHOT----2016-04-30T22:40:11.572967-03:00 hito 1.image priorSource: 1893743!Movie removeSelector: #rate:id:!!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:42'!rateMovie: unID value: unValor tstamp: aDate"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	|movie|	(self sawMovie: unID)	ifFalse: [ movie:= self moovies findMovie: unID.		movie rate: (Rating new: unValor tstamp: aDate id: self userid).		self addMovie: movie.			]	ifTrue: [ Transcript clear; show: 'El usuario ya califico esta pelicula.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:44' prior: 35443677!loadRatingsFrom: aPath"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				((self findUser: (next at:1)asInteger))		rateMovie: (next at:3)asInteger		value:  (next at:4)asInteger		tstamp: (next at:2)		 ]! !!User class methodsFor: 'constructor' stamp: 'bys 4/30/2016 22:46'!fname: unNombre lname: unApellido age: unaFecha gender: aGender ocuppation: unaOcupacion zipCode: unCodigo id: anID app: aMoovies	^self new	fname: unNombre;	lname: unApellido;	gender: aGender;	age: unaFecha;	occupation: unaOcupacion;	userid: anID;	zipCode: unCodigo;	moovies: aMoovies.! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:47' prior: 35420217!loadUsersFrom: aPath"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		self addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 gender: (next at:3)		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 id: (next at:1)asInteger		 app: self)		 ]! !----SNAPSHOT----2016-04-30T22:48:09.332967-03:00 hito 1.image priorSource: 1894522!----SNAPSHOT----2016-04-30T22:48:46.349967-03:00 hito 1.image priorSource: 1896613!!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 22:50' prior: 35442601!sawMovie: unID	^(self movies includes: (self moovies findMovie: unID))	! !!User methodsFor: 'as yet unclassified' stamp: 'bys 4/30/2016 22:51' prior: 35449144!rateMovie: unID value: unValor tstamp: aDate"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	|movie|	movie:= movie:= self moovies findMovie: unID.	(self sawMovie: movie)	ifFalse: [movie rate: (Rating new: unValor tstamp: aDate id: self userid).		self addMovie: movie.			]	ifTrue: [ Transcript clear; show: 'El usuario ya califico esta pelicula.' ]! !!User methodsFor: 'accessing' stamp: 'bys 4/30/2016 22:51' prior: 35451292!sawMovie: aMovie	^(self movies includes: aMovie)	! !----SNAPSHOT----2016-04-30T22:52:41.249967-03:00 hito 1.image priorSource: 1896698!----SNAPSHOT----2016-04-30T22:52:57.463967-03:00 hito 1.image priorSource: 1897533!----SNAPSHOT----2016-04-30T22:53:00.137967-03:00 hito 1.image priorSource: 1897618!----SNAPSHOT----2016-04-30T22:53:09.653967-03:00 hito 1.image priorSource: 1897703!----SNAPSHOT----2016-04-30T22:53:20.158967-03:00 hito 1.image priorSource: 1897788!----STARTUP----2016-05-01T10:47:44.532369-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/1/2016 11:28' prior: 35385464!activeUsers"Devuelve una coleccion con los 10 usuarios mas activos del sistema."	^(self users asSortedCollection: [ :u1 :u2 | u1 movies size > u2 movies size ])first: 10! !!User methodsFor: 'accessing' stamp: 'bys 5/1/2016 11:43' prior: 35406790!favouriteGenre	"Retorna el genero favorito del usuario."	|bag|	bag:= Bag new.	self movies do: [ :m |		m genres do: [ :g | bag add: g ]		 ].	^(bag sortedCounts)first value! !----SNAPSHOT----2016-05-01T11:43:58.413369-03:00 hito 1.image priorSource: 1897873!----SNAPSHOT----2016-05-01T11:45:25.591369-03:00 hito 1.image priorSource: 1937771!----SNAPSHOT----2016-05-01T11:45:43.649369-03:00 hito 1.image priorSource: 1937856!----SNAPSHOT----2016-05-01T11:45:49.094369-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 1937941!----SNAPSHOT----2016-05-01T12:54:20.285369-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 1938026!----STARTUP----2016-05-03T10:11:34.633424-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\OO II 2016 - Promocion - Hito 1.image!----SNAPSHOT----2016-05-03T10:13:52.682424-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 1938136!Object subclass: #Uploader	instanceVariableNames: ''	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!Object subclass: #Moovies	instanceVariableNames: 'users movies loader'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!Moovies methodsFor: 'accessing' stamp: 'bys 5/3/2016 10:17'!loader	^ loader! !!Moovies methodsFor: 'accessing' stamp: 'bys 5/3/2016 10:17'!loader: anObject	loader := anObject! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 10:17' prior: 35278787!initialize	users:= OrderedCollection new.	movies:= OrderedCollection new.	loader:= Uploader new.! !!Uploader methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 10:18'!loadFSsFrom: aPath to: moovies"Carga relaciones de amistad desde un archivo externo que debe cumplir con el siguiente formato:										userid|friendid"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		(self findUser: (next at:1)asInteger)addFriend: (self findUser: (next at:2)asInteger)		 ]! !!Uploader methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 10:19' prior: 35493643!loadFSsFrom: aPath to: moovies"Carga relaciones de amistad desde un archivo externo que debe cumplir con el siguiente formato:										userid|friendid"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		(moovies findUser: (next at:1)asInteger)addFriend: (moovies findUser: (next at:2)asInteger)		 ]! !!Uploader methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 10:20'!loadMoviesFrom: aPath to: moovies"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next |	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				self addMovie: ((Movie id: (next at:1)asInteger title: (next at:2) release: (next at:3))addGenres: (next last: 19)).		 ]! !!Uploader methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 10:20' prior: 35494567!loadMoviesFrom: aPath to: moovies"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next |	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				moovies addMovie: ((Movie id: (next at:1)asInteger title: (next at:2) release: (next at:3))addGenres: (next last: 19)).		 ]! !!Uploader methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 10:21'!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				((self findUser: (next at:1)asInteger))		rateMovie: (next at:3)asInteger		value:  (next at:4)asInteger		tstamp: (next at:2)		 ]! !!Uploader methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 10:21' prior: 35496040!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				((moovies findUser: (next at:1)asInteger))		rateMovie: (next at:3)asInteger		value:  (next at:4)asInteger		tstamp: (next at:2)		 ]! !!Uploader methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 10:24'!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		moovies addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 gender: (next at:3)		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 id: (next at:1)asInteger		 app: moovies)		 ]! !----SNAPSHOT----2016-05-03T10:25:00.282424-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 1938384!----SNAPSHOT----2016-05-03T10:26:02.023424-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 1943263!----SNAPSHOT----2016-05-03T10:26:23.168424-03:00 Pharo4.0.image priorSource: 1943373!!Uploader commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State the name of the class with one line description: For example, I'm xxx the root of the hierarchy of visitor objects.For the Responsibility part: Three sentences about my main responsibility, what I'm doing, what services do I offer.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - what is the way to create instances is a plus.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!----SNAPSHOT----2016-05-03T10:28:36.916424-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 1943483!----STARTUP----2016-05-03T18:25:24.294805-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\OO II 2016 - Promocion - Hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!User class removeSelector: #fname:lname:age:gender:ocuppation:zipCode:id:!!User class methodsFor: 'constructor' stamp: 'bys 5/3/2016 18:31'!fname: unNombre lname: unApellido age: unaFecha ocuppation: unaOcupacion zipCode: unCodigo app: aMoovies	^self new	fname: unNombre;	lname: unApellido;	age: unaFecha;	occupation: unaOcupacion;	zipCode: unCodigo;	moovies: aMoovies.! !User class removeSelector: #fname:lname:age:gender:ocuppation:zipCode:id:app:!!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 18:32' prior: 35447313!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' age: 12 ocuppation: 'hago changas' zipCode: 1900.	user2:= User fname: 'Moni' lname: 'Argenti' age: 15 ocuppation: 'se la rask' zipCode: 1900.	user3:= User fname: 'Coki' lname: 'Argenti' age: 18 ocuppation: 'manopla' zipCode: 1900.	user1 moovies: moovies .	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	moovies movies add: movie1.		! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 18:33' prior: 35538748!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' age: 12 ocuppation: 'hago changas' zipCode: 1900 app: moovies.	user2:= User fname: 'Moni' lname: 'Argenti' age: 15 ocuppation: 'se la rask' zipCode: 1900 app: moovies.	user3:= User fname: 'Coki' lname: 'Argenti' age: 18 ocuppation: 'manopla' zipCode: 1900 app: moovies.	user1 moovies: moovies .	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	moovies movies add: movie1.		! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 18:33' prior: 35539341!setUp	moovies:= Moovies new.	user1:= User fname: 'Pepe' lname: 'Argento' age: 12 ocuppation: 'hago changas' zipCode: 1900 app: moovies.	user2:= User fname: 'Moni' lname: 'Argenti' age: 15 ocuppation: 'se la rask' zipCode: 1900 app: moovies.	user3:= User fname: 'Coki' lname: 'Argenti' age: 18 ocuppation: 'manopla' zipCode: 1900 app: moovies.	movie1:= Movie id: 1 title: 'El regreso de la wea' release: 2015.	movie2:= Movie id: 2 title: 'Tsunami boliviano' release: 2014.	moovies movies add: movie1.		! !!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:34' prior: 35287701!= otroUser	^(otroUser fname = self fname) &	(otroUser lname = self lname) ! !User removeSelector: #gender!User removeSelector: #gender:!!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:35' prior: 35540562!= otroUser	^(otroUser fname = self fname) &	(otroUser lname = self lname) &	(otroUser age = self age) &	(otroUser)! !User removeSelector: #userid!User removeSelector: #userid:!!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:36' prior: 35540780!= otroUser	^(otroUser fname = self fname) &	(otroUser lname = self lname) &	(otroUser age = self age) &	(otroUser occupation = self occupation ) &	(otroUser zipCode = self zipCode )! !----SNAPSHOT----2016-05-03T18:37:22.146805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 1944331!!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:38' prior: 35541040!= otroUser"Metodo para comprobar que un usuario es igual a otro, retornando true o false correspondientemente."	^(otroUser fname = self fname) &	(otroUser lname = self lname) &	(otroUser age = self age) &	(otroUser occupation = self occupation ) &	(otroUser zipCode = self zipCode )! !!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:38' prior: 35403320!addFriend: anUser	(self isFriend: anUser)	ifFalse: [ anUser friends add: self .		self friends add: (anUser).		Transcript cr; show: self fname; show: ' y '; show: anUser fname; show: ' ahora son amigos.' 		]	ifTrue: [ self error: 'No podes agregarlo porque ya son amigos.' ]! !----SNAPSHOT----2016-05-03T18:39:41.854805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 1986797!!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:40' prior: 35394575!addMovie: unaPeli"Agrega una pelicula a la lista de peliculas vistas por el usuario."	(self sawMovie: unaPeli)	ifFalse: [ self movies add: unaPeli.		Transcript cr; show: 'La pelicula fue añadida correctamente.'		 ]	ifTrue: [ self error: 'Esa pelicula ya la vio, no puedes agregarla.' ]! !!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:40' prior: 35542250!addMovie: unaPeli"Agrega una pelicula a la lista de peliculas vistas por el usuario."	(self sawMovie: unaPeli)	ifFalse: [ self movies add: unaPeli]	ifTrue: [ self error: 'Esa pelicula ya la vio, no puedes agregarla.' ]! !!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:41' prior: 35408980!deleteFriend: anUser"Elimina un usuario de la lista de amigos."	(self isFriend: anUser)	ifTrue: [ anUser friends remove: self.		self friends remove: anUser.		Transcript cr; show: self fname; show: ' y '; show: anUser fname; show: ' ya no son amigos.' 		]	ifFalse: [ Transcript cr; show: 'No podes borrarlo porque no son ameos.' ]! !!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:41' prior: 35542922!deleteFriend: anUser"Elimina un usuario de la lista de amigos."	(self isFriend: anUser)	ifTrue: [ anUser friends remove: self.		self friends remove: anUser.		Transcript cr; show: self fname; show: ' y '; show: anUser fname; show: ' ya no son amigos.' 		]	ifFalse: [ self error: 'No podes borrarlo porque no son ameos.' ]! !!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:41' prior: 35397648!isFriend: anUser"Comprueba si un usuario esta en la lista de ameos"	^(self friends includes: anUser)! !!User methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 18:42' prior: 35448347!rateMovie: unID value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	|movie|	(self sawMovie: unID)	ifFalse: [ movie:= self moovies findMovie: unID.		movie rate: (Rating new: unValor tstamp: (DateAndTime today)asUnixTime id: self userid).		self addMovie: movie.			]	ifTrue: [ self error: 'El usuario ya califico esta pelicula.' ]! !Object subclass: #Rating	instanceVariableNames: 'rating userid'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!Rating removeSelector: #timestamp!Rating removeSelector: #timestamp:!!Rating class methodsFor: 'constructor' stamp: 'bys 5/3/2016 18:48'!new: unValor by: anUser	^self new	rating: unValor;	user: anUser! !!User methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 18:48' prior: 35543934!rateMovie: unID value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	|movie|	(self sawMovie: unID)	ifFalse: [ movie:= self moovies findMovie: unID.		movie rate: (Rating new: unValor by: self).		self addMovie: movie.			]	ifTrue: [ self error: 'El usuario ya califico esta pelicula.' ]! !Rating class removeSelector: #new:tstamp:id:!User removeSelector: #rateMovie:value:tstamp:!Moovies removeSelector: #loadUsersFrom:!Moovies removeSelector: #loadRatingsFrom:!Moovies removeSelector: #loadMoviesFrom:!Moovies removeSelector: #loadFSsFrom:!(Smalltalk globals at: #Uploader) rename: #Load!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 18:55' prior: 35493467!initialize	users:= OrderedCollection new.	movies:= OrderedCollection new.	loader:= Load new.! !!Rating methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:57' prior: 35392097!userid	^ user! !!Rating methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:57' prior: 35392212!userid: anObject	user := anObject! !!Rating methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:57' prior: 35545642!userid	^ user! !!Rating methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:57' prior: 35545737!userid: anObject	user := anObject! !!Rating methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:57'!user	^ user! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 18:57' prior: 35419264!findUser: unID"Retorna un usuario determinado si es que existe en la lista de usuarios."	^(self users detect: [ :u1 | u1 user = unID ]	 ifNone: [ Transcript clear; show: 'Ese usuario no existe'. ^nil ]	)! !Rating removeSelector: #userid!!Rating methodsFor: 'accessing' stamp: 'bys 5/3/2016 18:57'!user: anObject	user := anObject! !Rating removeSelector: #userid:!----SNAPSHOT----2016-05-03T18:57:37.843805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 1987632!Object subclass: #User	instanceVariableNames: 'moovies fname lname age gender occupation zipCode friends movies'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:05' prior: 35447957!findMovie: unID"Retorna una pelicula determinada si es que existe en la lista de peliculas."	^(self movies detect: [ :p1 | p1 movieid = unID]	 ifNone: [ self error: 'Esa pelicula no existe'. ^nil ]	)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:05' prior: 35546150!findUser: unID"Retorna un usuario determinado si es que existe en la lista de usuarios."	^(self users detect: [ :u1 | u1 user = unID ]	 ifNone: [ self error: 'Ese usuario no existe'. ^nil ]	)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:09' prior: 35547203!findUser: aUser"Retorna un usuario determinado si es que existe en la lista de usuarios."	^(self users detect: [ :u1 | u1 = aUser]	 ifNone: [ self error: 'Ese usuario no existe'. ^nil ]	)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:09' prior: 35384830!deleteMovie: unaPeli"Elimina una pelicula existente de la lista de peliculas"	(self existsMovie: unaPeli)	ifTrue: [ self movies remove: unaPeli 		ifAbsent: [ self error: 'La pelicula se eliminó correctamente.' ]		]			! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:09' prior: 35405861!friendsOf: anUser"Devuelve una coleccion de amigos de un usuario determinado."	(self existsUser: anUser)	ifTrue: [ ^(anUser friends) ]	ifFalse: [ self error: 'Ese usuario no existe.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:10' prior: 35384450!addMovie: unaPeli"Agrega una pelicula nueva a la lista de peliculas"	(self existsMovie: unaPeli)	ifFalse: [ self movies add: unaPeli]	ifTrue: [ Transcript cr; show: 'Esa pelicula ya existe, no puedes agregarla.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:10' prior: 35548370!addMovie: aMovie"Agrega una pelicula nueva a la lista de peliculas"	(self existsMovie: aMovie)	ifFalse: [ self movies add: aMovie]	ifTrue: [ self error: 'Esa pelicula ya existe, no puedes agregarla.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:11' prior: 35404328!addUser: aUser"Agrega un usuario nuevo a la lista de usuarios"	(self existsUser: aUser)	ifFalse: [ self users add: aUser]	ifTrue: [ self error: 'Ese usuario ya existe, no puedes agregarlo.' ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:11' prior: 35405083!areFriends: aUser and: otherUser"Devuelve true o false dependiendo si son o no amigos ambos usuarios."	(self existsUser: aUser)	ifTrue: [ ^(aUser isFriend: otherUser) ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:11' prior: 35547773!deleteMovie: aMovie"Elimina una pelicula existente de la lista de peliculas"	(self existsMovie: aMovie)	ifTrue: [ self movies remove: aMovie 		ifAbsent: [ self error: 'La pelicula se eliminó correctamente.' ]		]			! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:12' prior: 35549526!deleteMovie: aMovie"Elimina una pelicula existente de la lista de peliculas"	self movies remove: aMovie	ifAbsent: [ self error: 'La pelicula que quiere eliminar no existe.' ]					! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:14' prior: 35406439!ratingOf: aMovie"Devuelve el puntaje promedio de una pelicula determinada."	(self existsMovie: aMovie)	ifTrue: [ ^(aMovie rating) ]	ifFalse: [ self error: 'Esa pelicula no existe.' ]! !!Movie methodsFor: 'accessing' stamp: 'bys 5/3/2016 19:18' prior: 35411701!deleteGenre: unGenero"Agrega un genero a la lista de generos de la pelicula."	self genres remove: unGenero ifAbsent: [ 		self error: 'Ese genero no existe.'		 ]! !!Movie methodsFor: 'accessing' stamp: 'bys 5/3/2016 19:18' prior: 35550383!deleteGenre: unGenero"Agrega un genero a la lista de generos de la pelicula."	self genres remove: unGenero ifAbsent: [ self error: 'Ese genero no existe.' ]! !!Movie methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:18' prior: 35277622!rating"Retorna un promedio de la puntuacion total de la pelicula."	^(self ratings inject:0 into: [ :suma :r1 |  suma + r1 rating ]) / self ratings size! !!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 19:19' prior: 35541782!addFriend: anUser"Agrega un usuario a la lista de amigos."	(self isFriend: anUser)	ifFalse: [ anUser friends add: self .		self friends add: (anUser).		Transcript cr; show: self fname; show: ' y '; show: anUser fname; show: ' ahora son amigos.' 		]	ifTrue: [ self error: 'No podes agregarlo porque ya son amigos.' ]! !!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 19:19' prior: 35542621!addMovie: unaPeli"Agrega una pelicula a la lista de peliculas vistas por el usuario."	(self sawMovie: unaPeli)	ifFalse: [ self movies add: unaPeli]	ifTrue: [ self error: 'Esa pelicula ya la vio, no podes agregarla.' ]! !!User methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:20' prior: 35443028!findMovie: unID"Retorna una pelicula determinada si es que existe en la lista de peliculas calificadas."	^(self movies detect: [ :p1 | p1 movieid = unID ]	 ifNone: [ Transcript clear; show: 'Esa pelicula no existe'. ^nil ]	)! !!User methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:20' prior: 35551817!findMovie: unID"Retorna una pelicula determinada si es que existe en la lista de peliculas calificadas."	^(self movies detect: [ :p1 | p1 movieid = unID ]	 ifNone: [ self error: 'Esa pelicula no ha sido calificada por el usuario.'. ^nil ]	)! !!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 19:22' prior: 35451911!sawMovie: aMovie"Comprueba si el usuario vio la pelicula y retorna true o false"	^(self movies includes: aMovie)	! !!User methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:24' prior: 35544738!rateMovie: aMovie value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	|movie|	(self sawMovie: aMovie)	ifFalse: [ movie:= self moovies findMovie: (aMovie movieid) .		movie rate: (Rating new: unValor by: self).		self addMovie: movie.			]	ifTrue: [ self error: 'El usuario ya califico esta pelicula.' ]! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:25' prior: 35448823!testCalificarPelicula	user1 rateMovie: movie1 value: 5.	self assert: ((user1 findMovie: (movie1 movieid))rating = 5)! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:27'!refGenres: algo| aGenres |aGenres:= Collection new.((aGenres at:1)asInteger = 1) ifTrue: [ self addGenre: 'unknown' ].	((aGenres at:2)asInteger = 1) ifTrue: [ self addGenre: 'Action' ].	((aGenres at:3)asInteger = 1) ifTrue: [ self addGenre: 'Adventure' ].	((aGenres at:4)asInteger = 1) ifTrue: [ self addGenre: 'Animation' ].	((aGenres at:5)asInteger = 1) ifTrue: [ self addGenre: 'Childrens' ].	((aGenres at:6)asInteger = 1) ifTrue: [ self addGenre: 'Comedy' ].	((aGenres at:7)asInteger = 1) ifTrue: [ self addGenre: 'Crime' ].	((aGenres at:8)asInteger = 1) ifTrue: [ self addGenre: 'Documentary' ].	((aGenres at:9)asInteger = 1) ifTrue: [ self addGenre: 'Drama' ].	((aGenres at:10)asInteger = 1) ifTrue: [ self addGenre: 'Fantasy' ].	((aGenres at:11)asInteger = 1) ifTrue: [ self addGenre: 'Film­Noir' ].	((aGenres at:12)asInteger = 1) ifTrue: [ self addGenre: 'Horror' ].	((aGenres at:13)asInteger = 1) ifTrue: [ self addGenre: 'Musical' ].	((aGenres at:14)asInteger = 1) ifTrue: [ self addGenre: 'Mystery' ].	((aGenres at:15)asInteger = 1) ifTrue: [ self addGenre: 'Romance' ].	((aGenres at:16)asInteger = 1) ifTrue: [ self addGenre: 'Sci­Fi' ].	((aGenres at:17)asInteger = 1) ifTrue: [ self addGenre: 'Thriller' ].	((aGenres at:18)asInteger = 1) ifTrue: [ self addGenre: 'War' ].	((aGenres at:19)asInteger = 1) ifTrue: [ self addGenre: 'Western' ].! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:28' prior: 35495310!loadMoviesFrom: aPath to: moovies"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next |	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				moovies addMovie: ((Movie id: (next at:1)asInteger title: (next at:2) release: (next at:3))addGenres: (self refGenres: (next last: 19))).		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:29' prior: 35553288!refGenres: algo"El loader se encargara de detectar los generos que se deben agregar."| aGenres |aGenres:= Collection new.((aGenres at:1)asInteger = 1) ifTrue: [ self addGenre: 'unknown' ].	((aGenres at:2)asInteger = 1) ifTrue: [ self addGenre: 'Action' ].	((aGenres at:3)asInteger = 1) ifTrue: [ self addGenre: 'Adventure' ].	((aGenres at:4)asInteger = 1) ifTrue: [ self addGenre: 'Animation' ].	((aGenres at:5)asInteger = 1) ifTrue: [ self addGenre: 'Childrens' ].	((aGenres at:6)asInteger = 1) ifTrue: [ self addGenre: 'Comedy' ].	((aGenres at:7)asInteger = 1) ifTrue: [ self addGenre: 'Crime' ].	((aGenres at:8)asInteger = 1) ifTrue: [ self addGenre: 'Documentary' ].	((aGenres at:9)asInteger = 1) ifTrue: [ self addGenre: 'Drama' ].	((aGenres at:10)asInteger = 1) ifTrue: [ self addGenre: 'Fantasy' ].	((aGenres at:11)asInteger = 1) ifTrue: [ self addGenre: 'Film­Noir' ].	((aGenres at:12)asInteger = 1) ifTrue: [ self addGenre: 'Horror' ].	((aGenres at:13)asInteger = 1) ifTrue: [ self addGenre: 'Musical' ].	((aGenres at:14)asInteger = 1) ifTrue: [ self addGenre: 'Mystery' ].	((aGenres at:15)asInteger = 1) ifTrue: [ self addGenre: 'Romance' ].	((aGenres at:16)asInteger = 1) ifTrue: [ self addGenre: 'Sci­Fi' ].	((aGenres at:17)asInteger = 1) ifTrue: [ self addGenre: 'Thriller' ].	((aGenres at:18)asInteger = 1) ifTrue: [ self addGenre: 'War' ].	((aGenres at:19)asInteger = 1) ifTrue: [ self addGenre: 'Western' ].! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:29' prior: 35555514!refGenres: algo"El loader se encargara de detectar los generos que se deben agregar."| aGenres |aGenres:= OrderedCollection new.((aGenres at:1)asInteger = 1) ifTrue: [ self addGenre: 'unknown' ].	((aGenres at:2)asInteger = 1) ifTrue: [ self addGenre: 'Action' ].	((aGenres at:3)asInteger = 1) ifTrue: [ self addGenre: 'Adventure' ].	((aGenres at:4)asInteger = 1) ifTrue: [ self addGenre: 'Animation' ].	((aGenres at:5)asInteger = 1) ifTrue: [ self addGenre: 'Childrens' ].	((aGenres at:6)asInteger = 1) ifTrue: [ self addGenre: 'Comedy' ].	((aGenres at:7)asInteger = 1) ifTrue: [ self addGenre: 'Crime' ].	((aGenres at:8)asInteger = 1) ifTrue: [ self addGenre: 'Documentary' ].	((aGenres at:9)asInteger = 1) ifTrue: [ self addGenre: 'Drama' ].	((aGenres at:10)asInteger = 1) ifTrue: [ self addGenre: 'Fantasy' ].	((aGenres at:11)asInteger = 1) ifTrue: [ self addGenre: 'Film­Noir' ].	((aGenres at:12)asInteger = 1) ifTrue: [ self addGenre: 'Horror' ].	((aGenres at:13)asInteger = 1) ifTrue: [ self addGenre: 'Musical' ].	((aGenres at:14)asInteger = 1) ifTrue: [ self addGenre: 'Mystery' ].	((aGenres at:15)asInteger = 1) ifTrue: [ self addGenre: 'Romance' ].	((aGenres at:16)asInteger = 1) ifTrue: [ self addGenre: 'Sci­Fi' ].	((aGenres at:17)asInteger = 1) ifTrue: [ self addGenre: 'Thriller' ].	((aGenres at:18)asInteger = 1) ifTrue: [ self addGenre: 'War' ].	((aGenres at:19)asInteger = 1) ifTrue: [ self addGenre: 'Western' ].! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:32' prior: 35557051!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres |aGenres:= OrderedCollection new.((genresCollection at:1)asInteger = 1) ifTrue: [ aGenres add: 'unknown' ].	((genresCollection at:2)asInteger = 1) ifTrue: [ aGenres add: 'Action' ].	((genresCollection at:3)asInteger = 1) ifTrue: [ aGenres add: 'Adventure' ].	((genresCollection at:4)asInteger = 1) ifTrue: [ aGenres add: 'Animation' ].	((genresCollection at:5)asInteger = 1) ifTrue: [ aGenres add: 'Childrens' ].	((genresCollection at:6)asInteger = 1) ifTrue: [ aGenres add: 'Comedy' ].	((genresCollection at:7)asInteger = 1) ifTrue: [ aGenres add: 'Crime' ].	((genresCollection at:8)asInteger = 1) ifTrue: [ aGenres add: 'Documentary' ].	((genresCollection at:9)asInteger = 1) ifTrue: [ aGenres add: 'Drama' ].	((genresCollection at:10)asInteger = 1) ifTrue: [ aGenres add: 'Fantasy' ].	((genresCollection at:11)asInteger = 1) ifTrue: [ aGenres add: 'Film­Noir' ].	((genresCollection at:12)asInteger = 1) ifTrue: [ aGenres add: 'Horror' ].	((genresCollection at:13)asInteger = 1) ifTrue: [ aGenres add: 'Musical' ].	((genresCollection at:14)asInteger = 1) ifTrue: [ aGenres add: 'Mystery' ].	((genresCollection at:15)asInteger = 1) ifTrue: [ aGenres add: 'Romance' ].	((genresCollection at:16)asInteger = 1) ifTrue: [ aGenres add: 'Sci­Fi' ].	((genresCollection at:17)asInteger = 1) ifTrue: [ aGenres add: 'Thriller' ].	((genresCollection at:18)asInteger = 1) ifTrue: [ aGenres add: 'War' ].	((genresCollection at:19)asInteger = 1) ifTrue: [ aGenres add: 'Western' ].! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:32' prior: 35558594!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres |aGenres:= OrderedCollection new.((genresCollection at:1)asInteger = 1) ifTrue: [ aGenres add: 'unknown' ].	((genresCollection at:2)asInteger = 1) ifTrue: [ aGenres add: 'Action' ].	((genresCollection at:3)asInteger = 1) ifTrue: [ aGenres add: 'Adventure' ].	((genresCollection at:4)asInteger = 1) ifTrue: [ aGenres add: 'Animation' ].	((genresCollection at:5)asInteger = 1) ifTrue: [ aGenres add: 'Childrens' ].	((genresCollection at:6)asInteger = 1) ifTrue: [ aGenres add: 'Comedy' ].	((genresCollection at:7)asInteger = 1) ifTrue: [ aGenres add: 'Crime' ].	((genresCollection at:8)asInteger = 1) ifTrue: [ aGenres add: 'Documentary' ].	((genresCollection at:9)asInteger = 1) ifTrue: [ aGenres add: 'Drama' ].	((genresCollection at:10)asInteger = 1) ifTrue: [ aGenres add: 'Fantasy' ].	((genresCollection at:11)asInteger = 1) ifTrue: [ aGenres add: 'Film­Noir' ].	((genresCollection at:12)asInteger = 1) ifTrue: [ aGenres add: 'Horror' ].	((genresCollection at:13)asInteger = 1) ifTrue: [ aGenres add: 'Musical' ].	((genresCollection at:14)asInteger = 1) ifTrue: [ aGenres add: 'Mystery' ].	((genresCollection at:15)asInteger = 1) ifTrue: [ aGenres add: 'Romance' ].	((genresCollection at:16)asInteger = 1) ifTrue: [ aGenres add: 'Sci­Fi' ].	((genresCollection at:17)asInteger = 1) ifTrue: [ aGenres add: 'Thriller' ].	((genresCollection at:18)asInteger = 1) ifTrue: [ aGenres add: 'War' ].	((genresCollection at:19)asInteger = 1) ifTrue: [ aGenres add: 'Western' ].	^aGenres! !----SNAPSHOT----2016-05-03T19:32:24.128805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 1992092!----SNAPSHOT----2016-05-03T19:32:44.819805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2007462!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:33' prior: 35494110!loadFSsFrom: aPath to: moovies"Carga relaciones de amistad desde un archivo externo que debe cumplir con el siguiente formato:										userid|friendid"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		(moovies findUser: (next at:1)asInteger)		addFriend: (moovies findUser: (next at:2)asInteger)		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:34' prior: 35497157!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		moovies addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies)		 ]! !Object subclass: #Load	instanceVariableNames: 'aux'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 19:37'!aux	^ aux! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 19:37'!aux: anObject	aux := anObject! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:38'!addUsers: aUserCollection"Agrega un usuario nuevo a la lista de usuarios"	aUserCollection do: [  ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:39' prior: 35563522!addUsers: aUserCollection"Agrega usuarios desde una coleccion a la lista de usuarios"	aUserCollection do: [  ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:41' prior: 35563714!addUsers: aUserCollection"Agrega usuarios desde una coleccion a la lista de usuarios"	aUserCollection do: [ :u | self addUser: u ]! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:42'!addMovies: aMovieCollection"Agrega peliculas desde una coleccion a la lista de peliculas"	aMovieCollection do: [ :m | self addMovie: m ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:44'!loadUsers: aPath to:moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next aux2|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		aux2 add: ( User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies)		 ].	^aux! !Object subclass: #Load	instanceVariableNames: ''	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!Load removeSelector: #aux:!Load removeSelector: #aux!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 19:46'!refUsers: aPath to:moovies"Carga usuarios desde un archivo externo y los agrega a una coleccion que retornará. El archivo externo debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next aux|	file:= aPath asFileReference readStream.	aux:= OrderedCollection new.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		aux add: ( User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies)		 ].	^aux! !Load removeSelector: #loadUsers:to:!Object subclass: #Load	instanceVariableNames: 'aux'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!----SNAPSHOT----2016-05-03T20:22:29.575805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2007572!----SNAPSHOT----2016-05-03T20:23:48.415805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2011378!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:26'!findUser: aUser"Retorna un usuario determinado si es que existe en la lista de usuarios."	^(self aux detect: [ :u1 | u1 = aUser]	 ifNone: [ self error: 'Ese usuario no existe'. ^nil ]	)! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:28' prior: 35562672!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		aux add: next.		moovies addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies)		 ]! !Load removeSelector: #refUsers:to:!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:32' prior: 35566100!findUser: id"Retorna un usuario determinado si es que existe en la lista de usuarios."	^(self aux detect: [ :u1 | u1 at: 2 = id]	 ifNone: [ self error: 'Ese usuario no existe'. ^nil ]	)! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:33' prior: 35567005!findUser: id"Retorna un usuario determinado si es que existe en la lista de usuarios."	^(self aux detect: [ :u1 | u1 at: 1 = id]	 ifNone: [ self error: 'Ese usuario no existe'. ^nil ]	)! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:33'!initialize	aux:= OrderedCollection new! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:35' prior: 35562200!loadFSsFrom: aPath to: moovies"Carga relaciones de amistad desde un archivo externo que debe cumplir con el siguiente formato:										userid|friendid"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		(moovies findUser: (self findUser: (next at:1)asInteger) )		addFriend: (moovies findUser: (self findUser: (next at:2)asInteger))		 ]! !----SNAPSHOT----2016-05-03T20:35:33.189805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2011488!!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 20:36'!aux	^ aux! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 20:36'!aux: anObject	aux := anObject! !----SNAPSHOT----2016-05-03T20:36:18.388805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2013662!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:36' prior: 35567283!findUser: id"Retorna un usuario determinado si es que existe en la lista de usuarios."	^(self aux detect: [ :u1 | (u1 at: 1) = id]	 ifNone: [ self error: 'Ese usuario no existe'. ^nil ]	)! !----SNAPSHOT----2016-05-03T20:36:57.717805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2013938!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:38' prior: 35566378!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		self aux add: next.		moovies addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies)		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:41' prior: 35568956!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		self aux add: next shallowCopy .		moovies addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies)		 ]! !----SNAPSHOT----2016-05-03T20:41:13.438805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2014328!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:44' prior: 35569551!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		self aux add: (OrderedCollection from: next)  .		moovies addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies)		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:45' prior: 35570269!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		self aux add: (OrderedCollection newFrom: next)  .		moovies addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies)		 ]! !----SNAPSHOT----2016-05-03T20:45:16.153805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2015641!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:46' prior: 35570892!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		self aux add: next .		moovies addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies)		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:52' prior: 35571628!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	self aux: aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		moovies addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies)		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:54' prior: 35572224!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		self aux add: next.		moovies addUser: (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies)		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:56' prior: 35567545!initialize	aux:= Dictionary new! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:57' prior: 35572842!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		self aux at: (next at:1) put: user.		moovies addUser: user.		 ]! !----SNAPSHOT----2016-05-03T20:58:08.563805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2017000!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 20:59' prior: 35573558!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		self aux at: (next at:1)asInteger put: user.		moovies addUser: user.		 ]! !----SNAPSHOT----2016-05-03T20:59:16.326805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2019672!----SNAPSHOT----2016-05-03T21:02:45.175805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2020423!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:05' prior: 35554754!loadMoviesFrom: aPath to: moovies"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next genres|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				genres:= self refGenres: (next last: 19).		moovies addMovie: ((Movie id: (next at:1)asInteger title: (next at:2) release: (next at:3))addGenres: (self refGenres: (next last: 19))).		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:05' prior: 35575161!loadMoviesFrom: aPath to: moovies"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next genres|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				genres:= self refGenres: (next last: 19).		moovies addMovie: ((Movie id: (next at:1)asInteger title: (next at:2) release: (next at:3))addGenres: genres)		 ]! !----SNAPSHOT----2016-05-03T21:05:27.215805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2020533!!Movie methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:07' prior: 35440722!addGenres: aGenres"Agrega generos desde una coleccion a la lista de generos de la pelicula."	self genres addFrom: aGenres.! !----SNAPSHOT----2016-05-03T21:07:48.100805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2022235!----SNAPSHOT----2016-05-03T21:09:01.039805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2022549!!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:16'!ins: anObject at: aPosition	self aux at: aPosition put: anObject ! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:16' prior: 35574300!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		self aux at: ((next at:1)asInteger) put: user.		moovies addUser: user.		 ]! !Load removeSelector: #ins:at:!----SNAPSHOT----2016-05-03T21:17:09.718805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2022659!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:18' prior: 35573437!initialize	aux:= Dictionary new.! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:18' prior: 35578201!initialize	users:= Dictionary new.! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:18' prior: 35568264!aux	^ users! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:18' prior: 35568337!aux: anObject	users := anObject! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:18' prior: 35578323!initialize	users:= Dictionary new.! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:18' prior: 35578437!aux	^ users! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:18' prior: 35578528!aux: anObject	users := anObject! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:19'!users	^ users! !Load removeSelector: #users!!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:19'!users	^ users! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:19' prior: 35568566!findUser: id"Retorna un usuario determinado si es que existe en la lista de usuarios."	^(self users detect: [ :u1 | (u1 at: 1) = id]	 ifNone: [ self error: 'Ese usuario no existe'. ^nil ]	)! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:19' prior: 35577416!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		self users at: ((next at:1)asInteger) put: user.		moovies addUser: user.		 ]! !Load removeSelector: #aux!!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:19'!users: anObject	users := anObject! !Load removeSelector: #aux:!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:25' prior: 35579441!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user aux|	aux:= Dictionary new.	file:= aPath asFileReference readStream.	[file atEnd]		whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		aux at: ((next at:1)asInteger) put: user.		moovies addUser: user.		 ].	self users: aux.! !----SNAPSHOT----2016-05-03T21:25:56.967805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2023573!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:27' prior: 35580240!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user aux|	aux:= Dictionary new.	file:= aPath asFileReference readStream.	[file atEnd]		whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		aux at: ((next at:1)asInteger) put: user.		moovies addUser: user.		 ].	self users: (aux copy ).! !----SNAPSHOT----2016-05-03T21:27:09.320805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2026407!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:29' prior: 35581035!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user pos|		file:= aPath asFileReference readStream.	[file atEnd]		whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		pos:= (next at:1)asInteger.		self users at: pos put: user.		moovies addUser: user.		 ].! !----SNAPSHOT----2016-05-03T21:29:32.138805-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2027210!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:30' prior: 35581838!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user pos|		file:= aPath asFileReference readStream.	[file atEnd]		whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		pos:= next at:1.		self users at: pos put: user.		moovies addUser: user.		 ].! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:34' prior: 35579056!users	^ aux! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:34' prior: 35580088!users: anObject	aux := anObject! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:34' prior: 35578649!initialize	aux:= Dictionary new.! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:34' prior: 35583253!users	^ aux! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:34' prior: 35583344!users: anObject	aux := anObject! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:34' prior: 35583465!initialize	aux:= Dictionary new.! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:35'!aux	^ aux! !Load removeSelector: #users!!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:35'!aux: anObject	aux := anObject! !Load removeSelector: #users:!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:36' prior: 35582611!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user pos|		file:= aPath asFileReference readStream.	[file atEnd]		whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		pos:= next at:1.		self aux at: pos put: user.		moovies addUser: user.		 ].! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:37' prior: 35584138!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user|		file:= aPath asFileReference readStream.	[file atEnd]		whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		self aux at: (next at:1) put: user.		moovies addUser: user.		 ].! !----STARTUP----2016-05-03T21:42:11.952084-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\OO II 2016 - Promocion - Hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:42' prior: 35581838!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user|		file:= aPath asFileReference readStream.	[file atEnd]		whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		self aux at: (next at:1) put: user.		moovies addUser: user.		 ].! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:43' prior: 35579056!users	^ aux! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:43' prior: 35580088!users: anObject	aux := anObject! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:43' prior: 35578649!initialize	aux:= Dictionary new.! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:43' prior: 35625367!users	^ aux! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:43' prior: 35625458!users: anObject	aux := anObject! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:43' prior: 35625579!initialize	aux:= Dictionary new.! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:43'!aux	^ aux! !!Load methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:43'!aux: anObject	aux := anObject! !Load removeSelector: #users:!Load removeSelector: #users!----SNAPSHOT----2016-05-03T21:43:40.300084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2027983!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:46' prior: 35624742!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user|		file:= aPath asFileReference readStream.	[file atEnd]		whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		aux at: (next at:1) put: user.		moovies addUser: user.		 ].! !----SNAPSHOT----2016-05-03T21:47:12.822084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2071734!----SNAPSHOT----2016-05-03T21:47:44.765084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2072474!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:48' prior: 35579159!findUser: id"Retorna un usuario determinado si es que existe en la lista de usuarios."	^self aux at: id! !----SNAPSHOT----2016-05-03T21:49:13.748084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2072584!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:52' prior: 35567673!loadFSsFrom: aPath to: moovies"Carga relaciones de amistad desde un archivo externo que debe cumplir con el siguiente formato:										userid|friendid"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		(moovies findUser: (self findUser:(next at:1))) 		addFriend: (moovies findUser: (self findUser:(next at:1)))		 ]! !----SNAPSHOT----2016-05-03T21:52:40.787084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2072888!----SNAPSHOT----2016-05-03T21:54:21.345084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2073485!!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:54' prior: 35551107!addFriend: anUser"Agrega un usuario a la lista de amigos."	(self isFriend: anUser)	ifFalse: [ anUser friends add: self .		self friends add: (anUser).		Transcript cr; show: self fname; show: ' y '; show: anUser fname; show: ' ahora son amigos.' 		]	ifTrue: [ Transcript cr; show: 'No podes agregarlo porque ya son amigos.' ]! !----SNAPSHOT----2016-05-03T21:54:39.095084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2073595!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:56' prior: 35627516!loadFSsFrom: aPath to: moovies"Carga relaciones de amistad desde un archivo externo que debe cumplir con el siguiente formato:										userid|friendid"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		(moovies findUser: (self findUser:(next at:1))) 		addFriend: (moovies findUser: (self findUser:(next at:2)))		 ]! !----SNAPSHOT----2016-05-03T21:56:29.420084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2074114!!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 21:56' prior: 35628213!addFriend: anUser"Agrega un usuario a la lista de amigos."	(self isFriend: anUser)	ifFalse: [ anUser friends add: self .		self friends add: (anUser).		Transcript cr; show: self fname; show: ' y '; show: anUser fname; show: ' ahora son amigos.' 		]	ifTrue: [ self error: 'No podes agregarlo porque ya son amigos.' ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:59' prior: 35496605!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies findUser: (self findUser: (next at: 1)))		rateMovie: (next at:3)asInteger		value:  (next at:4)asInteger		tstamp: (next at:2)		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 21:59' prior: 35629739!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies findUser: (self findUser: (next at: 1)))		rateMovie: (next at:3)asInteger		value:  (next at:4)asInteger		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:00' prior: 35630310!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies findUser: (self findUser: (next at: 1)))		rateMovie: (next at:3)asInteger		value:  (next at:4)asInteger		 ]! !----SNAPSHOT----2016-05-03T22:00:08.349084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2074711!----SNAPSHOT----2016-05-03T22:00:53.862084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2076889!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:02' prior: 35627212!findUser: id"Retorna un usuario determinado si es que existe en la lista de usuarios."	^self aux at: id ifAbsent: [ Transcript cr; show: 'No se encontro el usuario' ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:04' prior: 35631627!findUser: id"Retorna un usuario determinado si es que existe en la lista de usuarios."	^self aux at: id ifAbsent: [ Transcript cr; show: 'No se encontro el usuario' . ^nil]! !----SNAPSHOT----2016-05-03T22:08:01.880084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2076999!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:09' prior: 35630859!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		(moovies existsUser: (self findUser: (next at: 1)))		ifTrue: [(moovies findUser: (self findUser: (next at: 1)))			rateMovie: (next at:3)asInteger			value:  (next at:4)asInteger]		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:10' prior: 35631884!findUser: id"Retorna un usuario determinado si es que existe en la lista de usuarios."	^ self aux at: id ifAbsent: [ Transcript cr; show: 'No se encontro el usuario' . ^nil]! !!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 22:14'!=? otroUser"Metodo para comprobar que un usuario es igual a otro, retornando true o false correspondientemente."	^(otroUser fname = self fname) &	(otroUser lname = self lname) &	(otroUser age = self age) &	(otroUser occupation = self occupation ) &	(otroUser zipCode = self zipCode )! !User removeSelector: #=!----SNAPSHOT----2016-05-03T22:15:00.128084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2077629!!User methodsFor: 'accessing' stamp: 'bys 5/3/2016 22:15'!= otroUser"Metodo para comprobar que un usuario es igual a otro, retornando true o false correspondientemente."	^(otroUser fname = self fname) &	(otroUser lname = self lname) &	(otroUser age = self age) &	(otroUser occupation = self occupation ) &	(otroUser zipCode = self zipCode )! !User removeSelector: #=?!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:16' prior: 35632869!findUser: id"Retorna un usuario determinado si es que existe en la lista de usuarios."	^self aux at: id ifAbsent: [ Transcript cr; show: 'No se encontro el usuario' . ^nil]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:19' prior: 35632257!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies existsUser: (self findUser: (next at:1)))		ifTrue: [(moovies findUser: (self findUser: (next at:1)))			rateMovie: (next at:3)asInteger			value:  (next at:4)asInteger]		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:19' prior: 35634262!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies existsUser: (self findUser:(next at:1)))		ifTrue: [(moovies findUser: (self findUser:(next at:1)))			rateMovie: (next at:3)asInteger			value:  (next at:4)asInteger]		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:19' prior: 35634875!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies existsUser: (self findUser:(next at:1)))		ifTrue: [(moovies findUser: (self findUser:(next at:1)))			rateMovie: (next at:3)asInteger			value: (next at:4)asInteger]		 ]! !----SNAPSHOT----2016-05-03T22:19:32.072084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2078993!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:21' prior: 35404101!existsUser: aUser"Devuelve true si un usuario determinado existe en la lista de usuarios y false en caso contrario."	^(self users includes: aUser)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:22' prior: 35548090!friendsOf: aUser"Devuelve una coleccion de amigos de un usuario determinado."	(self existsUser: aUser)	ifTrue: [ ^(aUser friends) ]	ifFalse: [ self error: 'Ese usuario no existe.' ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:23' prior: 35635486!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies existsUser: (self findUser:(next at:1)))		ifTrue: [(moovies findUser: (self findUser:(next at:1)))			rateMovie: (next at:3)asInteger			value: (next at:4)asInteger]		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:23' prior: 35636723!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies existsUser: (self findUser:(next at:1)))		ifTrue: [(moovies findUser: (self findUser:(next at:1)))			rateMovie: (next at:3)asInteger			value: (next at:4)asInteger]		 ]! !----SNAPSHOT----2016-05-03T22:25:18.097084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2081578!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:27' prior: 35637333!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies findUser: (self findUser: (next at:1))				)rateMovie: (next at:3)asInteger			value: (next at:4)asInteger		 ]! !----SNAPSHOT----2016-05-03T22:28:03.916084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2083424!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:30' prior: 35638052!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies findUser: (self findUser: (next at:1)))		rateMovie: (next at:3)asInteger		value: (next at:4)asInteger		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:30' prior: 35638711!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies findUser: (self findUser: (next at:'1')))		rateMovie: (next at:3)asInteger		value: (next at:4)asInteger		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:31' prior: 35639257!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies findUser: (self findUser: (next at:1)))		rateMovie: (next at:3)asInteger		value: (next at:4)asInteger		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:35' prior: 35639805!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies findUser: (self findUser:(next at:1))) 		rateMovie: (moovies findMovie: (next at: 3))		value: (next at:4)		 ]! !----SNAPSHOT----2016-05-03T22:35:29.535084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2084083!----SNAPSHOT----2016-05-03T22:36:06.249084-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2086383!----STARTUP----2016-05-03T22:36:33.297674-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\OO II 2016 - Promocion - Hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:42' prior: 35640351!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				(moovies findUser: (self aux at:(next at:1))) 		rateMovie: (moovies findMovie: (next at: 3))		value: (next at:4)		 ]! !----SNAPSHOT----2016-05-03T22:42:39.458674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2086493!----SNAPSHOT----2016-05-03T22:42:43.371674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2126470!----SNAPSHOT----2016-05-03T22:49:01.358674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2126580!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 22:54' prior: 35680440!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.			user:= self findUser:(next at:1).			(moovies findUser: user) 		rateMovie: (moovies findMovie: (next at: 3))		value: (next at:4)		 ]! !----SNAPSHOT----2016-05-03T22:54:59.803674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2126690!----SNAPSHOT----2016-05-03T22:55:08.602674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2127368!----SNAPSHOT----2016-05-03T22:58:49.832674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2127478!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 23:01' prior: 35681318!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: ' |'.			user:= self findUser:(next at:1).			(moovies findUser: user) 		rateMovie: (moovies findMovie: (next at: 3))		value: (next at:4)		 ]! !----SNAPSHOT----2016-05-03T23:01:18.058674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2127588!----SNAPSHOT----2016-05-03T23:01:26.949674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2128267!----SNAPSHOT----2016-05-03T23:02:07.641674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2128377!----SNAPSHOT----2016-05-03T23:02:25.583674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2128487!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 23:03' prior: 35682216!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: ' | '.			user:= self findUser:(next at:1).			(moovies findUser: user) 		rateMovie: (moovies findMovie: ((next at: 3)asInteger))		value: (next at:4)		 ]! !----SNAPSHOT----2016-05-03T23:03:06.207674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2128597!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 23:03' prior: 35683225!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid|timestamp|movieid|rating"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: ' | '.			user:= self findUser:(next at:1).			(moovies findUser: user) 		rateMovie: (moovies findMovie: ((next at: 3)asInteger))		value: (next at:4)asInteger		 ]! !----SNAPSHOT----2016-05-03T23:03:34.823674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2129288!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 23:04' prior: 35683916!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid | timestamp | movieid | rating"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: ' | '.			user:= self findUser:(next at:1).			(moovies findUser: user) 		rateMovie: (moovies findMovie: ((next at: 3)asInteger))		value: (next at:4)asInteger		 ]! !----SNAPSHOT----2016-05-03T23:04:46.541674-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2129988!----STARTUP----2016-05-03T23:08:32.20862-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\OO II 2016 - Promocion - Hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/3/2016 23:11' prior: 35684616!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid | timestamp | movieid | rating"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: ' | '.			user:= self findUser:(next at:1).			(moovies findUser: user) 		rateMovie: (moovies findMovie: ((next at: 3)asInteger))		value: (next at:4)asInteger		 ].	self aux removeAll ! !----SNAPSHOT----2016-05-03T23:11:49.13062-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2130694!----SNAPSHOT----2016-05-03T23:12:47.95362-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2170740!----STARTUP----2016-05-04T10:50:15.807952-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\OO II 2016 - Promocion - Hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 10:55' prior: 35628742!loadFSsFrom: aPath to: moovies"Carga relaciones de amistad desde un archivo externo que debe cumplir con el siguiente formato:										userid|friendid"	|file next|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		(moovies findUser: (self findUser:(next at:1))) 		addFriend: (moovies findUser: (self findUser:(next at:2)))	]! !Object subclass: #User	instanceVariableNames: 'moovies fname lname age occupation zipCode friends movies'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!----STARTUP----2016-05-04T15:57:26.518971-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\OO II 2016 - Promocion - Hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 16:05' prior: 35560282!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres defaultGenres|	aGenres:= OrderedCollection new.	defaultGenres := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 	'Drama' 'Fantasy' 'Film­Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci­Fi' 'Thriller' 	'War' 'Western').	genresCollection do: [ :g | (g = 1)		ifTrue: [ aGenres add: (defaultGenres at: g position) ]		 		 ].	^aGenres! !----SNAPSHOT----2016-05-04T16:06:35.246971-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2170849!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 16:07' prior: 35804777!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres defaultGenres|	aGenres:= OrderedCollection new.	defaultGenres := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 	'Drama' 'Fantasy' 'Film­Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci­Fi' 'Thriller' 	'War' 'Western').	genresCollection do: [ :g | (g = '1')		ifTrue: [ aGenres add: (defaultGenres at: g position) ]		 		 ].	^aGenres! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 16:24' prior: 35805464!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres defaultGenres |	aGenres:= OrderedCollection new.	defaultGenres := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 	'Drama' 'Fantasy' 'Film­Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci­Fi' 'Thriller' 	'War' 'Western').	1 to: 19 do: [ :pos |  ((genresCollection at: pos) = 1)		ifTrue: [ aGenres add: (defaultGenres at: pos) ]				].	^aGenres! !----SNAPSHOT----2016-05-04T16:24:48.340971-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2250836!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 16:28' prior: 35806043!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres defaultGenres |	aGenres:= OrderedCollection new.	defaultGenres := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 	'Drama' 'Fantasy' 'Film­Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci­Fi' 'Thriller' 	'War' 'Western').	1 to: 19 do: [ :pos |  ((genresCollection at: pos) = '1')		ifTrue: [ aGenres add: (defaultGenres at: pos) ]				].	^aGenres! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 16:29' prior: 35806742!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres defaultGenres |	aGenres:= OrderedCollection new.	defaultGenres := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 	'Drama' 'Fantasy' 'Film­Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci­Fi' 'Thriller' 	'War' 'Western').	1 to: 19 do: [ :pos |  ((genresCollection at: pos) = '1')		ifTrue: [ aGenres add: (defaultGenres at: pos) ]				ifFalse: [ self error: 'la con cha de tu madre allboys' ]			].	^aGenres! !----SNAPSHOT----2016-05-04T16:29:09.345971-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2252114!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 16:29' prior: 35807333!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres defaultGenres |	aGenres:= OrderedCollection new.	defaultGenres := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 	'Drama' 'Fantasy' 'Film­Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci­Fi' 'Thriller' 	'War' 'Western').	1 to: 19 do: [ :pos |  ((genresCollection at: pos) = 1)		ifTrue: [ aGenres add: (defaultGenres at: pos) ]				ifFalse: [ self error: 'la con cha de tu madre allboys' ]			].	^aGenres! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 16:34' prior: 35808095!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres defaultGenres |	aGenres:= OrderedCollection new.	defaultGenres := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 	'Drama' 'Fantasy' 'Film­Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci­Fi' 'Thriller' 	'War' 'Western').	1 to: 19 do: [ :pos |  ((genresCollection at: pos)asInteger = 1)		ifTrue: [ aGenres add: (defaultGenres at: pos) ]				ifFalse: [ self error: 'la con cha de tu madre allboys' ]			].	^aGenres! !----SNAPSHOT----2016-05-04T16:34:57.526971-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2253467!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 16:36' prior: 35808745!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres defaultGenres |	aGenres:= OrderedCollection new.	defaultGenres := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 	'Drama' 'Fantasy' 'Film­Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci­Fi' 'Thriller' 	'War' 'Western').	1 to: 19 do: [ :pos |  (((genresCollection at: pos)asInteger) = 1)		ifTrue: [ aGenres add: (defaultGenres at: pos) ]				ifFalse: [ self error: 'la con cha de tu madre allboys' ]			].	^aGenres! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 16:36' prior: 35809514!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres defaultGenres |	aGenres:= OrderedCollection new.	defaultGenres := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 	'Drama' 'Fantasy' 'Film­Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci­Fi' 'Thriller' 	'War' 'Western').	1 to: 19 do: [ :pos |  (((genresCollection at: pos)asInteger) = 1)		ifTrue: [ aGenres add: (defaultGenres at: pos) ]		].	^aGenres! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 16:37' prior: 35810175!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar."| aGenres defaultGenres |	aGenres:= OrderedCollection new.	defaultGenres := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 	'Drama' 'Fantasy' 'Film­Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci­Fi' 'Thriller' 	'War' 'Western').	1 to: 19 do: [ :pos |  ((genresCollection at: pos)asInteger = 1)		ifTrue: [ aGenres add: (defaultGenres at: pos) ]		].	^aGenres! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 16:38' prior: 35810773!refGenres: genresCollection"El loader se encargara de detectar los generos que se deben agregar, orientandose desde una coleccion de generos por defecto."| aGenres defaultGenres |	aGenres:= OrderedCollection new.	defaultGenres := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 	'Drama' 'Fantasy' 'Film­Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci­Fi' 'Thriller' 	'War' 'Western').	1 to: 19 do: [ :pos |  ((genresCollection at: pos)asInteger = 1)		ifTrue: [ aGenres add: (defaultGenres at: pos) ]		].	^aGenres! !----SNAPSHOT----2016-05-04T16:38:06.457971-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2254886!----SNAPSHOT----2016-05-04T16:38:11.548971-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2257504!----STARTUP----2016-05-04T16:39:31.795485-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\OO II 2016 - Promocion - Hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----STARTUP----2016-05-04T20:18:49.043069-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\OO II 2016 - Promocion - Hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:23' prior: 35626362!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user|		file:= aPath asFileReference readStream.	[file atEnd]		whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		auxUsers at: (next at:1) put: user.		moovies addUser: user.		 ].! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:23' prior: 35625903!initialize	auxUsers:= Dictionary new.! !!Load methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:23' prior: 35625999!aux	^ auxUsers! !!Load methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:23' prior: 35626072!aux: anObject	auxUsers := anObject! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:23' prior: 35890880!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user|		file:= aPath asFileReference readStream.	[file atEnd]		whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		auxUsers at: (next at:1) put: user.		moovies addUser: user.		 ].! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:23' prior: 35891515!initialize	auxUsers:= Dictionary new.! !!Load methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:23' prior: 35891632!aux	^ auxUsers! !!Load methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:23' prior: 35891726!aux: anObject	auxUsers := anObject! !!Load methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:24'!auxUsers	^ auxUsers! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:24' prior: 35633999!findUser: id"Retorna un usuario determinado si es que existe en la lista de usuarios."	^self auxUsers at: id ifAbsent: [ Transcript cr; show: 'No se encontro el usuario' . ^nil]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:24' prior: 35724640!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid | timestamp | movieid | rating"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: ' | '.			user:= self findUser:(next at:1).			(moovies findUser: user) 		rateMovie: (moovies findMovie: ((next at: 3)asInteger))		value: (next at:4)asInteger		 ].	self auxUsers removeAll ! !Load removeSelector: #aux!!Load methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:24'!auxUsers: anObject	auxUsers := anObject! !Load removeSelector: #aux:!Object subclass: #Load	instanceVariableNames: 'auxUsers auxMovies'	classVariableNames: ''	category: 'OO II 2016 - Promocion - Hito 1'!!Load methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:25'!auxMovies	^ auxMovies! !!Load methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:25'!auxMovies: anObject	auxMovies := anObject! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:29' prior: 35575971!loadMoviesFrom: aPath to: moovies"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next genres movie|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				genres:= self refGenres: (next last: 19).		movie:= ((Movie id: (next at:1)asInteger title: (next at:2) release: (next at:3))addGenres: genres).		self auxMovies add: movie.		moovies addMovie: movie.		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:32' prior: 35894283!loadMoviesFrom: aPath to: moovies"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next genres movie|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				genres:= self refGenres: (next last: 19).		movie:= ((Movie id: nil title: (next at:2) release: (next at:3))addGenres: genres).		self auxMovies add: movie.		moovies addMovie: movie.		 ]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:37' prior: 35891850!loadUsersFrom: aPath to: moovies"Carga usuarios desde un archivo externo que debe cumplir con el siguiente formato:				userid|age|gender|occupation|zipcode|FirstName|LastName"	|file next user|		file:= aPath asFileReference readStream.	[file atEnd]		whileFalse: [ 		next:= (file nextLine)findTokens: '|'.		user:= (User fname: (next at: 6)		 lname: (next at:7)		 age: (next at: 2)asInteger 		 ocuppation: (next at: 4)		 zipCode: (next at:5)asInteger		 app: moovies).		self auxUsers at: (next at:1) put: user.		moovies addUser: user.		 ].! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:40'!findMovie: id"Retorna un usuario determinado si es que existe en la lista de usuarios."	^self auxMovies at: id ifAbsent: [ Transcript cr; show: 'No se encontro la pelicula' . ^nil]! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:41' prior: 35893171!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid | timestamp | movieid | rating"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: ' | '.			user:= self findUser:(next at:1).			(moovies findUser: user) 		rateMovie: (moovies findMovie: (self findMovie:(next at: 3)))		value: (next at:4)asInteger		 ].	self auxUsers removeAll ! !!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:44' prior: 35896831!loadRatingsFrom: aPath to: moovies"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid | timestamp | movieid | rating"	|file next user|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: ' | '.			user:= self findUser:(next at:1).			(moovies findUser: user) 		rateMovie: (moovies findMovie: (self findMovie:(next at: 3)))		value: (next at:4)asInteger		 ].	self auxUsers removeAll.	self auxMovies removeAll.! !!Movie methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:48' prior: 35287829!= otraPeli	^(otraPeli title = self title) &	(otraPeli release = self release) &	(otraPeli title = self movieid)	! !!Movie methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:53' prior: 35287513!movieid	^ imdbid! !!Movie methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:53' prior: 35287599!movieid: anObject	imdbid := anObject! !!Movie methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:53' prior: 35898303!movieid	^ imdbid! !!Movie methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:53' prior: 35898400!movieid: anObject	imdbid := anObject! !!Movie methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:54'!imdbid	^ imdbid! !!TestMoovies methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:54' prior: 35553097!testCalificarPelicula	user1 rateMovie: movie1 value: 5.	self assert: ((user1 findMovie: (movie1 imdbid))rating = 5)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:54' prior: 35546908!findMovie: unID"Retorna una pelicula determinada si es que existe en la lista de peliculas."	^(self movies detect: [ :p1 | p1 imdbid = unID]	 ifNone: [ self error: 'Esa pelicula no existe'. ^nil ]	)! !!User methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:54' prior: 35552134!findMovie: unID"Retorna una pelicula determinada si es que existe en la lista de peliculas calificadas."	^(self movies detect: [ :p1 | p1 imdbid = unID ]	 ifNone: [ self error: 'Esa pelicula no ha sido calificada por el usuario.'. ^nil ]	)! !!User methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:54' prior: 35552662!rateMovie: aMovie value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	|movie|	(self sawMovie: aMovie)	ifFalse: [ movie:= self moovies findMovie: (aMovie imdbid) .		movie rate: (Rating new: unValor by: self).		self addMovie: movie.			]	ifTrue: [ self error: 'El usuario ya califico esta pelicula.' ]! !!Movie methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:54' prior: 35898107!= otraPeli	^(otraPeli title = self title) &	(otraPeli release = self release) &	(otraPeli title = self imdbid)	! !Movie removeSelector: #movieid!!Movie methodsFor: 'accessing' stamp: 'bys 5/4/2016 20:54'!imdbid: anObject	imdbid := anObject! !!Movie class methodsFor: 'constructor' stamp: 'bys 5/4/2016 20:54' prior: 35339930!id: unID title: unNombre release: unaFecha	^self new	imdbid: unID;	title: unNombre;	release: unaFecha! !Movie removeSelector: #movieid:!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:55' prior: 35899036!findMovie: aMovie"Retorna una pelicula determinada si es que existe en la lista de peliculas."	^(self movies detect: [ :p1 | p1 = aMovie]	 ifNone: [ self error: 'Esa pelicula no existe'. ^nil ]	)! !!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:57' prior: 35427320!existsMovie: aMovie"Devuelve true si una pelicula determinada existe en la lista de peliculas y false en caso contrario."	^(self movies includes: aMovie)! !----SNAPSHOT----2016-05-04T20:58:19.837069-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2257614!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:59' prior: 35892485!initialize	auxUsers:= Dictionary new.	auxMovies:= Dictionary new.! !----SNAPSHOT----2016-05-04T20:59:09.464069-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2346661!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 20:59' prior: 35895118!loadMoviesFrom: aPath to: moovies"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next genres movie|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: '|'.				genres:= self refGenres: (next last: 19).		movie:= ((Movie id: nil title: (next at:2) release: (next at:3))addGenres: genres).		self auxMovies at: (next at:1) put: movie.		moovies addMovie: movie.		 ]! !----SNAPSHOT----2016-05-04T20:59:46.035069-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2346927!!Load methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 21:02' prior: 35901555!loadMoviesFrom: aPath to: moovies"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	|file next genres movie|	file:= aPath asFileReference readStream.	[file atEnd]	whileFalse: [ 		next:= (file nextLine)findTokens: ' | '.				genres:= self refGenres: (next last: 19).		movie:= ((Movie id: nil title: (next at:2) release: (next at:3))addGenres: genres).		self auxMovies at: (next at:1) put: movie.		moovies addMovie: movie.		 ]! !!Movie methodsFor: 'accessing' stamp: 'bys 5/4/2016 21:04' prior: 35900077!= otraPeli	^(otraPeli title = self title) &	(otraPeli release = self release) &	(otraPeli imdbid = self imdbid)	! !----SNAPSHOT----2016-05-04T21:04:43.136069-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2347871!----SNAPSHOT----2016-05-04T21:06:21.195069-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2349013!----SNAPSHOT----2016-05-04T21:08:26.012069-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2349123!!Moovies methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 21:11' prior: 35548679!addMovie: aMovie"Agrega una pelicula nueva a la lista de peliculas"	(self existsMovie: aMovie)	ifFalse: [ self movies add: aMovie]! !----SNAPSHOT----2016-05-04T21:12:59.558069-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2349233!!User methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 21:24' prior: 35899659!rateMovie: aMovie value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	|movie|	(self sawMovie: aMovie)	ifFalse: [ movie:= self moovies findMovie: aMovie .		movie rate: (Rating new: unValor by: self).		self addMovie: movie.			]	ifTrue: [ self error: 'El usuario ya califico esta pelicula.' ]! !!User methodsFor: 'accessing' stamp: 'bys 5/4/2016 21:24' prior: 35551507!addMovie: unaPeli"Agrega una pelicula a la lista de peliculas vistas por el usuario."	(self sawMovie: unaPeli)	ifFalse: [ self movies add: unaPeli]	! !----SNAPSHOT----2016-05-04T21:24:48.209069-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2349568!!User methodsFor: 'as yet unclassified' stamp: 'bys 5/4/2016 21:25' prior: 35904196!rateMovie: aMovie value: unValor"Califica una pelicula existente con un valor entre 1 y 5 inclusive."	|movie|	(self sawMovie: aMovie)	ifFalse: [ movie:= self moovies findMovie: aMovie .		movie rate: (Rating new: unValor by: self).		self addMovie: movie.			]	! !----SNAPSHOT----2016-05-04T21:26:38.044069-03:00 OO II 2016 - Promocion - Hito 1.image priorSource: 2350327!----STARTUP----2016-05-10T17:14:04.282006-03:00 as C:\Pharo4.0\OO-II-2k16\OO II 2016 - Promocion\OO II 2016 - Promocion - Hito 1.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!----SNAPSHOT----2016-05-10T17:14:23.010006-03:00 default.image priorSource: 2350792!----STARTUP----2016-05-11T20:15:30.834091-03:00 as C:\Pharo4.0\default.image!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Multi line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #multiLineMessages: with: (''#(#ifTrue:ifFalse: #ifFalse:ifTrue: #ifTrue: #ifFalse: #on:do: #ensure: #ifCurtailed:)'')' runOnce: true.
	StartupAction name: 'Minimum new lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #minimumNewLinesBetweenStatements: with: (1)' runOnce: true.
	StartupAction name: 'New line after cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineAfterCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first cascade' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstCascade: with: (true)' runOnce: true.
	StartupAction name: 'New line before first keyword' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLineBeforeFirstKeyword: with: (false)' runOnce: true.
	StartupAction name: 'New lines after method comment' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodComment: with: (2)' runOnce: true.
	StartupAction name: 'New lines after method pattern' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterMethodPattern: with: (1)' runOnce: true.
	StartupAction name: 'New lines after temporaries' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #newLinesAfterTemporaries: with: (1)' runOnce: true.
	StartupAction name: 'Number of arguments for multi line' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #numberOfArgumentsForMultiLine: with: (4)' runOnce: true.
	StartupAction name: 'Periods as terminators' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAsTerminators: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of block' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfBlock: with: (false)' runOnce: true.
	StartupAction name: 'Periods at end of method' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #periodsAtEndOfMethod: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines between statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBetweenStatements: with: (false)' runOnce: true.
	StartupAction name: 'Retain blank lines before comments' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #retainBlankLinesBeforeComments: with: (false)' runOnce: true.
	StartupAction name: 'String following return' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringFollowingReturn: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside blocks' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideBlocks: with: ('' '')' runOnce: true.
	StartupAction name: 'String inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #stringInsideParentheses: with: ('''')' runOnce: true.
	StartupAction name: 'Traditional binary precedence' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #traditionalBinaryPrecedence: with: (''#(#($| $& $?) #($= $~ $< $>) #($- $+) #($* $/ $% $\) #($@))'')' runOnce: true.
	StartupAction name: 'Use traditional binary precedence for parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #useTraditionalBinaryPrecedenceForParentheses: with: (true)' runOnce: true.
	StartupAction name: 'Format methods on display' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnDisplay: with: (false)' runOnce: true.
	StartupAction name: 'Format methods on accept' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatOnAccept: with: (false)' runOnce: true.
	StartupAction name: 'Undo size' code: '(Smalltalk at: #RBRefactoryChangeManager) perform: #undoSize: with: (20)' runOnce: true.
	StartupAction name: 'Maximum size of the methods list' code: '((Smalltalk at: #RecentMessageList) perform: #uniqueInstance) perform: #maxListSize: with: (100)' runOnce: true.
	StartupAction name: 'Font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #editorFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Background' code: '(Smalltalk at: #RubAbstractTextArea) perform: #backgroundColor: with: ((Color r: 1.0 g: 1.0 b: 1.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Text color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #textColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers font' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Line numbers color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersTextColor: with: ((Color r: 0.25 g: 0.25 b: 0.25 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Line numbers background color' code: '(Smalltalk at: #RubAbstractTextArea) perform: #lineNumbersBackgroundColor: with: ((Color r: 0.9560000000000001 g: 0.9560000000000001 b: 0.9560000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Fixed color' code: '(Smalltalk at: #RubCursor) perform: #cursorWithFixedColor: with: (false)' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #RubCursor) perform: #defaultColor: with: ((Color r: 0.625 g: 0.625 b: 0.625 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Width' code: '(Smalltalk at: #RubCursor) perform: #defaultWidth: with: (2)' runOnce: true.
	StartupAction name: 'Blinking period' code: '(Smalltalk at: #RubCursor) perform: #period: with: (700)' runOnce: true.
	StartupAction name: #'Syntax Highlighting' code: '(Smalltalk at: #SHPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Selector Patterns' code: '(Smalltalk at: #SHPreferences) perform: #selectorPatternsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternKeyword #patternBinary #patternUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntactic error' code: '(Smalltalk at: #SHPreferences) perform: #errorStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#invalid #excessCode #undefinedKeyword #undefinedBinary #undefinedUnary #undefinedIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Parameters' code: '(Smalltalk at: #SHPreferences) perform: #argsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#patternArg #methodArg #blockPatternArg #blockArg #argument ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Comments' code: '(Smalltalk at: #SHPreferences) perform: #commentStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#comment #unfinishedComment ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #SHPreferences) perform: #defaultStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#default ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Global variables' code: '(Smalltalk at: #SHPreferences) perform: #globalVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#globalVar #poolConstant ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Instance/class variables' code: '(Smalltalk at: #SHPreferences) perform: #instanceVarStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#instVar #classVar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Message sends' code: '(Smalltalk at: #SHPreferences) perform: #messageSendsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#keyword #binary #unary #incompleteKeyword #incompleteBinary #incompleteUnary ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive or module' code: '(Smalltalk at: #SHPreferences) perform: #primitiveOrModuleStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#primitive #externalFunctionCallingConvention #module #externalCallType #externalCallTypePointerIndicator #primitiveOrExternalCallStart #primitiveOrExternalCallEnd ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Primitive types' code: '(Smalltalk at: #SHPreferences) perform: #primitiveTypesStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#''$'' #character #integer #number #- #symbol #stringSymbol #literalArray #string #unfinishedString ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Reserved words' code: '(Smalltalk at: #SHPreferences) perform: #reservedWordsStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#self #super #true #false #nil #thisContext ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Syntax' code: '(Smalltalk at: #SHPreferences) perform: #syntaxStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#assignment #ansiAssignment #literal #return #blockArgColon #leftParenthesis #rightParenthesis #leftParenthesis1 #rightParenthesis1 #leftParenthesis2 #rightParenthesis2 #leftParenthesis3 #rightParenthesis3 #leftParenthesis4 #rightParenthesis4 #leftParenthesis5 #rightParenthesis5 #leftParenthesis6 #rightParenthesis6 #leftParenthesis7 #rightParenthesis7 #blockStart #blockEnd #blockStart1 #blockEnd1 #blockStart2 #blockEnd2 #blockStart3 #blockEnd3 #blockStart4 #blockEnd4 #blockStart5 #blockEnd5 #blockStart6 #blockEnd6 #blockStart7 #blockEnd7 #arrayStart #arrayEnd #arrayStart1 #arrayEnd1 #byteArrayStart #byteArrayEnd #byteArrayStart1 #byteArrayEnd1 #leftBrace #rightBrace #cascadeSeparator #statementSeparator #methodTempBar #blockTempBar #blockArgsBar ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'Variable' code: '(Smalltalk at: #SHPreferences) perform: #variableStyle: with: ((SHStyleElement basicNew instVarAt: 1 put: #(#blockTempVar #blockPatternTempVar #workspaceVar #tempVar #patternTempVar #incompleteIdentifier ); instVarAt: 2 put: nil; instVarAt: 3 put: nil; yourself))' runOnce: true.
	StartupAction name: 'AST based coloring' code: '(Smalltalk at: #SHRBTextStyler) perform: #useAstColoring: with: (false)' runOnce: true.
	StartupAction name: 'Enable ShoreLine Reporter' code: '(Smalltalk at: #SlReporter) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Automatic submission' code: '(Smalltalk at: #SlReporter) perform: #autoSubmit: with: (false)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Versionbrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #versionBrowserTool: with: (NewVersionBrowser)' runOnce: true.
	StartupAction name: 'Filelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #fileListTool: with: (FileList)' runOnce: true.
	StartupAction name: 'Changesorter' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #changeSorterTool: with: (DualChangeSorterApplication)' runOnce: true.
	StartupAction name: 'Window position strategy' code: '(Smalltalk at: #RealEstateAgent) perform: #usedStrategy: with: (#cascadeFor:initialExtent:world:)' runOnce: true.
	StartupAction name: 'Window color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #windowColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Rounded corners' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferRoundCorner: with: (false)' runOnce: true.
	StartupAction name: 'Fullscreen margin' code: '(Smalltalk at: #SystemWindow) perform: #fullscreenMargin: with: (25)' runOnce: true.
	StartupAction name: 'Fade background windows' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fadedBackgroundWindows: with: (false)' runOnce: true.
	StartupAction name: 'Fast dragging' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #fastDragging: with: (false)' runOnce: true.
	StartupAction name: 'Text entry dialog width' code: '(Smalltalk at: #TextEntryDialogWindow) perform: #minimumWidth: with: (450)' runOnce: true.
	StartupAction name: 'Gradient filling' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #preferGradientFill: with: (true)' runOnce: true.
	StartupAction name: 'Flat appearance' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #flatMenu: with: (true)' runOnce: true.
	StartupAction name: 'Computed color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #autoMenuColor: with: (false)' runOnce: true.
	StartupAction name: 'Menu color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuColor: with: ((Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionColor: with: ((Color r: 0.38 g: 0.638 b: 0.882 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Menu selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #menuSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Cycle both directions' code: '(Smalltalk at: #Morph) perform: #cycleHalosBothDirections: with: (false)' runOnce: true.
	StartupAction name: 'Encloses fullbounds' code: '(Smalltalk at: #HaloMorph) perform: #haloEnclosesFullBounds: with: (false)' runOnce: true.
	StartupAction name: 'Exhibits bounds' code: '(Smalltalk at: #HaloMorph) perform: #showBoundsInHalo: with: (false)' runOnce: true.
	StartupAction name: 'Animation' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #useAnimation: with: (false)' runOnce: true.
	StartupAction name: 'Animate closing' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #animateClosing: with: (false)' runOnce: true.
	StartupAction name: 'Delay' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #delay: with: (8)' runOnce: true.
	StartupAction name: 'Number of steps' code: '((Smalltalk at: #UITheme) perform: #currentAnimationSettings) perform: #numberOfSteps: with: (20)' runOnce: true.
	StartupAction name: 'Keyboard focus on mouse down' code: '(Smalltalk at: #MorphicModel) perform: #keyboardFocusOnMouseDown: with: (true)' runOnce: true.
	StartupAction name: 'Lose keyboard focus when mouse leave' code: '(Smalltalk at: #MorphicModel) perform: #mouseOverForKeyboardFocus: with: (false)' runOnce: true.
	StartupAction name: 'Show text editing state' code: '(Smalltalk at: #PluggableTextMorph) perform: #showTextEditingState: with: (true)' runOnce: true.
	StartupAction name: 'Balloon help' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #balloonHelpEnabled: with: (true)' runOnce: true.
	StartupAction name: 'String morphs are editable' code: '(Smalltalk at: #StringMorph) perform: #editableStringMorph: with: (false)' runOnce: true.
	StartupAction name: 'Show default action click menu' code: '(Smalltalk at: #Morph) perform: #defaultYellowButtonMenuEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Easy selection' code: '(Smalltalk at: #WorldState) perform: #easySelectingWorld: with: (false)' runOnce: true.
	StartupAction name: 'Show logo' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #showDesktopLogo: with: (true)' runOnce: true.
	StartupAction name: 'Logo image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopLogoFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Gradient' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #useDesktopGradientFill: with: (false)' runOnce: true.
	StartupAction name: 'Other color' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientFillColor: with: ((Color r: 0.937 g: 0.937 b: 0.937 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Direction' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientDirection: with: (#Vertical)' runOnce: true.
	StartupAction name: 'Origin' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopGradientOrigin: with: (#topLeft)' runOnce: true.
	StartupAction name: 'Desktop background image file name' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #desktopImageFileName: with: ('''')' runOnce: true.
	StartupAction name: 'Sound' code: '(Smalltalk at: #SoundSystem) perform: #soundEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Use theme sounds' code: '(Smalltalk at: #SoundTheme) perform: #useThemeSounds: with: (true)' runOnce: true.
	StartupAction name: 'Sound theme' code: '(Smalltalk at: #PolymorphSystemSettings) perform: #soundThemeClass: with: (NullSoundTheme)' runOnce: true.
	StartupAction name: 'Cascaded message inside parentheses' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #cascadedMessageInsideParentheses: with: (false)' runOnce: true.
	StartupAction name: 'Format comment with statements' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #formatCommentWithStatements: with: (true)' runOnce: true.
	StartupAction name: 'Indent string' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentString: with: (''	'')' runOnce: true.
	StartupAction name: 'Indents for keywords' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #indentsForKeywords: with: (1)' runOnce: true.
	StartupAction name: 'Keep block in message' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #keepBlockInMessage: with: (true)' runOnce: true.
	StartupAction name: 'Line up block brackets' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #lineUpBlockBrackets: with: (false)' runOnce: true.
	StartupAction name: 'Method signature on multiple lines' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #methodSignatureOnMultipleLines: with: (false)' runOnce: true.
	StartupAction name: 'Max line length' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #maxLineLength: with: (120)' runOnce: true.
	StartupAction name: 'One line messages' code: '(Smalltalk at: #RBConfigurableFormatter) perform: #oneLineMessages: with: (''#(#to: #to:do: #to:by: #to:by:do:)'')' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Show report summary' code: '(Smalltalk at: #SlReporter) perform: #showSummary: with: (true)' runOnce: true.
	StartupAction name: 'Show notifications' code: '(Smalltalk at: #SlReporter) perform: #showNotification: with: (true)' runOnce: true.
	StartupAction name: 'ShoreLine server address' code: '(Smalltalk at: #SlReporter) perform: #host: with: (''http://shoreline.inf.usi.ch'')' runOnce: true.
	StartupAction name: 'ShoreLine server port' code: '(Smalltalk at: #SlReporter) perform: #port: with: (80)' runOnce: true.
	StartupAction name: 'Class Template with Slots' code: '(Smalltalk at: #Slot) perform: #showSlotClassDefinition: with: (false)' runOnce: true.
	StartupAction name: 'Source Code Fonts' code: '(Smalltalk at: #SourceCodeFonts) perform: #useSourceCode: with: (SourceCodeFonts)' runOnce: true.
	StartupAction name: 'Allow the preferences to be loaded at startup' code: '(Smalltalk at: #StartupPreferencesLoader) perform: #allowStartupScript: with: (true)' runOnce: true.
	StartupAction name: 'Horizontal progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #horizontalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Vertical progress indicator position' code: '(Smalltalk at: #SystemProgressMorph) perform: #verticalPosition: with: (0)' runOnce: true.
	StartupAction name: 'Server mode' code: '(Smalltalk at: #WorldState) perform: #serverMode: with: (false)' runOnce: true.
	StartupAction name: 'Use locale' code: '(Smalltalk at: #Locale) perform: #activated: with: (false)' runOnce: true.
	StartupAction name: 'Keep task list open' code: '(Smalltalk at: #TaskListMorph) perform: #keepOpen: with: (false)' runOnce: true.
	StartupAction name: 'Taskbar' code: '(Smalltalk at: #TaskbarMorph) perform: #showTaskbar: with: (true)' runOnce: true.
	StartupAction name: 'Window preview' code: '(Smalltalk at: #TaskbarMorph) perform: #showWindowPreview: with: (true)' runOnce: true.
	StartupAction name: 'Maximum number of tasks to show' code: '(Smalltalk at: #TaskbarMorph) perform: #maximumButtons: with: (100)' runOnce: true.
	StartupAction name: 'Ignore line endings' code: '(Smalltalk at: #TextDiffBuilder) perform: #ignoreLineEndings: with: (true)' runOnce: true.
	StartupAction name: 'Pretty print differences' code: '(Smalltalk at: #TextDiffBuilder) perform: #diffsWithPrettyPrint: with: (false)' runOnce: true.
	StartupAction name: 'Icon Set' code: '(Smalltalk at: #ThemeIcons) perform: #uiIconClass: with: (EclipseUIThemeIcons)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Send annonymous usage data' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #sendUsageData: with: (false)' runOnce: true.
	StartupAction name: 'Spotter Event Recorder URL address' code: '(Smalltalk at: #GTSpotterEventRecorderSettings) perform: #stringUrl: with: (''http://gc.dcc.uchile.cl.:8080/gt/events'')' runOnce: true.
	StartupAction name: 'The url for the script sharing service' code: '(Smalltalk at: #GTUrlProvider) perform: #stringUrlProvider: with: (''http://ws.stfx.eu/'')' runOnce: true.
	StartupAction name: 'Default' code: '(Smalltalk at: #StandardFonts) perform: #defaultFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Code' code: '(Smalltalk at: #StandardFonts) perform: #codeFont: with: ((LogicalFont familyName: ''Source Code Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'List' code: '(Smalltalk at: #StandardFonts) perform: #listFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Menu' code: '(Smalltalk at: #StandardFonts) perform: #menuFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Button' code: '(Smalltalk at: #StandardFonts) perform: #buttonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 10 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Window title' code: '(Smalltalk at: #StandardFonts) perform: #windowTitleFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 11 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Balloon-help' code: '(Smalltalk at: #StandardFonts) perform: #balloonFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Morphic halo' code: '(Smalltalk at: #StandardFonts) perform: #haloFont: with: ((LogicalFont familyName: ''Source Sans Pro'' fallbackFamilyNames: nil pointSize: 9 stretchValue: 5 weightValue: 400 slantValue: 0))' runOnce: true.
	StartupAction name: 'Growl position' code: '(Smalltalk at: #GrowlMorph) perform: #position: with: (#bottomLeft)' runOnce: true.
	StartupAction name: 'HandMorph event statistics' code: '(Smalltalk at: #HandMorph) perform: #logEventStatsEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Run Long Tests' code: '(Smalltalk at: #LongTestCase) perform: #shouldRun: with: (true)' runOnce: true.
	StartupAction name: 'Default local repository directory' code: '(Smalltalk at: #MCDirectoryRepository) perform: #defaultDirectoryName: with: (''/Users/esteban/Dev/Pharo/xx'')' runOnce: true.
	StartupAction name: 'Local cache directory' code: '(Smalltalk at: #MCCacheRepository) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((AbsolutePath basicNew: 3)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; basicAt: 3 put: ''package-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: #'Code Completion' code: '(Smalltalk at: #NECPreferences) perform: #enabled: with: (true)' runOnce: true.
	StartupAction name: 'Controller' code: '(Smalltalk at: #NECPreferences) perform: #useController: with: (NECController)' runOnce: true.
	StartupAction name: 'Background Color' code: '(Smalltalk at: #NECPreferences) perform: #backgroundColor: with: ((Color r: 0.745 g: 0.745 b: 0.745 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Complete common prefixes using TAB in the suggested completions' code: '(Smalltalk at: #NECPreferences) perform: #expandPrefixes: with: (true)' runOnce: true.
	StartupAction name: 'Use ENTER to accept a suggested completion' code: '(Smalltalk at: #NECPreferences) perform: #useEnterToAccept: with: (true)' runOnce: true.
	StartupAction name: 'Use navigation keys for extended completion functionality' code: '(Smalltalk at: #NECPreferences) perform: #captureNavigationKeys: with: (false)' runOnce: true.
	StartupAction name: 'Case Sensitive' code: '(Smalltalk at: #NECPreferences) perform: #caseSensitive: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters' code: '(Smalltalk at: #NECPreferences) perform: #smartCharacters: with: (true)' runOnce: true.
	StartupAction name: 'Smart Characters with Single Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithSingleSpace: with: ('''')' runOnce: true.
	StartupAction name: 'Smart Characters with Double Space' code: '(Smalltalk at: #NECPreferences) perform: #smartCharactersWithDoubleSpace: with: (''[]{}'')' runOnce: true.
	StartupAction name: 'AST navigation' code: '(Smalltalk at: #NNavNavigation) perform: #useArrowsShortcuts: with: (false)' runOnce: true.
	StartupAction name: 'Open the browser on groups ?' code: '(Smalltalk at: #Nautilus) perform: #openOnGroups: with: (false)' runOnce: true.
	StartupAction name: 'Show hierarchy by default ?' code: '(Smalltalk at: #Nautilus) perform: #sortHierarchically: with: (true)' runOnce: true.
	StartupAction name: 'Set the max size of the navigation history' code: '(Smalltalk at: #Nautilus) perform: #historyMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Switch lists when opening on a class ?' code: '(Smalltalk at: #Nautilus) perform: #switchClassesAndPackages: with: (false)' runOnce: true.
	StartupAction name: 'Set the warning limit of source code pane' code: '(Smalltalk at: #Nautilus) perform: #warningLimit: with: (350)' runOnce: true.
	StartupAction name: 'Enable/disable warning for empty comments' code: '(Smalltalk at: #Nautilus) perform: #emptyCommentWarning: with: (true)' runOnce: true.
	StartupAction name: 'Use old style keys ?' code: '(Smalltalk at: #Nautilus) perform: #useOldStyleKeys: with: (false)' runOnce: true.
	StartupAction name: 'Show DEBUG menu?' code: '(Smalltalk at: #Nautilus) perform: #showDebugMenus: with: (false)' runOnce: true.
	StartupAction name: 'Use HTTP proxy' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useHTTPProxy: with: (false)' runOnce: true.
	StartupAction name: 'Port' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyPort: with: (80)' runOnce: true.
	StartupAction name: 'Server' code: '(Smalltalk at: #NetworkSystemSettings) perform: #httpProxyServer: with: ('''')' runOnce: true.
	StartupAction name: 'Exceptions' code: '(Smalltalk at: #NetworkSystemSettings) perform: #manageHttpProxyExceptions: with: ('''')' runOnce: true.
	StartupAction name: 'Proxy authentication' code: '(Smalltalk at: #NetworkSystemSettings) perform: #useNetworkAuthentification: with: (false)' runOnce: true.
	StartupAction name: 'User name' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyUser: with: ('''')' runOnce: true.
	StartupAction name: 'Password' code: '(Smalltalk at: #NetworkSystemSettings) perform: #proxyPassword: with: ('''')' runOnce: true.
	StartupAction name: 'Blab email' code: '(Smalltalk at: #NetworkSystemSettings) perform: #blabEmail: with: ('''')' runOnce: true.
	StartupAction name: 'Use Polymorph difference tools' code: '(Smalltalk at: #PSMCPatchMorph) perform: #usedByDefault: with: (true)' runOnce: true.
	StartupAction name: 'Show groups on top ?' code: '(Smalltalk at: #PackageTreeNautilus) perform: #showGroupsOnTop: with: (true)' runOnce: true.
	StartupAction name: 'Systembrowser' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #browserTool: with: (PackageTreeNautilus)' runOnce: true.
	StartupAction name: 'Inspector' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #inspectorTool: with: (GTInspector)' runOnce: true.
	StartupAction name: 'Workspace' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #workspaceTool: with: (GTPlayground)' runOnce: true.
	StartupAction name: 'Debugger' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #debuggerTool: with: (SpecDebugger)' runOnce: true.
	StartupAction name: 'Messagelist' code: '((Smalltalk at: #Smalltalk) perform: #tools) perform: #messageListTool: with: (MessageBrowser)' runOnce: true.
}.

!----End fileIn----!StartupLoader default executeAtomicItems: {
	StartupAction name: 'Default Compiler' code: '(Smalltalk at: #SmalltalkImage) perform: #compilerClass: with: (OpalCompiler)' runOnce: true.
	StartupAction name: 'Bytecode Backend' code: '(Smalltalk at: #CompilationContext) perform: #bytecodeBackend: with: (EncoderForV3PlusClosures)' runOnce: true.
	StartupAction name: 'Author identification' code: '(Smalltalk at: #Author) perform: #fullName: with: (''northEast'')' runOnce: true.
	StartupAction name: 'Make a snapshot of new version before quit' code: '(Smalltalk at: #CommandLineUIManager) perform: #snapshotErrorImage: with: (false)' runOnce: true.
	StartupAction name: 'Raise a blocking dialog' code: '(Smalltalk at: #Deprecation) perform: #raiseWarning: with: (true)' runOnce: true.
	StartupAction name: 'Transcript message' code: '(Smalltalk at: #Deprecation) perform: #showWarning: with: (true)' runOnce: true.
	StartupAction name: 'Enable cmd-dot interrupt key' code: '(Smalltalk at: #UserInterruptHandler) perform: #cmdDotEnabled: with: (true)' runOnce: true.
	StartupAction name: 'Process browser monitors CPU usage' code: '(Smalltalk at: #CPUWatcher) perform: #cpuWatcherEnabled: with: (false)' runOnce: true.
	StartupAction name: 'Flash damaged morphic region' code: '(Smalltalk at: #WorldState) perform: #debugShowDamage: with: (false)' runOnce: true.
	StartupAction name: 'Write message to debug log file when fall into debugger' code: '(Smalltalk at: #SpecDebugger) perform: #logDebuggerStackToFile: with: (true)' runOnce: true.
	StartupAction name: 'Directly open the full Debugger' code: '(Smalltalk at: #SpecDebugger) perform: #alwaysOpenFullDebugger: with: (false)' runOnce: true.
	StartupAction name: 'Filter out common message sends' code: '(Smalltalk at: #SpecDebugger) perform: #filterCommonMessageSends: with: (false)' runOnce: true.
	StartupAction name: 'Filter out doIt sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterDoItSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out nil message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterNilSelectors: with: (false)' runOnce: true.
	StartupAction name: 'Filter out kernel classes message sends' code: '(Smalltalk at: #SpecDebuggerStack) perform: #filterKernelClasses: with: (false)' runOnce: true.
	StartupAction name: 'Log file name' code: '(Smalltalk at: #Smalltalk) perform: #logFileName: with: (''PharoDebug.log'')' runOnce: true.
	StartupAction name: 'Delay Scheduler' code: '(Smalltalk at: #Delay) perform: #delaySchedulerClass: with: (DelayMicrosecondScheduler)' runOnce: true.
	StartupAction name: 'Size of the Unselected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedUnselectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Size of the Selected Items History' code: '(Smalltalk at: #DialogItemsChooserUI) perform: #alreadySearchedSelectedItemsListMaxSize: with: (15)' runOnce: true.
	StartupAction name: 'Selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Unfocused selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #unfocusedSelectionColor: with: ((Color r: 0.729 g: 0.8320000000000001 b: 0.934 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Show the colored bar on the current line' code: '(Smalltalk at: #TextEditor) perform: #useSelectionBar: with: (true)' runOnce: true.
	StartupAction name: 'Selection bar color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #selectionBarColor: with: ((Color r: 0.686 g: 0.835 b: 0.979 alpha: 0.059000000000000004))' runOnce: true.
	StartupAction name: 'Use the secondary selection' code: '(Smalltalk at: #TextEditor) perform: #useSecondarySelection: with: (true)' runOnce: true.
	StartupAction name: 'Secondary selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionColor: with: ((Color r: 0.927 g: 0.962 b: 0.995 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Secondary selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #secondarySelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Use the find and replace selection' code: '(Smalltalk at: #TextEditor) perform: #useFindReplaceSelection: with: (true)' runOnce: true.
	StartupAction name: 'Find replace selection color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionColor: with: ((Color r: 1.0 g: 0.6 b: 0.0 alpha: 0.4))' runOnce: true.
	StartupAction name: 'Find replace selection text color' code: '((Smalltalk at: #UITheme) perform: #currentSettings) perform: #findReplaceSelectionTextColor: with: ((Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0))' runOnce: true.
	StartupAction name: 'Case sensitive search' code: '(Smalltalk at: #TextEditor) perform: #caseSensitiveFinds: with: (false)' runOnce: true.
	StartupAction name: 'Blinking text cursor' code: '(Smalltalk at: #Editor) perform: #blinkingCursor: with: (true)' runOnce: true.
	StartupAction name: 'Dumbbell-shaped text cursor' code: '(Smalltalk at: #Editor) perform: #dumbbellCursor: with: (false)' runOnce: true.
	StartupAction name: 'Skip over white space' code: '(Smalltalk at: #Editor) perform: #skipOverMultipleSpaces: with: (false)' runOnce: true.
	StartupAction name: 'Walk along displayed line' code: '(Smalltalk at: #TextEditor) perform: #walkAlongDisplayedLine: with: (true)' runOnce: true.
	StartupAction name: 'Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #noFt2Library: with: (''Free type fonts are not available'')' runOnce: true.
	StartupAction name: 'Use Free type' code: '(Smalltalk at: #FreeTypeSystemSettings) perform: #loadFt2Library: with: (true)' runOnce: true.
	StartupAction name: 'Update fonts at startup' code: '(Smalltalk at: #FreeTypeSettings) perform: #updateFontsAtImageStartup: with: (false)' runOnce: true.
	StartupAction name: 'Glyph contrast' code: '((Smalltalk at: #FreeTypeSettings) perform: #current) perform: #glyphContrast: with: (55.0)' runOnce: true.
	StartupAction name: 'Number of inspector panes' code: '(Smalltalk at: #GTInspector) perform: #numberOfInspectorPanes: with: (2)' runOnce: true.
	StartupAction name: 'GTInspector' code: '(Smalltalk at: #GTInspector) perform: #setGTInspectorEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Inspector width' code: '(Smalltalk at: #GTInspector) perform: #preferredWidth: with: (834.0)' runOnce: true.
	StartupAction name: 'Inspector height' code: '(Smalltalk at: #GTInspector) perform: #preferredHeight: with: (606.0)' runOnce: true.
	StartupAction name: 'Remember extent of Inspector' code: '(Smalltalk at: #GTInspector) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
	StartupAction name: 'GTPlayground' code: '(Smalltalk at: #GTPlayground) perform: #setGTPlaygroundEnabledStatus: with: (true)' runOnce: true.
	StartupAction name: 'Local Playground cache directory' code: '(Smalltalk at: #GTPlayBook) perform: #cacheDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-cache''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Local Playground stash directory' code: '(Smalltalk at: #GTPlayBook) perform: #stashDirectory: with: ((FileReference basicNew instVarAt: 1 put: (FileSystem basicNew instVarAt: 1 put: ((AbsolutePath basicNew: 2)  basicAt: 1 put: ''C:''; basicAt: 2 put: ''Pharo4.0''; yourself); instVarAt: 2 put: (WindowsStore basicNew instVarAt: 1 put: 255; instVarAt: 2 put: nil; yourself); yourself); instVarAt: 2 put: ((RelativePath basicNew: 1)  basicAt: 1 put: ''play-stash''; yourself); yourself))' runOnce: true.
	StartupAction name: 'Playground width' code: '(Smalltalk at: #GTPlayground) perform: #preferredWidth: with: (600)' runOnce: true.
	StartupAction name: 'Playground height' code: '(Smalltalk at: #GTPlayground) perform: #preferredHeight: with: (400)' runOnce: true.
	StartupAction name: 'Remember extent of Playground' code: '(Smalltalk at: #GTPlayground) perform: #rememberPreferredExtent: with: (true)' runOnce: true.
}.

!----End fileIn----!Object subclass: #Moovie	instanceVariableNames: 'users movies'	classVariableNames: ''	poolDictionaries: ''	category: 'Promocion-ObjetosII'!!Moovie methodsFor: 'initialization' stamp: 'Anonymous 5/11/2016 20:03'!initialize	super initialize.	self users: OrderedCollection new.	self movies: OrderedCollection new.! !!Moovie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 11:41'!mejoresPelículas"Retorna una colección con las 10 películas que en tienen el promedio derating mayor,ordenada en forma descendente"^(self movies asSortedCollection: [ :m1 :m2 | m1 averageVotes > m2 averageVotes ])first: 10.! !!Moovie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/10/2016 18:34'!loadData|temp|temp:=MoovieLoader new.temp importAllData: self users and: self movies. ! !!Moovie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 11:43'!usuariosMásActivos"Retorna una colección con los 10 usuarios que han realizado el mayornúmero de clasificaciones de películas, ordenada en forma descendente"^(self users asSortedCollection: [ :m1 :m2 | m1 ratingsCount > m2 ratingsCount ])first: 10.! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 12:13'!movieForID: idMovie  "devuelve la pelicula con el id pasado como parametro"	^(self movies detect: [ :movie | movie movieid = idMovie]	 ifNone: [ self error: 'La pelicula no existe'. ^nil ]	)! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:09'!movies	^movies! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 16:56'!existsUser: aUser"Devuelve true si un usuario determinado existe en la lista de usuarios y false en caso contrario."	^(self users includes: aUser)! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 16:58'!existsMovie: aMovie"Devuelve true si una pelicula determinada existe en la lista de peliculas y false en caso contrario."	^(self movies includes: aMovie)! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 11:48'!addUsers: aUserCollection"Agrega usuarios desde una coleccion a la lista de usuarios"	aUserCollection do: [ :u | self addUser: u ]! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 11:47'!addMovies: aMovieCollection"Agrega peliculas desde una coleccion a la lista de peliculas"	aMovieCollection do: [ :m | self addMovie: m ]! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 11:48'!addUser: aUser"Agrega un usuario nuevo a la lista de usuarios"	(self existsUser: aUser)	ifFalse: [ self users add: aUser]	ifTrue: [ self error: 'Ese usuario ya existe, no puedes agregarlo.' ]! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 11:48'!addMovie: aMovie"Agrega una pelicula nueva a la lista de peliculas"	(self existsMovie: aMovie)	ifFalse: [ self movies add: aMovie]	ifTrue: [ self error: 'Esa pelicula ya existe, no puedes agregarla.' ]! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 16:57'!movies: anObject	movies := anObject! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 16:57'!users: anObject	users := anObject! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:10'!users	^users! !!Moovie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 12:11'!userForId: idUser"devuelve el usuario con el id pasado como parametro"	^(self users detect: [ :u1 | u1 = idUser]	 ifNone: [ self error: 'Ese usuario no existe'. ^nil ]	)! !Object subclass: #MoovieReader	instanceVariableNames: 'filename elements'	classVariableNames: ''	poolDictionaries: ''	category: 'Promocion-ObjetosII'!!MoovieReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/4/2016 13:52'!read"Lee el archivo hasta terminar"	| readStream |	readStream := filename asFileReference readStream.	[readStream atEnd] whileFalse: [self addElementFrom: readStream]! !!MoovieReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/4/2016 13:52'!elements	^elements! !!MoovieReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/4/2016 13:51'!filename: aString"asigna a filename la ruta del archivo a leer"	filename := aString.	filename asFileReference exists ifFalse: [self error: 'File does not exist']! !!MoovieReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/4/2016 13:52'!addElementFrom: readStream	self subclassResponsibility! !MoovieReader subclass: #RatingsReader	instanceVariableNames: 'movies users'	classVariableNames: ''	poolDictionaries: ''	category: 'Promocion-ObjetosII'!!RatingsReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 20:07'!movies:moviesCollectionmovies:=moviesCollection 		 	! !!RatingsReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 21:52'!users^users	 	! !!RatingsReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/11/2016 20:07'!addElementFrom: readStream	"Carga calificaciones de peliculas hechas por usuarios existentes desde un archivo externo que debe cumplir con el siguiente formato:							userid | timestamp | movieid | rating"	| user rating movie line |	line := readStream nextLine findTokens: ' | '.	user := self users at: (line at: 1) asInteger ifAbsent: [ 'No existe usuario' ].	"busca usuario por id y asigna"	movie := self movies at: (line at: 3) asInteger ifAbsent: [ 'No existe pelicula' ].	"busca pelicula por id y asigna"	rating := Rating new. "instancia rating"	rating		user: user;		movie: movie;		rating: (line at: 4);		timestamp: (DateAndTime fromUnixTime: (line at: 2)).	user addRating: rating. "agrega el rating al usuario"	movie addVote: rating rating  "agrega solo la calificacion a la pelicula"! !!RatingsReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 20:08'!users:usersCollectionusers:=usersCollection .	 	! !!RatingsReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 21:52'!movies^movies		 	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!RatingsReader class	instanceVariableNames: ''!!RatingsReader class methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 22:08'!newMovies:moviesCollection Users:usersCollection^self new	users:usersCollection ;	movies:moviesCollection;	yourself.! !MoovieReader subclass: #FriendsReader	instanceVariableNames: 'users'	classVariableNames: ''	poolDictionaries: ''	category: 'Promocion-ObjetosII'!!FriendsReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/11/2016 19:50'!users:aCollectionusers:=aCollection! !!FriendsReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/11/2016 19:54'!users^users! !!FriendsReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/11/2016 20:08'!addElementFrom: readStream	| line user friend |	line := readStream nextLine findTokens: '|'.	user := self users at: (line at: 1) asInteger.	friend := self users at: (line at: 2) asInteger.	user addFriend: friend! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!FriendsReader class	instanceVariableNames: ''!!FriendsReader class methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/4/2016 16:20'!newUsers:usersCollection^self new	users:usersCollection ;	yourself.! !Object subclass: #MoovieLoader	instanceVariableNames: 'usersTemp moviesTemp'	classVariableNames: ''	poolDictionaries: ''	category: 'Promocion-ObjetosII'!!MoovieLoader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 18:08'!usersTemp^usersTemp ! !!MoovieLoader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 18:33'!importAllData:users and:movies	self importMoviesFromFile: 'u.item.new.csv'.	self importUsersFromFile: 'u.user.csv.'.	self importRatingsFromFile: 'u.data.new.csv'.	self importFriendsFromFile: 'u.connection.csv'.	 users addAll: usersTemp .	movies addAll:moviesTemp.! !!MoovieLoader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 18:08'!moviesTemp^moviesTemp ! !!MoovieLoader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 18:08'!importMoviesFromFile: aString"Importa las peliculas de un archivo externo"	| reader |	reader := MoviesReader new.	reader filename: aString.	reader read.	self moviesTemp addAll: reader elements! !!MoovieLoader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 18:09'!initialize	super initialize.	usersTemp:= Dictionary new.	moviesTemp:=Dictionary new.! !!MoovieLoader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 18:10'!importUsersFromFile: aString"Importa los usuarios de un archivo externo"	| reader |	reader := UsersReader new.	reader filename: aString.	reader read.	self usersTemp addAll: reader elements! !!MoovieLoader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 18:06'!baseDirectoryName		^FileSystem workingDirectory fullName, '/' ! !!MoovieLoader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/11/2016 19:57'!importRatingsFromFile: aString"Importa los ratings de un archivo externo"	| reader |	reader := RatingsReader newMovies: moviesTemp Users: usersTemp .	reader filename: aString.	reader read.	! !!MoovieLoader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/11/2016 19:57'!importFriendsFromFile: aString"Importa la red de amistades de los usuarios"	| reader |	reader := FriendsReader newUsers: usersTemp.	reader filename: aString.	reader read.! !MoovieReader subclass: #MoviesReader	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Promocion-ObjetosII'!!MoviesReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/4/2016 14:22'!initializesuper initialize.elements := Dictionary new.! !!MoviesReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/11/2016 20:08'!addGenre: aCollection for: aMovie	"Recibe por parametro los 10 generos(1 o 0) y agrego los generos que posee la pelicula."	| genre genreValue |	genre := #('unknown' 'Action' 'Adventure' 'Animation' 'Childrens' 'Comedy' 'Crime' 'Documentary' 'Drama' 'Fantasy' 'Film-Noir' 'Horror' 'Musical' 'Mystery' 'Romance' 'Sci-Fi' 'Thriller' 'War' 'Western').	genreValue := OrderedCollection new.	1 to: 19 do: [ :mark | 		(aCollection at: mark) = $1			ifTrue: [ genreValue add: (genre at: mark) ] ].	aMovie addGenres: genreValue! !!MoviesReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/11/2016 20:08'!addElementFrom: readStream	"Carga peliculas desde un archivo externo que debe cumplir con el siguiente formato:	movieid|movietitle|releasedate|IMDbURL|unknown|Action|Adventure|Animation|Children's|Comedy|Crime|Documentary|Drama|Fantasy|Film­Noir|Horror|Musical|Mystery|Romance|Sci­Fi|Thriller|War|Western	Los ultimos 19 campos son generos que contendran 1 o 0 interpretando booleano."	| movie line |	line := readStream nextLine findTokens: '|'.	movie := Movie newWithTitle: (line at: 2) release: (line at: 3).	self addGenre: (line last: 19) for: movie.	elements at: (line at: 1) asInteger put: movie! !Object subclass: #User	instanceVariableNames: 'firstName lastName age occupation zipCode friends ratings'	classVariableNames: ''	poolDictionaries: ''	category: 'Promocion-ObjetosII'!!User methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:44' prior: 35413221!age: anObject	age := anObject! !!User methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:47' prior: 35337481!zipCode: anObject	zipCode := anObject! !!User methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:47'!lastName: anObject	lastName := anObject! !!User methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:47' prior: 35337291!occupation: anObject	occupation := anObject! !!User methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:47' prior: 35337203!occupation	^occupation! !!User methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:45'!firstName	^firstName! !!User methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:47' prior: 35337399!zipCode	^zipCode! !!User methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:44' prior: 35413147!age	^age! !!User methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:46'!lastName	^lastName! !!User methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:45'!firstName: anObject	firstName := anObject! !!User methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 12:05' prior: 35633595!= otherUser"Comprueba usuario es igual a otro, retornando true o false correspondientemente."	^(otherUser firstName = self firstName) &	(otherUser lastName = self lastName) &	(otherUser age = self age) &	(otherUser occupation = self occupation ) &	(otherUser zipCode = self zipCode )! !!User methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 18:05'!addRating: anVote"Agrega un voto al rating."	(self isVote: anVote)    ifFalse: [ self ratings add: anVote.		Transcript cr; show: ' se registro el voto.' 		]	ifTrue: [ self error: 'ya habia votado' ]! !!User methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 12:01' prior: 35543743!isFriend: anUser"Comprueba si un usuario esta en la lista de amigos"	^(self friends includes: anUser)! !!User methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 11:53' prior: 35629329!addFriend: anUser"Agrega un usuario a la lista de amigos."	(self isFriend: anUser)	ifFalse: [ anUser friends add: self .		self friends add: (anUser).		Transcript cr; show: self lastName; show: ' y '; show: anUser firstName ; show: ' ahora son amigos.' 		]	ifTrue: [ self error: 'Ya son amigos.' ]! !!User methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 02:16' prior: 35336257!initialize	super initialize.	friends := Set new.	ratings := Set new.! !!User methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 02:42'!ratings	^ratings ! !!User methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 11:54' prior: 35543337!deleteFriend: anUser"Elimina un usuario de la lista de amigos."	(self isFriend: anUser)	ifTrue: [ anUser friends remove: self.		self friends remove: anUser.		Transcript cr; show: self lastName; show: ' y '; show: anUser firstName; show: ' ya no son amigos.' 		]	ifFalse: [ self error: 'No son amigos' ]! !!User methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 01:48' prior: 35337583!friends^friends.! !!User methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 18:00'!isVote: anVote"Comprueba si un voto ya fue registrado"	^(self ratings includes: anVote)! !!User methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 18:33'!ratingsCount^self ratings size.! !Object subclass: #Movie	instanceVariableNames: 'title releasedDate genre votes'	classVariableNames: ''	poolDictionaries: ''	category: 'Promocion-ObjetosII'!!Movie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:00' prior: 35338184!title: anObject	title := anObject! !!Movie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:59'!releasedDate: anObject	releasedDate := anObject! !!Movie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:00' prior: 35338105!title	^title! !!Movie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:56'!genre	^genre! !!Movie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:59'!releasedDate	^releasedDate! !!Movie methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 01:56'!genre: anObject	genre := anObject! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 18:31'!numberOfVotes"devuelve la cantidad de votos que recibio la pelicula"^votes size.! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/10/2016 20:28' prior: 35903326!= otherMovie	^(self title = otherMovie title)&	(self releasedDate  = otherMovie releasedDate ).! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 18:30'!totalVotes"devuelve la suma de todos los votos" ^ votes inject: 0 into:[:sum :aVote| sum + aVote  ] ! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 11:26'!deleteVote: aVote"Borra un voto que se le realizo a la pelicula"	votes delete:aVote.! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 17:32' prior: 35411955!addGenre: unGenero"Agrega un genero a la lista de generos de la pelicula."	self genre add: unGenero! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 17:31' prior: 35430670!initialize	genre:= OrderedCollection new.	votes:= OrderedCollection new.! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 17:53'!isVote:aVote"Comprueba si un voto ya estaba registrado"	^(self votes includes: aVote)! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 17:34' prior: 35576854!addGenres: aGenres"Agrega generos desde una coleccion a la lista de generos de la pelicula."	self genre addAll: aGenres.! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/10/2016 21:19'!printOn: aStreamaStream nextPutAll: title; nextPutAll:' releasedDate: '; nextPutAll: releasedDate printString.! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 11:39'!averageVotes"devuelve el promedio de todos los votos que recibio la pelicula" ^self totalVotes / self numberOfVotes.! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 11:27'!votes^votes.! !!Movie methodsFor: 'as yet unclassified ' stamp: 'Anonymous 5/4/2016 11:24'!addVote: aVote"Agrega un voto que se le realizo a la pelicula"	votes add:aVote.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Movie class	instanceVariableNames: ''!!Movie class methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/10/2016 20:50'!newWithTitle: unNombre release: unaFecha	^self new	title: unNombre;	releasedDate:  unaFecha;	yourself.! !MoovieReader subclass: #UsersReader	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Promocion-ObjetosII'!!UsersReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/4/2016 14:21'!initialize	super initialize.	elements := Dictionary new.! !!UsersReader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/11/2016 20:07'!addElementFrom: readStream	"Creo usuario, cargo sus datos del archivo, agrego el usuario con el ID como indice, que debe cumplir con el siguiente formato: userid|age|gender|occupation|zipcode|FirstName|LastName"	| user line |	user := User new.	line := readStream nextLine findTokens: '|'.	user		firstName: (line at: 6);		lastName: (line at: 7);		age: (line at: 2) asInteger;		occupation: (line at: 4);		zipCode: (line at: 5) asInteger.	elements at: (line at: 1) asInteger put: user! !Object subclass: #Rating	instanceVariableNames: 'user movie rating timestamp'	classVariableNames: ''	poolDictionaries: ''	category: 'Promocion-ObjetosII'!!Rating methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:03'!movie^movie! !!Rating methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:03'!movie: aMovie^movie:= aMovie! !!Rating methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:04'!timestamp	^ timestamp! !!Rating methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:04' prior: 35546455!user: anObject	user := anObject! !!Rating methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:04' prior: 35284835!rating: anObject	rating := anObject! !!Rating methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:04' prior: 35546046!user	^ user! !!Rating methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:04'!timestamp: anObject	timestamp := anObject! !!Rating methodsFor: 'accesing' stamp: 'Anonymous 5/4/2016 02:04' prior: 35278100!rating	^ rating! !TestCase subclass: #TestMoovie	instanceVariableNames: 'moovie movie1 movie2 rating user1 user2 user3'	classVariableNames: ''	poolDictionaries: ''	category: 'Promocion-ObjetosII'!!TestMoovie methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/11/2016 20:13'!setUp	moovie:= Moovie new.	user1:= User new firstName: 'Andres'; lastName: 'Garcia'; age: 49; occupation: 'oficinista'; zipCode: 1900.	user2:= User new firstName: 'Nicolas'; lastName: 'Perez'; age: 32; occupation: 'chofer'; zipCode: 1920.	user3:= User new firstName: 'Jorge'; lastName: 'Gonzalez'; age: 23; occupation: 'empresario'; zipCode: 1930.	movie1:= Movie new  title: 'Terminator'; releasedDate: 1985.	movie2:= Movie new title: 'Troya'; releasedDate: 1993.	moovie movies add: movie1.		! !!TestMoovie methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/4/2016 18:40'!testRemoveFriend	user1 friends add: user2.	user2 friends add: user1.	self assert: (user1 isFriend: user2).	user1 deleteFriend: user2.	self deny: (user2 isFriend: user1).	! !!TestMoovie methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/4/2016 18:41'!testAddFriend	user1 addFriend: user2.	self assert: (user1 isFriend: user2).	self assert: (user2 isFriend: user1).	! !----End fileIn----!